author,updated_at,like_count,text,public
@ismaeldescoings,2023-07-28T10:18:03Z,0,"What happens if you define the decorator function to take in several arguments like this: ```def decorator_function(original_function, extra_argument):``` ? Does it have any functionality or do you just get an error message?",True
@wongkingshun,2023-05-03T12:33:29Z,0,I dont understand much..,True
@youngsinatra1237,2023-04-29T19:40:21Z,3,"Hey Corey, I came to your video from my Udemy lesson. I ALWAYS DO. You explain everything so simply. I wish you had a Full Python tutorial.",True
@ashim9898,2023-02-14T17:32:31Z,0,Thanks,True
@MrSavindrasingh,2022-12-29T13:40:49Z,1,"It is still not clear how in flask or fastAPI, the @app.route(‚Äú‚Äù) method is implemented. Your decorator is still using @decorator(‚Äúargs‚Äù)",True
@NekoManAICore,2022-12-02T17:28:24Z,0,thx u!<3,True
@apffer,2022-11-21T16:13:17Z,0,"just looking at the code you are showing in the beginning solved my problem, thanks! üëçüèª and the rest of the video taught me something i wasn‚Äôt looking for. Excelent.",True
@scullyy,2022-09-27T12:18:43Z,1,"Bit off topic, but there doesn't seem to be any functools.wrap method for class decorators? Why then do some people prefer using that?",True
@edsonmatheus7976,2022-09-03T01:57:26Z,0,"I see these decorators all the time in wrapper libraries for discord API and telegram API, now I can understand what they're doing :)",True
@robertschmidt8624,2022-07-07T01:21:27Z,0,"Sorry Corey, but You need to rerecord this video becuase it's far too difficult to read.  I'm not an expect on Python, but I do know alot about video.  And, this should not have been uploaded to YouTube.   It's far too diffucult to read.",True
@AJ-et3vf,2022-06-20T06:44:02Z,0,Awesome video! Thank you!,True
@shaktijain8560,2022-06-11T14:09:47Z,0,Simply amazing!!!,True
@ADQ82,2022-05-31T06:20:07Z,0,Thank you.,True
,2022-05-16T02:51:05Z,0,"Great series, thank you! Screen resolution is often too high. Rule of the thumb: All text should be readable on a 13 inch screen.",True
@ainerihari4493,2022-03-03T17:10:44Z,1,Simply good and awesome! üëç,True
@muntadher8087,2022-01-05T10:39:30Z,0,Thank you so much! I'm learning so much out of your informative videos God bless you! thanks thanks,True
@munteanionut3993,2021-11-15T14:34:09Z,3,"Thanks a lot! One question: in your previous videos you mentioned that the equivalent of ""decorating"" a function `f` with a decorator `dec` would be: `f = dec(f)` For instance,: `display_info = my_timer(display_info)` if you recall.  What would be the equivalent here in our case? Would it be `display_info = prefix_decorator('TESTING:')(display_info)`? (first the argument passed to the prefix_decorator, enclosed in parantheses, and then the function that we pass to the inner wrapper_function, enclosed in parantheses?  Basically,  to paraphrase & generalize this:  if we have multiple levels of nesting -say `k` levels`, then the expression I m asking for would look like: orig_function = decorator_level1(*args,**kwargs)(*args2,**kwargs2).......(*argsK-1, **kwargsK-1)(orig_function)`... am I right?  where decorator_level1 would be the top-most decorator (the one glued to the left-margin of the IDE, to be more precise : )) )",True
@sundaymanali5854,2021-08-02T07:20:05Z,0,why did it execute before calling the decorator function at the end? prefix decorator calls both?,True
@elliot4252,2021-07-25T22:32:20Z,0,"I thought this would take an hour or so to understand, thanks for breaking it down into 6 minutes aha. I understood it all!",True
@Tyokok,2020-10-05T03:28:49Z,0,thanks for the great video! can you also explain some user cases of decorator? from samples here i don't see the motivation of using decorator. thanks!,True
@jamesdevadatta1215,2020-10-03T16:41:45Z,0,func-ception,True
@liamhan8145,2020-09-25T23:30:03Z,0,"Is it safe to assume that most decorators that take an argument (e.g. @prefix_decorator(arugument1,argument2)) will be at least 2 nested loop?",True
@chetanbajaj8329,2020-07-19T06:19:27Z,5,"Can you explain how it is actually being called . How is the function being passed to the decorator_function() , shouldn't we get an error that it is expecting a function but none is being passed.",True
@sonumpsah1,2020-06-01T07:15:40Z,0,@corey Is there any way to achieve same using class decorator method?,True
@sriramrimmalapudi,2020-05-28T02:26:18Z,2,Just for some more clarification. Here display_info is going to referent <function prefix_decorator.<locals>.decorator_function.<locals>.wrapper at 0x109313670>,True
@bhawnagarg693,2020-04-24T16:20:19Z,0,"Hi Corey, amazing explanation. Can you make videos on Docker and Kubernetes, please",True
@wasitechlearning,2020-04-15T16:23:10Z,0,"It is really confusing, actually where we are going to use it?",True
@ChronoPhoenix,2020-04-07T23:01:13Z,0,You just explain. That's how it should be.,True
@anandkumar-jb9iv,2020-04-07T09:07:54Z,0,can you please explain this code line by line,True
@hubertcombomarketing2693,2020-04-03T05:17:17Z,1,Great tutorials. Thank You.,True
@user-ix7jo2wk2w,2020-03-11T16:33:29Z,1,you have natural talent for teaching. Thx!,True
@user-xc5xf8gp8n,2020-03-05T18:08:18Z,7,"I believe this comment will help many people out. At the end of this video, people could be confused because they think, ""A function has to be passed into the decorator, but in Corey's example, the string 'log:' was already given as an argument! Then does this mean *display_info = prefix_decorator('log:')* ?"" I have an answer. Nope. it is *display_info = prefix_decorator('log:')()* Do you see the *extra* brackets at the end?   A good way interpreting this would be using a substitution. Looking at the return value of 'prefix_decorator function', we know that  *prefix_decorator('log:')*   equals *decorator_function*  Therefore   *@prefix_decorator('log:')* equals *@decorator_function*   Resulting in *@prefix_decorator('log:')* *def print_func():*     *print('x')*  being the same as  *@decorator_function* *def print_func():*     *print('x')*  which is eventually  *def print_func():*     *print('x')* *print_func = decorator_function(print_func)*",True
@amirtharajjain,2020-01-07T05:38:44Z,1,It's really good,True
@gaby1491,2020-01-02T14:45:11Z,0,"Thank you for the example, but using nested functions like this is ugly code IMO",True
@piotrmazgaj,2019-12-21T12:40:21Z,15,"I was wondering, with out decorators, just to see logic:   display_info=prefix_decorator('LOG: ')(display_info)",True
@iambhanu7,2019-08-11T15:08:26Z,1,"Corey by far gives the best explanations with good concise introductions of relevant prerequisite concepts. But this video was tough to follow. I feel  this one is missing an intro to how the python interpreter will deal  with a decorator with arguments. In the previous video, the explanation is very clear:  @decorator_func myfunc():  is equivalent to myfuc = decorator_func(my_func)  Such an explanation is lacking here.",True
@italonesi,2019-07-23T20:59:49Z,8,That was the most beautiful example and definition of @decorators I have seen,True
@johndoeisme,2019-02-24T10:31:07Z,1,"Can I please ask why you return result from your decorator function? Is it because we cannot predict which value the decorated function will return, in this case, it is a None, but it might have been something else.",True
@andreasmiles6066,2018-12-26T21:55:27Z,1,"Thanks, as always great quality content. I like the fact other people too are on ""first name terms"" with you despite the one way channel of communication.",True
@sanjaychamlagain327,2018-12-24T20:09:36Z,0,Can anyone help me to code this functionality using class?????,True
@bestest43,2018-12-19T05:12:50Z,0,"hey there, great playlist btw. Really learning key points about Python, thanks to you. And most importantly I am enjoying while watching your tutorials. Here is my question. Let's say if I would want to put prefix ""TESTING"" for one user and put ""LOG"" for another user. I could not achieve by myself. The solution seemed to be duplication functions but I know it is nonesense :)",True
@nasalee3729,2018-10-15T10:48:17Z,0,"I confused about line 9   'return result' and the final output.  and I thought the output should be like this: ""Executed Before display_info"" ""Executed After display_info "" ""display_info ran with arguments (John, 25)"", So I put all the codes in visualize python website http://www.pythontutor.com. When on step 15,  the ""Return value is None"", then I remove the line 9. this codes has the same output as the yours. Removing this line('return result')  is right or wrong?",True
@khushbootiwari4688,2018-07-30T02:15:16Z,0,hi @corey can you please describe implementation of design patterns (singleton abstract factory etc) in python. thanks in anticipation.,True
@mudithhimwan2442,2018-06-19T07:19:17Z,71,I usually use ad block on YouTube but before clicking on Corey's videos I always make sure to turn it off. Thanks so much Corey :),True
@KrystianRaj,2018-01-02T19:07:53Z,0,Simple and perfect! Thank you!,True
@disooqi,2017-12-31T02:18:54Z,1,I have taken a course in university a bout programming concepts it was dry and hard to get but with you I watch your videos in my spare time as it is something fun... thanks Corey,True
@haoyangrocks,2017-10-26T14:37:33Z,0,Thank you so much and great job explaining this technique!!!  I think my head exploded after watching this video for the first time.  But I watched it the second time and then I was able to get a handle on this concept.,True
@pararmald,2017-08-02T12:16:39Z,0,Thank you!,True
@xelha2,2017-07-13T04:01:51Z,0,High quality as always! Thank you.,True
@antoniosskourtis338,2017-06-25T17:47:45Z,3,"Hi Corey! I have a question I hope you can answer. In your wrapper function you declare ""result = original_function(*args, **kwargs)"" and then a bit further down you return result. Is this really necassary since the original_function is actually printing something? My question is really when you call original_function(*args, **kwargs) isn't the original function executing its print statement directly? I hope you understand what I mean =) BR //Antonios",True
@sznhhnsz2008,2017-04-25T03:13:55Z,9,"Hi Corey, can you explain a little bit on how the prefix_decorator() works in this example? I was trying to understand it in the way you described in your previous decorator video by converting it into: display_info = prefix_decorator('LOG:', display_info), but the prefix_decorator() only take one arg 'prefix', so I don't understand how both the 'LOG:' and the display_info() was passed into the decorator function?",True
@Zwork101,2017-04-12T03:45:09Z,0,Every video you make is always so high quality! Do you think you could make a threading tutorial?,True
@kartiksibal,2017-04-08T13:20:37Z,1,Amazing videos corey!  It'd also be amazing if you maybe could add tutorials for code testing in python.  Cheers!,True
@kAlhooti1,2017-04-03T18:51:10Z,0,Do you have any tutorials on python iterators and generators!!. Thanks for these great videos,True
@kAlhooti1,2017-04-03T12:51:24Z,0,"thank you very much for the tutorials, please keep it up and bring more python tutorials specially in science domain. Can you please make some tutorial into abstract classes and meta-classes.",True
@robinsiwach4163,2017-04-01T03:16:14Z,1,Amazing tuts. Hey please make a complete series on data structures implemented in python that covers some advance data structures too like they have done in book by Michael T Goodrich,True
@sumitsinghal8221,2017-03-30T14:00:09Z,8,"Hi Corey, Again a wonderful tutorial. It would be a great help if you add videos for descriptors and metaclasses too.",True
@Mrjarnould,2017-03-29T22:24:18Z,1,"As always, great video! Keep it up.",True
@playgoods,2017-03-28T00:45:44Z,0,big thank you :) i wash tutorial for flask application please :),True
@ThulsiKrishnan,2017-03-27T20:11:48Z,0,"Thanks Corey. If its not too much to ask, would be great if you could cover some utility libraries like httplib2 or frameworks like django, flask, cherrypy?",True
@songokussj4cz,2017-03-27T17:44:33Z,0,"Hi, excellent tutorial as always. Any chance to do a future tutorial (for beginners) on Flask except more thoroughly? All other tutorials show just basics or some parts but not one of them shows: How to write SIMPLE app (for example 2 pages with menu. One page with form for sum of 2 numbers, second something else, for example embedded youtube video) and how to transfer this as ""app"" to be functional on another computer simply by ""starting main.py"" or something like that. Everyone on the internet is like ""don't use PyQT, TKinter, ..., user Flask/Django if you want to create app with gui"" but they don't tell how to ""deploy that for offline usage"" for example in company for other people on shared hard disk space. Please, do tutorial on something ""practical"" like that. Not abstract as everyone else does.",True
@fatyeet6882,2017-03-27T17:36:59Z,0,"Exceptional video, gave you a sub (‚ó†‚Äø‚ó†)",True
@valigeorge9110,2017-03-27T16:54:15Z,0,thx,True
@24junar,2017-03-27T16:44:54Z,4,Another good tuts Corey. Looking forward for some flask tutorials in the future. You are always amazing. Thanks and goodluck!,True
