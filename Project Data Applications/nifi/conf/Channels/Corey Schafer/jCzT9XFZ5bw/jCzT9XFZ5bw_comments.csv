author,updated_at,like_count,text,public
@sakethkumarpeddi2089,2024-05-30T12:40:53Z,0,Great Explanation. üôå,True
@ArpitAnand-yd7tr,2024-05-30T08:15:16Z,0,Beautiful explanation!,True
@AmroKhalil-xo9tu,2024-05-20T15:28:34Z,0,It has been at least year since I have given up on OOP! This was exactly what I needed for such a long time.,True
@HarshithaRaghavanDevarajan,2024-05-16T04:11:28Z,0,Need more videos on other concepts like abstraction and encapsulation. Please add.,True
@sophia17965,2024-04-29T14:02:56Z,0,"Hello, I did not quite understand why we can't just create an email method. Can someone re/further explain this ? thanks",True
@Resolve_DigitalMedia,2024-04-17T23:39:33Z,0,Amazing video! Thank you.,True
@about_every_thing92,2024-04-14T12:19:15Z,0,"coming to its end made me emotinal lol, Thanks Corey!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!",True
@BenediktDonnermann,2024-04-11T08:58:13Z,0,This was a great tutorial series. Thank you!!,True
@Tonda-ck6jp,2024-03-24T06:52:20Z,0,"I mean, you're still not explaining why email is not dynamically updated. The question you answer is: How to update that value without refactoring my whole code? However, you don't explain why it is a static value. That would have been helpful, because right now I still don't know why that email value remains static.",True
@abhijeetkumar7573,2024-03-21T09:37:14Z,1,"Even after 7 years, this series about OOP is amazing. Thank you Corey",True
@user-bc1xp2of2x,2024-03-17T00:00:35Z,0,"in 2024, i have a issue, how i can know if @property what do",True
@skafiend4319,2024-03-08T20:44:00Z,1,your videos are a godsend. thank you so much,True
@akhiljoseph7769,2024-03-03T10:44:29Z,0,Thank you soo much,True
@riteshkarmakar3597,2024-03-01T07:30:04Z,0,Completed the entire series. It was really great. Thank you very much!,True
@eliasemanuelpoitevin9034,2024-02-24T19:41:39Z,0,"way clearer than what i got at college, thank you!",True
@taejimcap,2024-02-10T11:30:26Z,0,"i watched the whole series and thank you so much. You recorded this 7 years ago and still soo good soo understandable, finally all questions and blurs in my mind are gone.",True
@chrissze,2024-02-08T10:15:57Z,0,Thanks Corey for the valuable contents!,True
@dinithidilupama4356,2024-01-30T10:40:33Z,0,Thank you for this amazing tutorialsü•∫üôèüíì,True
@Yafatttah-sn5nk,2024-01-19T05:08:30Z,0,It helped alot thank you ‚ù§‚ù§‚ù§‚ù§‚ù§,True
@rubempacelli6815,2024-01-15T12:22:52Z,0,What a amazing video! Thank you very much!,True
@siddhigolatkar8558,2024-01-08T15:26:28Z,0,Thank you,True
@lynny7868,2024-01-07T14:56:25Z,0,8:00,True
@Given_A,2024-01-04T11:12:41Z,2,Watching in 2024 and still learnt alot.  Thanks Mr Corey!,True
@amine63404,2024-01-01T11:28:05Z,0,"Thank you very much Corey, I just discovered your channel and it's great.",True
@chamithdilshan3547,2023-12-21T10:58:52Z,0,Thank you !!!,True
@kishanShah-bc3ov,2023-12-11T19:03:16Z,0,Keep going man you are doing great work‚úå,True
@saadshoaieb2241,2023-12-05T19:41:30Z,0,"thanks alot , this  serie still  helpful even after 7 years !",True
@fusebox9725,2023-12-01T13:55:13Z,0,While defining the init function why didn't you write email along with self first and last in the bracket,True
@amangelool,2023-11-15T14:53:11Z,0,Great video. Don‚Äôt understand why the email wasn‚Äôt updated correctly though in the beginning (~ 2min in). Any one can help?,True
@Sasuke-px5km,2023-11-13T17:28:05Z,0,Still worth it to rewatch thanks sir Corey,True
@debirath4916,2023-11-08T16:41:42Z,0,amazing,True
@esthers5201,2023-11-07T19:36:01Z,0,I went through about 5 videos trying to understand why we need property decorators....your video was the only one that explained it in a clear and concise manner!!,True
@engr.malikiftikharahmad8751,2023-11-05T16:55:37Z,0,great explanation. Well done Sir.,True
@SaurabhKumar-qc6og,2023-11-01T14:00:02Z,0,Hey please make more tutorials on Python,True
@delikadir16,2023-10-28T09:47:19Z,0,ty for everything great course,True
@abdelqadir5227,2023-10-15T12:09:11Z,0,Coming back to remind myself of python after a long break from coding. Very useful videos. Thanks,True
@chakradharsaivalluru2451,2023-10-11T01:22:23Z,0,why do they need to change the code the ones who are  using our class if we define a method to our email,True
@AhmedKhan-yw3wx,2023-10-07T09:23:03Z,0,"I finally learned what property decorators are, thank you Corey!",True
@dhananjay4525,2023-10-01T08:09:34Z,1,"Bhaiya, bahut bahut dhanyawaad.....One of the best explanations on getters and setters in python across youtube",True
@user-qf2ps5pp5f,2023-09-26T18:20:29Z,0,"Thank you very much, these are the best Python learning videos I have seen so far.",True
@kvelez,2023-09-21T00:19:42Z,0,"great course, you should update and upload more.",True
@autumnleaf8483,2023-09-05T14:18:14Z,0,Amazing OOP tutorial!,True
@user-sp8dt2po8y,2023-08-29T11:27:01Z,1,it's very good tnx ,True
@noyou9349,2023-08-22T12:05:59Z,0,"Honestly, this series is the best I've ever seen on OOp. It's concise, clear, and the explanations are good. I'll say it again, I wish I had found this series when I was learning OOP.  Good job",True
@chaoukimachreki6422,2023-08-03T14:55:51Z,0,"this series shows the clarity of thought of Corey , this last video on properties though , lacked the usual real world example and was a little bit confusing, of course in comparison to the rest of the series. in comparison to other YouTube videos on properties this one is a breeze.",True
@Aerish369,2023-07-18T12:15:07Z,0,The best playlist to learn OOP in Python. Thank you Corey,True
@darijozivkovic7931,2023-07-17T15:19:44Z,0,Corey for supreme leader!,True
@dhjeew3517,2023-07-09T14:07:28Z,0,"Thank you so much for this series, you've been excellent all the way !",True
@jakebirkmaier5703,2023-06-26T01:12:21Z,0,I've been using a python OOP API for maybe a year on and off (thousands of lines/hundreds of hours) and never truly understood classes because I couldn't find a video series that explained them this well.   This playlist has been so excellent for me and I appreciate you putting it together!,True
@natasdabsi1138,2023-06-17T22:18:00Z,0,thank you corey,True
@Pramesh37,2023-06-09T08:59:54Z,2,"You're a life saver. Although I knew OOPS, I wanted to brush up to get my concepts clear. You explained concepts in such a way that I don't need to brush up on OOPS ever again! Thanks a ton.",True
@mariosconstantinou8271,2023-05-27T15:17:54Z,192,"Even after 6 years, this series about OOP is amazing. Thank you Corey",True
@Edo_Aelio,2023-05-13T03:46:11Z,0,Just one thing with @property decorators. Each time you address the property the function will be called and if you put many related properties by the decorator then it will be harder debugging and isolating a piece of code with many calls,True
@jiakai7254,2023-04-28T09:17:33Z,0,Ty! this series helped me understand PyQt5 much better. Before I was having trouble like with the generated py code from ui and I was so dumb to edit the file itself... Now i know better to create a subclass on an empty file,True
@brianligat2038,2023-04-25T09:21:08Z,0,"For the deleter, do you have to base it on one of the attributes?",True
@brianligat2038,2023-04-25T09:16:57Z,0,Corey just never does a bad tutorial.,True
@jangoul,2023-04-16T19:06:58Z,0,Why did the email not change in the beginning??,True
@prathagautam9872,2023-03-28T19:57:17Z,0,thank you!,True
@businessemail1142,2023-03-09T18:47:33Z,0,"Hi, i need a freelance programming job in order to gain work experience, any entry-level jobs for me that require no work experience?",True
@user-qn5by5iv7u,2023-02-23T09:20:20Z,0,2023,True
@ZahraHemmaty,2023-02-17T16:57:50Z,0,these series(OOP) are very amazing. thank you.  what do you propose for practice these stuff in the reall world?,True
@ZahraHemmaty,2023-02-17T16:52:24Z,0,Thanks for these videos. I have a question... so when we used Getters,True
@entity5678,2023-01-26T14:25:07Z,0,Such a nice explanation...now I have understood setters and getters..thank you sir,True
@theskipper1867,2023-01-25T21:11:15Z,0,I'm still not sure I understand what the purpose is of the original fullname method after the fullname.setter decorated method is created. It looks like the setter method does the same thing and more.,True
@thelifehackerpro9943,2023-01-23T19:20:14Z,0,Why we need this when we can define self.fullname = fullname ?,True
@milindsabnishd,2023-01-13T21:07:28Z,2,"I couldn't understand 'Decorators' concept anywhere, but you made it so simple. Thanks a ton, Corey Sir.",True
@chayansarkar1439,2023-01-10T07:43:19Z,1,Explanation and examples are really really great ‚ù§,True
@void2991,2023-01-06T13:06:20Z,0,Thank you soo much for this awesome tutorial....,True
@dustinhxc,2023-01-05T22:18:27Z,2,This series was amazingly eye opening! You‚Äôre the best! Thank you! Such a wonderful prepared teacher!,True
@adetolasanni2,2023-01-04T15:56:12Z,0,I just finished your playlist. Before now I was totally confused of OOP but watching this video gives me a fresh start. Thank you.,True
@durandas6661,2023-01-01T12:00:07Z,0,Brain hurty,True
@thekeyfox,2022-12-30T05:26:05Z,0,"Excellent playlist, Corey! I'm sad there aren't more videos but these did help my understanding of classes a lot! Thank you!",True
@pranayteja8330,2022-12-29T10:11:43Z,0,Hands down the best Python OOP tutorial!,True
@hasben0,2022-12-27T21:59:43Z,0,Hands down the best oop tutorial on youtube. I wish he'd continue making more videosüôèüôè,True
@kingKabali,2022-12-25T08:42:50Z,0,amazing üëè,True
@astaghfirullahalzimastaghf3648,2022-12-16T07:05:29Z,0,"ok now i understand what property is.. it is some sort of functions that use some of the class's attribute or attributes to generate new output or new variable? can a property return void? i dont know  another way to think about this is that when the class is instantiated,  it carries along with it its attributes data but not property.. it is like lazy initialisation in kotlin  so to change the property we must use a function known as getter and setter.. when an object is created from the class the property does not load together with the attributes right?",True
@anirvansen2941,2022-12-16T06:50:13Z,2,"Awesome, Corey's playlist is the best place to brush us on python concepts. Thank you again",True
@user-gu5ts5nx8r,2022-12-15T13:09:56Z,0,where i can find a tutorial in which you teach about making and publishing Python packages ?,True
@sherlokholmes728,2022-12-15T09:27:38Z,0,I have completed this  tutorial .it was deligious,True
@samsammurphy,2022-12-14T19:18:12Z,0,Wonderful as ever! Thanks Corey,True
@shankerkc01,2022-12-13T03:51:01Z,0,"I liked this OOP tutorial playlist so much. So much to learn with clarity. Can we get the video where you explain,  __init__() taking arguments form the "".ini"" file.",True
@gustavojuantorena,2022-12-12T20:55:17Z,0,You are the best Python instructor in the world,True
@avral4148,2022-12-03T11:02:05Z,0,"Hi Corey, thank you very much for your efforts and time for creating such excellent tutorials. I have a very silly question, thought? How can we handle if there are additional arguments to the method to which the property decorator applied?",True
@mohammedal-khafaji7298,2022-11-29T17:30:11Z,0,"Really it's an amazing tutorial  , keep goingüëèüëèüëè",True
@simsonts1793,2022-11-28T20:31:05Z,0,best videos ever for python oop,True
@domillima,2022-11-28T04:11:08Z,0,"Corey, this is excellent. Sorry to unearth a 6 year old post. But truly your series is one of the best I've found in 2022.   I understand adding the @property decorator will allow you to access your method as an attribute. If I'm following along: in this case you wanted to do this because you previously defined a self.email attribute (i.e. print(self. First + '.'  + self. last + '@email.com'), but this is static as an attribute whereas it will update itself as a method. So creating a method and using  @property allowed for the emails to update as the names updated, while the rest of your code remaining unchanged and referring to self.email as an attribute.",True
@Mestery3769,2022-11-27T23:19:21Z,0,How do you set an attribute of one class to be a property attribute of another class?? (don't even know what that means exactly) üôÉ,True
@astaghfirullahalzimastaghf3648,2022-11-26T06:56:46Z,0,"@1:32  i understand there are some differences between field,property and attributes..in kotlin for example stores field as a hidden variable as far as i know..i.e we cannot access it unless we override some functions which i forget maybe in general it is called getter and setter..  but when i see here the email attribute does not change when the first attribute got changed this can means several things.. 1. the email attribute make a deep copy of that first attribute before assigning it to email attribute..this means when first attribute get changed the email does not",True
@cooleekova,2022-11-17T12:35:18Z,0,"very clear, nice and compact tutorial. Thank you so much again and again for you work ‚≠ê",True
@Frankee287,2022-11-15T01:45:45Z,0,"This is quality presentation, free but still touching on the salient points. Good job",True
@dekkicheamine27,2022-11-13T17:03:34Z,0,thank you so much  i learn a lot from this videos,True
@fatemeh2222,2022-11-09T18:46:03Z,0,"Such a thorough explanation, Thanks!",True
@abhisheksurela2881,2022-11-05T14:04:37Z,0,Man!! Thank you so much,True
@nicholasrice1748,2022-11-04T01:37:07Z,0,Legend,True
@devonscoles5705,2022-10-16T11:40:10Z,1,I don't quite understand what putting the @property or @setter or @deleter does. Could you not just remove the @s above all of the methods and it would work exactly the same?,True
@slightlygruff,2022-10-06T14:05:14Z,1,but why will it creating an email method at 1:56 break the code for everyone using the class currently?,True
@diegobravoguerrero,2022-09-21T18:35:16Z,0,Awesome explanation. Thank you!,True
@Zainzain-uy8ox,2022-09-17T13:51:25Z,1,"At 6:30 why didn't he just used self.firstname and self.lastname = name.split('"" "") in the first place??? is this some kind of best practice?",True
@paploalverz1624,2022-09-15T19:43:58Z,0,Great Job‚Ä¶ i was trying to get the concept of property from different other resources but this one is straight to the point and clear. Keep it up,True
@sriharsha580,2022-09-14T06:28:36Z,0,"If i have to use a method in a class as an attribute, which one should I choose and when @property or @staticmethod",True
@adelsahuc8459,2022-09-03T02:46:01Z,0,Thanks bruh this was amazing,True
@kaparthikiran,2022-09-02T21:21:47Z,1,This 6 part series on Python OOP is really awesome. I watched them multiple times at 1.5x speed. Thanks a lot @coreyschafer,True
@afafsgdchdhdg,2022-09-01T22:06:59Z,0,Corey your videos are a gift from.God,True
@golsachamani9006,2022-08-31T11:27:17Z,0,that's great thank u,True
@arindamghosh4555,2022-08-24T09:53:21Z,0,Thanks a ton .Finally got to learn OOP in python after watching these videos a couple of times,True
@kcseanbrixd.calinao6700,2022-08-23T08:30:55Z,1,100% ‚ù§‚Äçüî•üî•üî•,True
@zakuro8532,2022-08-22T20:08:39Z,0,"I subscribed after this series, I hope to learn more from you.",True
@mrdeshapiro,2022-08-19T15:46:18Z,0,"I named the method the same name as the variable I am trying to use, and that made a it loop infinitely.  I was trying to set debug to true or false and called the method debug. Is that why they use $self._debug as the variable you set in the method?",True
@jacquelinegibson1933,2022-08-12T17:36:45Z,0,This was literally so helpful and clear - thank you!!,True
@jhnflory,2022-08-10T00:47:27Z,0,Wish I had found these videos 6 years ago when they were created!,True
@_remix5650,2022-08-07T13:10:47Z,0,exslint very math,True
@akshukla283,2022-07-27T14:56:32Z,0,"Fantastic, you explored it as no one expected, thank you for making these videos, it helps a lot for a better understanding for any novice in Python üëç",True
@rominasepulveda570,2022-07-19T14:39:40Z,1,"I just watch the all serie of Python OOP and it was great! Now I have the feeling that I need to practice all what I've learned. Could you please make some videos with assignment, so we can test our new knowledge. Thank you!!!!",True
@bsmaheshkumar5328,2022-07-19T06:11:29Z,0,"His quality of explaining is next level, Thanks, buddy.",True
@myQuotes8894,2022-07-17T15:15:04Z,0,@corey - why  u r not active these days?,True
@sanidhyas3s,2022-07-14T15:33:38Z,0,Lovely Series!,True
@anivardanyan,2022-07-12T12:18:05Z,0,bless ya,True
@0xssff,2022-07-05T15:49:06Z,0,wtf,True
@NeumsFor9,2022-07-04T16:33:34Z,0,Deleter decorator reminds me of an RDBMS trigger.,True
@Ma_X64,2022-07-04T15:20:12Z,0,"There is thing that I really hate in Python. Not in Python itself actually but rather in that how sources (at least most of them) written on it. There is no way you can understand what you see: a method or an attribute just by its name. I came in programming through Pascal and then Delphi and there it's very clear when you see a method because it's ALWAYS containing a verb in its name. Like ""set_that_fckn_thing"", ""get_those_stupid_thing"". But Python-people with all their cute Zen and other just lost that simple idea completely.",True
@emmanuelomoro7878,2022-07-02T18:29:49Z,0,"I can't believe I am commenting on a 3yr old video. However if you ever get to read this please kindly find a way to make your videos larg enough, I can barely see your code on my phone. Thanks",True
@JorgeEscobarMX,2022-07-01T13:36:05Z,0,"Amazing, I been struggling with complex properties and there is an actual @property decorator. Now I didn't understand how you are able to use dot notation inside the decorator like: @fullname.setter I mean, how can I create that for my own decorators, the ones I write by myself?",True
@jacktiek,2022-06-28T05:41:15Z,0,My first youtube comment. It is worth every second of my time,True
@-PhilGibson,2022-06-26T01:24:31Z,0,I could watch this video a million times and still not understand it.  Just watching this 9-10min video i have a million questions that this video & many other online videos dont address.,True
@omidnikbakht8774,2022-06-19T15:52:55Z,0,"thanks for precious videos, got one question please  in the last example why are we deleting first and last name using the command '''del'', cuz  in the deleted we never introduced it . im confused. if it is a known command, then shouldnt have we used dunder for ''del'' to tell the compiler how command''del'' should be performed ?",True
@aungthurawin9710,2022-06-19T10:09:44Z,0,Corey I love all of you videos. Thanks you!,True
@cagaraedit,2022-06-18T09:34:46Z,1,"""Hey there hows it going everybody"" ""Hey everybody hows it going"" Corey : Hmmm.... what should i pick today...",True
@gattuchandrashekar5963,2022-06-18T02:31:02Z,0,This is so difficult to understand. I mean not the explanation. But the internal working. How do i get a clear perspective of it.,True
@jamessawyer8565,2022-06-17T23:40:27Z,0,Excellent material ! Thank you,True
@AJ-et3vf,2022-06-15T14:34:40Z,0,Awesome video! Thank you!,True
@anubhavgupta7155,2022-06-05T15:39:50Z,0,This series was so-so-so good! Thanks!,True
@kinmokuseikaori11,2022-05-24T12:17:38Z,0,This is a billion times better than anything I have seen thus far. Simply amazing!,True
@jaydhanwant4072,2022-05-23T04:08:13Z,0,"Thanks for uploading, helped me long way!",True
@SoDight,2022-05-14T15:16:18Z,0,It feels like @property decorator is must have on everything you want to put in __init__ but don‚Äôt write manually,True
@anushapai6777,2022-05-13T05:52:34Z,0,"Exactly, what I was looking for. To the the point and super clear with example.",True
@adityanjsg99,2022-05-12T13:45:55Z,0,Pure genius!!,True
@allanalmax2258,2022-04-25T07:16:36Z,1,"Loved your videos, well explained and easy to understand. Could you make some videos on encapsulation, abstraction and polymorphism?",True
@betteryourself6653,2022-04-20T09:04:48Z,0,"thank you so much, you're my hero from now on !",True
@chriskeo392,2022-04-20T04:22:51Z,0,so getters was the first portion?,True
@fuzzywuzzy318,2022-04-10T05:47:21Z,0,gifted teacher!!!,True
@rhdgghjygvg7229,2022-04-08T16:36:24Z,0,"Yes,  your explanation is so  clear. You  explain to us, by  considering yourself as a new learner keep up the good work üôèüëçüëç",True
@cameronlefouler5611,2022-04-04T16:51:15Z,0,I love you corey,True
@jeanrodrigues6249,2022-03-29T19:00:43Z,0,Floppy,True
@jeanrodrigues6249,2022-03-29T18:59:24Z,0,Floppy,True
@jeanrodrigues6249,2022-03-29T18:58:51Z,0,Floppy,True
@jeanrodrigues6249,2022-03-28T17:17:08Z,0,Floppy,True
@drygordspellweaver8761,2022-03-27T01:28:31Z,0,But what if self.first = self.other_attribute?,True
@yura2110,2022-03-26T19:00:38Z,0,"thanks, nice video :)",True
@SaruwatariMasahiro,2022-03-20T08:30:11Z,1,Thank you for your OOP series.  I'm just getting started with python but I learned a lot from just this series.,True
@MindCraftb11,2022-03-19T21:57:40Z,0,very neat and helpful... the best instructor and tutorial ever!!,True
@dron4ik86,2022-03-15T09:13:13Z,0,Thank you very much!!!,True
@slimanemesbah7003,2022-03-13T13:22:13Z,0,"i like the way you explain by needs, like "" we do this, because later on you gonna find an error"" also i like the way you compare it to java, thanks corey",True
@zealot4325,2022-02-19T22:38:26Z,0,wow! python has OOP/ And I can use it,True
@MrGhazaly,2022-02-13T09:52:39Z,0,"Many thanks for the tutorial, very useful ! But I can't find a topic for private and public methods in your tutorial or do I miss something?",True
@widowcleaner69,2022-02-04T10:53:53Z,0,"Thanks for the video, clear and concise as always!  Interestingly, when running ""del emp_1.fullname"", first and last are set to None, which in turn causes fullname to be set to None None (caused by the functionality in the setter). I added 'if [self.first, self.last] != [None, None]' to the top of my setter logic to prevent this from happening!",True
@jorgemadrazzo606,2022-02-02T00:23:16Z,1,Thanks for your videos! I'm trying to figure out how to apply the getter to this... and is setter the only way to accomplish what you've done? can't we do it without it?,True
@stephenwood6139,2022-01-22T14:50:49Z,0,"Hi @corey, thank you so much for these video's they're incredibly helpful. Which IDE do you use in these videos?",True
@higheloguy9057,2022-01-22T14:50:20Z,0,is getter decorator useles? property = getter ?,True
@manishKumar-tl2ee,2022-01-22T14:26:55Z,0,Why did we used @property decorator? Just bcz we wants to write <object.email> instead of <object.email( )>,True
@mariamkhanam4037,2022-01-18T03:26:51Z,0,What code editor is this? Please tell meüòê,True
@timo_b3,2022-01-08T15:27:42Z,1,"I watched many other videos about this topic, but this series is by far the best one to learn oop python. thank you corey!",True
@raghunandhaan,2022-01-03T05:40:54Z,0,You are a tad fast speaker in this video.,True
@RH-nk7eo,2022-01-02T16:49:12Z,0,"When you create the fullname.setter, what happens to the original fullname() method?  Running the code 'Employee.fullname(emp_1)' no longer works as the method is no longer callable.   Does the .setter therefore replace the original method entirely?",True
@dileepbc5901,2022-01-01T19:29:56Z,1,thank you Mr Schafer for the tutorial i watched the whole series of OOP. next ill practice more,True
@nissan5563,2021-12-21T07:14:14Z,4,"I already watched your multiple videos including this OOP series and there is no doubt that I enjoyed it so much. Most appreciating point for me that, your neat and clean explanation without repeating or adding any unnecessary words. Please continue with more videos  <3",True
@rohanraj8418,2021-12-10T02:35:27Z,0,"Hello Corey Schafer Sir, what about getters. You haven't explained about this Getters property decorator.",True
@noamills1130,2021-12-02T15:57:52Z,0,What text editor do you use? Pretty cool that you can the same text to multiple lines at once!,True
@aakashPotter,2021-11-23T05:22:14Z,1,"Nice video, but you forgot to mention the real purpose of this decorator. Python does not provide 'private' variables (those which cannot be modified by external code) and all attributes are public. A getter/setter/deleter policy prevents code from breaking in case someone forcefully assigns/deletes a member, when there are side-effects to doing that.",True
@oj43085,2021-11-22T23:43:12Z,0,That's pretty cool.,True
@ramy131,2021-11-22T00:09:45Z,0,3:26,True
@jonathanbush5915,2021-11-21T04:47:09Z,0,I watched all 6 videos on OOP and you have officially helped me learn these concepts. Thank you and I will subscribe !,True
@champx549,2021-11-19T04:32:19Z,0,Bro you don't know how much this helps!  A lot!,True
@AnkitBhardwajjgd,2021-11-15T13:31:26Z,0,thanks buddy,True
@kumarnaidu5837,2021-11-11T23:13:06Z,0,Could you please make a video on Method overriding and overloading ?,True
@boopmcbloop8648,2021-11-04T01:35:06Z,0,Thank you so much Corey! I'm so glad I discovered your channel. I want to go into data analytics and I'm happy to see all the video series you've made about Python libraries. I'm looking forward to watching more of your tutorials :),True
@marcello4258,2021-11-02T18:45:02Z,0,"luckily john smith does not have a middle name :D ..when he said ""people coming from java.."" he got me! .. but seems like del does not actually delete the object hence there is still an object in the db and the garbage collector won't get him anyway",True
@mysticmoon816,2021-10-25T05:16:16Z,0,The BEST playlist ... Thank you!!,True
@SUFCDave51,2021-10-24T18:59:51Z,0,How does the del statement connect to the full name.deleter method?,True
@DeanG621,2021-10-16T10:09:11Z,0,"Nice video. Since I saw Eliot programming the @property in Mr Robot it was interesting but unclear until now :), it's actually ez. You HAD to change the email attribute to a method to make use of the @property object. All so people don't need to change their code which is handy, because the class could be imported from somewhere else and it's user friendly to not break their code.",True
@marioestrada972,2021-10-16T03:54:25Z,0,Thank you so much Corey!! It was an amazing series!,True
@JR_Hossain,2021-10-13T16:01:58Z,0,"‚ùìQuestion:  class CC:    .............     .............  a = CC(......)  a.list(name=""JR"").execute()  # What the last line meaning for? # CC class has a method called list & is execute() a function in the list method?",True
@briannguyen1134,2021-10-12T22:50:11Z,0,"you forgot to mention the convention for ""private variable"" in python with OOP",True
@vanijodu9925,2021-10-10T09:56:28Z,0,Your videos are very informative...and we need more in Python classes...,True
@stevenshelby2675,2021-10-04T15:14:25Z,0,How do you use the getter property?,True
@kamranmehdiyev8561,2021-10-03T15:46:18Z,0,Thanks !,True
@felipesilvestre6821,2021-09-26T21:46:57Z,0,Thks for this viedos... now I'm understading OOP in Python,True
@auroshisray9140,2021-09-22T09:36:04Z,0,Thanks a lot Sir!!,True
@auroshisray9140,2021-09-22T09:34:55Z,0,you make life easier,True
@bamsgian9759,2021-09-20T04:35:15Z,0,nice example for using fullname as part of property and using space as separator. I will ask my chinese friends to test it with their name in hanzi xD,True
@dmitrylitovchenko2365,2021-09-06T07:24:49Z,0,Why use property decorator for the email attribute if the same could by achieved with self attributes in email.self like email.self = name.self + @ + last.self instead of just first + @ + last?,True
@wibulord926,2021-09-03T10:26:15Z,0,how about the getters??,True
@helplearnhome9542,2021-09-02T18:06:29Z,0,Thanks a lot dude!,True
@celularyapuntocom,2021-08-29T00:18:17Z,0,I have to say Thanks Corey for sharing your time to make those videos,True
@byheartgeeta,2021-08-25T23:06:30Z,0,I finished this in a single sitting along with the practice. I can't explain how precious this content is. more power to you @Corey. so much love from India.,True
@codingperson6360,2021-08-24T16:23:58Z,0,Thanks Corey. Awesome explanation,True
@eggsontoastproductions5295,2021-08-23T07:36:50Z,0,Please write a book :),True
@gevillgar,2021-08-21T20:37:45Z,1,Your explanation is like a very optimized code. It serves its purpose with the minimum amount of examples and words needed to make the concept clear.,True
@iribaaa2643,2021-08-20T12:52:08Z,0,No way! This series was literally Awesome! Thank you man. Thank you...,True
@shiningcopper,2021-08-10T22:08:31Z,0,amazing course!,True
@sundaymanali5854,2021-08-07T14:22:50Z,0,Great series watched twice. Just listened for the first time. second time tried to code em in first. thank you a lot mate,True
@Dany2k13,2021-08-06T19:52:02Z,0,"Thank you Corey :) 5 years later, your OOP Tutorials are still working and well explained ! I learned a lot ! Thanks !",True
@user-zd6so7up8r,2021-07-30T08:38:21Z,0,It is very clear that gives me a very good concept.  Amazing!,True
@developerd9679,2021-07-28T00:39:23Z,0,this is so well explained that now I want to see all ur videos!,True
@fornostera,2021-07-22T13:00:53Z,0,Thank you for great content and amazing series Mr. Schafer!,True
@thunderbirdizations,2021-07-13T22:38:11Z,1,"Is there any way to auto-update attributes of an object that holds attributes of another object, without having to call a method(decorators included)?",True
@dinastark1088,2021-07-10T12:00:54Z,0,Amazing Explanation bro,True
@YEM_,2021-07-10T02:46:37Z,0,What about getters?,True
@AbhishekSingh-tz3uv,2021-07-08T09:46:04Z,1,I liked this video series very-very much. Got to learn a lot of new things. Hope to see more of such wonderful content on your channel. Thanks Corey!,True
@EW-mb1ih,2021-06-29T14:05:36Z,0,"When you change the first name as Jim, why does ¬´¬†first¬†¬ª actually change but not ¬´¬†email¬†¬ª? I mean they are both in the init method and ¬´¬†email¬†¬ª is created from ¬´¬†first¬†¬ª...",True
@sefatergbashi,2021-06-18T01:58:40Z,0,Awesome!,True
@user-ww2lc1yo9c,2021-06-13T20:57:54Z,0,What videos do you explain the part about class variables or methods that start with single or double underscores? I am not talking about dunders since they end with double scores. I am talking about things that contain single or double underscore only as prefix in the name.,True
@user-ww2lc1yo9c,2021-06-13T20:56:47Z,0,so getters are just @property while setters are @propertyname.setter rather than @propertyname.getter; did I understand correctly?,True
@user-ww2lc1yo9c,2021-06-13T20:34:10Z,0,got it,True
@goldfishjy95,2021-06-09T15:36:39Z,0,"Hi, thank you for the series, it is unbelievably helpful, cheers!",True
@ruben7346,2021-06-06T23:53:08Z,0,"Marvelous serie, you comunicate very well and teach in a wonderful way. Thanks for all the free content you've uploaded so far and for the inmense help you bring to me and other in this jounrey. Wish you the best, and once more, thank you!",True
@antondjayzakov4776,2021-06-06T17:06:39Z,1,Learning in a big rush.  Everything clearly explained. Thank you Corey,True
@veniasblack,2021-05-30T15:54:42Z,0,How to write a deleter for the email ?,True
@jimmylyu4714,2021-05-30T12:14:07Z,0,"How come for email change we can't do: self.email=self.first+'.'+self.last+'@gmail.com'  If the first and last name will update by itself, why not email?",True
@kristiantorres1080,2021-05-23T00:47:15Z,0,Best explanation of property decorators on youtube hands down!,True
@DRAIK08080808,2021-05-22T02:09:20Z,0,4 hours trying to understand this topic and a 9:32 minute video not only explained it very clearly but it also explained the aplications and why use these functions,True
@curiositypill9948,2021-05-21T18:46:07Z,0,"for deleter to work is it important to have corresponding getter and setter?     @last.deleter   def last(self):     print(""Deleting last name"")     self.last = None  @fullName.deleter   def fullName(self):     print(""Deleting last name"")     self.last = None   First code isn't working, second code does. getter and setter are define with 'fullName'",True
@ayushgupta1881,2021-05-17T15:33:42Z,0,thanks a lot !,True
@adityaagrawal5352,2021-05-07T10:29:55Z,0,Code with too uses these examples...üò∞,True
@vyasnikhil9037,2021-05-07T09:55:10Z,0,"8:09 when you enter print(emp_1.fullname) after setting the deleter, we get None.None",True
@chloeren9175,2021-05-02T22:16:01Z,0,"if we don't put property decorator""@property"" before the fullname function, the rest is not working. is that mean the setter can only work with @property?",True
@sadbroscove7825,2021-04-30T11:50:35Z,0,"for the self.email, can't we do self.email= ""{}.{}@gmail.com"".format(self.first, self.last).. then we would not have to go create a whole attr-method for it",True
@hammadyasir2174,2021-04-29T18:57:05Z,0,Thanks corey for given valuable time  for learning,True
@aleksandargolubovic8833,2021-04-29T18:19:51Z,0,"Man, I hate decorators -__-",True
@oceanheadted,2021-04-27T10:36:46Z,0,"Super clear explanation, thanks",True
@user-of5gk2cm9j,2021-04-25T20:03:34Z,0,"–ë–ª–∏–Ω, –∫—Ä—É—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç! –ò–∑ –≤—Å–µ–≥–æ —á—Ç–æ –æ–Ω –≥–æ–≤–æ—Ä–∏—Ç, –ø–æ–Ω–∏–º–∞—é –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ 20, –Ω–æ –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ. –ë–µ–∑ –≤–æ–¥—ã, –±—ã—Å—Ç—Ä–æ, –≤—Å—ë –ø–æ —Ç–µ–º–µ! –°–ø–∞—Å–∏–±–æ!",True
@robertolacomrlc,2021-04-18T13:37:10Z,0,"Hello and thank you for your very valuable lessons! I'm searching for an exercise that can test all my new skills in OOP, do you have any?",True
@LouisChiaki,2021-04-07T08:17:45Z,0,Haven't seen people actually use setters and deleters in production in python. Do you know why?,True
@hasanshami8371,2021-04-03T10:30:42Z,1,I failed to fully comprehend a lot of these in university. I don't know what kind of mojo you're using but this explanation is brilliant.,True
@lennoxcedeno8270,2021-03-30T01:28:57Z,0,"Why repeat the code from the init method in the fullname method. Couldn't we just use the self.first, self.last from the init method without having to repeat self.first = first and self.last = last in the fullname method?",True
@abduhakimabdusamatov3912,2021-03-28T14:42:17Z,0,"on point, thanks for the Tutorials",True
@chborger185,2021-03-27T11:31:37Z,0,oDEAR` a 00 or OO 77.5Khz  coder where is my STACKoverFLOW or EMBENDED stream ;) thx oe5RDS 7,True
@rizwanmuhammad6468,2021-03-25T03:23:00Z,0,Corey is phenomenal...,True
@colorbars8564,2021-03-24T22:39:19Z,0,"awesome videos, still being watched 5 years later. Thanks for the great content",True
@Dtomper,2021-03-16T10:28:23Z,0,Nobody on Stackoverflow could explain this better. Thank you!,True
@yasminebelhadj9359,2021-03-13T23:10:23Z,0,Thank you for such an amazing channel !,True
@MohandAlbaz,2021-03-11T18:47:39Z,0,Do you have a tutorial about Pytorch for deep learning?,True
@doughntworry,2021-03-09T13:04:11Z,0,super great explanations. Thank you so much,True
@gabrielpena5829,2021-03-07T03:07:11Z,0,Amazing video,True
@ZeroRoy,2021-02-26T03:01:33Z,0,"After thinking about it, why the email address did not change when reassigning the first and last name? Could it be the email was already made after creating the object?",True
@ZeroRoy,2021-02-24T03:33:10Z,0,Thank you Corey!,True
@krzysztofsmogorzewski4772,2021-02-12T20:43:20Z,0,"Thank you so much, you are amazing! <3",True
@FrogEnjoyer17,2021-02-12T13:50:07Z,0,"My brain: getters, setters and deletters",True
@SergeantDuckGuy,2021-02-03T02:04:29Z,0,Why does the set.email attribute not update the first name?,True
@playman8009,2021-01-30T17:15:30Z,0,"ok, hope I got the general rules right  Getters ‚Äì an attribute‚Äôs (Level2) value is based on parameters of an instance (Level1). What we do: linking L1 & L2 so that the dependent (L2) attribute always updates automatically on a change in source attributes (L1). *in the example, the email attribute reads current value of its source attributes only at the moment of instantiation and saves them in memory, without a getter there is no auto-updating of the email once name/lastname are changed  Setters ‚Äì we link parameters of an instance (L1) to the attribute (L2) created out of them in a way that when the initially dependent attribute (L2) changes, the original arguments (L1) also get updated. You pass the new value of the attribute through a method, instead of creating an assignment; need to define a relationship between the new value and the original arguments. ** can we use self.first, self.last   = split in the first line of the method to shorten the code? (6:20)  Deleters ‚Äì link del() to any method (or more precisely, the attribute created out of it), so that the values of the attributes this method/attribute is based on are set to a default value. ***  is it a common practice to always set them to None, or are there any examples when you'd want to set it to sth else?  Obviously that's a great tutorial, the ""what if you did this the wrong way?"" element is great for beginners.",True
@otsapin,2021-01-28T12:02:21Z,0,Amazing series!!!! Thank you very much!!!!!!!!,True
@adilmathew9619,2021-01-24T17:20:27Z,0,"Can we do self.email=self.first + ""."" + self.last  +""@email.com"" , will it solve our problem??",True
@zihanchen4312,2021-01-13T07:36:15Z,2,"If there is a Competition on the Internet to choose which is the best channel for Python Programming, I would vote for this channel with no hesitation. Huge Respect!",True
@souravdutta3326,2021-01-03T08:00:16Z,0,"Hi Sir, can you please elaborate the problem if we use a method Email() rather than decorator with the example?  Thank you.",True
@enchanted_swiftie,2020-12-30T08:19:53Z,0,How to pass more than one arguments in setter?,True
@yonzont,2020-12-30T06:58:18Z,0,"doesnt work at setter, says too many values to unpack",True
@ab5848,2020-12-26T14:36:19Z,0,Thank you sir!!,True
@moyoujermalili2509,2020-12-26T00:10:29Z,0,@coreyschafer I know i‚Äôm late to the party but can you make a video on metaclasses and polymorphism. I would appreciate it. Your videos have been a great help so far,True
@rayanelhelou2009,2020-12-24T19:06:03Z,0,"Can you, or anyone, help me figure this out? -------------------------------------------------------------- class A:      def __init__(self):         self.x = 1         self._theta = None          @property     def theta(self):         print('theta activated')         self._theta = self.x         return self._theta  a = A() a.x = 2   print(a.__dict__) -------------------------------------------------------------- The string `theta activated` was NOT printed, and `a.__dict__` equals `{'x': 2, '_theta': None}`, so `theta` was NOT updated to 2 like expected. If I was to run `a.theta`, then `a._theta` obviously now equals 2. So really, it looks like all this `@property` decorator is doing is to simplify `theta()` to `theta` by dropping the parentheses, but its not actually storing theta as an attribute. Perhaps this is not a problem, but if what's implied in this video is that changing `x` automatically changes `_theta`, then this this is absolutely incorrect, and it doesn't match the story being told by the video, which is that changing one attribute can change another. Please correct me if and where I'm mistaken.",True
@balazsszalai9960,2020-12-22T09:10:15Z,0,"Good tutorial, Thanks!",True
@johntank3004,2020-12-16T21:50:34Z,9,This would a good example how to deal with someone switching their last name because of marriage or someone having a full name change.,True
@ninakoch1799,2020-12-14T16:01:14Z,46,"Thank you, thank you, thank you. Spent 13 weeks trying to learn the basics of oop at college, decided to start watching your series 3 days before my test and i think i finally truly understand the concepts, whereas before watching this i was pretty much just copying stuff from my lecture notes and didnt really understand why it did or didnt run properly. Corey, you are an incredibly gifted teacher and i feel blessed to be your student.",True
@hewadaragai5270,2020-12-05T21:27:17Z,0,Hello Corey first I appreciate yours time and effort you have done with OOP serious video's .really great wish you best  I am new learner in coding and python is my first steps can you suggest me some book resources to learn more deeply pleas ?,True
@pkavenger9990,2020-12-01T13:27:58Z,0,"there was a time when I was beginner and i always get overwhelmed by watching other peoples code and feel intimidated when i dont understand it but now boy i can look at the code and read it like champ. If any beginner feel the same way then dont worry your time will come, play with code and discover new thing and i would recommend 2 books for every one who have passed beginner level and also tried making rock paper scissor and few beginner level exercises, read Fluent Python and then Python cookbook, these books are literally like if a person passed a beginner level cooking and then he try expert chef's recipes and every time I read it, i would be like oh man i should have used this logic in my previous program that i made.",True
@OrientalMelodies2010,2020-11-30T06:28:14Z,0,Thanks a lot for such amazing tutorial! God bless you!,True
@dukfin8421,2020-11-27T07:09:49Z,0,0:11 xx,True
@cynekong777,2020-11-26T17:27:20Z,1,"Thanks for this excellent explanation!  One question about the last ""Deleter"" part: I used: emp_2 .fullname = 'Corey Schafer', then used: del emp_2.fullname. But it seemed the deleter hasn't been called, emp_2 was still there.    Can anyone help with this question? Thank you.",True
@daniell2988,2020-11-20T19:40:39Z,0,Thank you so much for the Tutorial.  You explained the logic very very clear to me.  Life saver!,True
@bloxzyo,2020-11-15T20:48:43Z,0,Awesome video....,True
@andreapartenope2660,2020-11-07T17:30:29Z,0,you do always the best tutorials,True
@nischalsehrawat2130,2020-11-05T20:38:34Z,0,"Hey Corey can you please do a video on Abstract Classes, Interfaces and design patterns? There is not a single video on youtube that deals with these subjects in a way you do. Thanks",True
@MohamedAyman-li6rp,2020-10-29T08:56:30Z,0,Thank you a lot.,True
@RameenFallschirmjager,2020-10-26T18:02:26Z,0,I made it to the end! yeeeeeeeeah!,True
@muratsokucu5891,2020-10-26T01:05:29Z,0,"If your teaching skills were a programming language, it would be python!",True
@lindenlonsdale8753,2020-10-23T08:49:50Z,0,This is brilliant. Would love to see a part 2 which goes into details about the Property class and how it all works behind the scenes.,True
@00K00K00K,2020-10-15T04:06:22Z,0,"Hello Corey, thanks for the video!  Based on your example, I noticed that the attribute ""fullname"" is internally ""computed"" every time the user invokes such a method from an Employee instance. So, if ""first"" (or ""last"") is modified, then this change will be automatically reflected in ""fullname"" the next time it is invoked.  This means that instance attributes defined as properties (as in the example) behave like ""dynamic"" attributes.",True
@skrclips99,2020-10-12T06:21:58Z,0,Thanks Corey!,True
@dragoooon9561,2020-10-10T17:10:07Z,0,Why the hell would anyone use setter and deleter when you can just change the emp_1 instance or just delete it???,True
@bilal8561,2020-10-07T18:46:19Z,2,when you realize  this video is 4 years old . And Corey is still liking  the comments,True
@goldwinstewart6590,2020-10-06T22:40:01Z,0,Fantastic explanation!,True
@imranayari,2020-10-06T08:16:55Z,55,"You can as well password protect the changes that can be applied to the property decorator, for instance, on deleter implementation:      @fullname.deleter     def fullname(self):         password = input('Please enter password: ')         if password == 'pass':             print('The fullname ' +self.first +' ' +self.last +' is deleted')             self.first = None             self.last = None            else:             print('Invalid password')",True
@imranayari,2020-10-06T08:12:48Z,7,"After weeks of learning of OOP in python using other sources and I couldnt understand, now in 60 minutes plus, I was able to understand the concepts and logics behind OOP. Thanks Corey Schafer",True
@valentinoamato9238,2020-10-03T03:09:30Z,0,"I had some trouble while learning this thing but luckly this video helped me a lot, thanks",True
@alitajvidi5610,2020-10-03T01:21:53Z,0,Great lesson! Thank you so much,True
@remzgr,2020-09-30T05:34:22Z,16,I am a non-programmer trying to learn Python and this series has been an absolute boon when compared to the other courses! Thankyou very much Corey!,True
@baswalingardale1986,2020-09-28T18:10:18Z,0,Saved in brain successfully!!!!!,True
@marcc1179,2020-09-28T17:04:28Z,0,What a surprise. I always thought that one attribute was automatically updated if one of the attributes upon which it depended changed,True
@alfrednoodle1028,2020-09-23T21:00:43Z,0,"I don't understand why self.email wouldn't change automatically. but a fullname() would. Both of them have to be runned through __init__, because both of them have self.last in their scheme. Does ""Jim"" get overridden when self.email goes through __init__? (But why wouldn't ""Jim"" get overridden when fullname() goes through __init__?)",True
@sebastiancastro63,2020-09-16T21:15:50Z,0,Does this also work with subclasses? Like if I change an attribute in the superclass object (assuming the subclass takes in the a superclass object for the constructor) could the subclass object see that change in a superclass attribute?,True
@adhaarsharma753,2020-09-15T13:24:06Z,0,Creating a method and using it like an attribute.,True
@rasharun5683,2020-09-15T10:33:54Z,0,Thanks Corey,True
@sep69,2020-09-10T10:25:42Z,1,Thanks you very much for the OOP tutorial series. I was already using classes but still learned a lot from your videos. Big thanks again :),True
@syedfayaz2693,2020-09-10T00:23:56Z,2,Very nice and clear explanation of OOPS concepts. It would be nice if you can add more topics in OOPS concepts.,True
@loki.1130,2020-09-08T09:51:04Z,0,"Does python have access modifiers? Like private, protected, public as in java?",True
@boluaygepong5920,2020-08-27T13:51:09Z,0,Love Your Content <3,True
@raghavnegi713,2020-08-24T09:44:31Z,1,How do you comma out 4-5 lines at once .Pls tell .,True
@srikanth1385,2020-08-21T07:16:32Z,2,"Hey Corey, as usual the content you deliver is great. It will be really helpful if you could start a playlist on data structures and algorithms in python.",True
@saidileep7438,2020-08-19T15:39:11Z,0,what is the del keyword does here?,True
@marcc1179,2020-08-16T18:54:05Z,0,"I was watching another video explaining the property decorator. However, he used so complicated an example that I did not grasp the idea. Yours is easy to understand. Well done!  Best python teacher on youtube!",True
@kealii3553,2020-08-12T04:57:21Z,0,Amazing Tutorials!!! Coming from C# i can now see why python is such a popular lang :),True
@petervann7539,2020-08-12T04:08:26Z,0,Excellent explanation!,True
@ErickG,2020-08-09T15:55:58Z,0,You are a magician,True
@riyana2428,2020-08-09T14:32:29Z,1,Thank uüôè,True
@dharmateja623,2020-08-06T16:42:00Z,0,"Hi Corey, Greetings!!  I have watched all your OOPs tutorials videos and they are exceptionally good. May I know if you have made any videos on Polymorphism, Abstraction and Encapsulation in  Python.  I couldn't find them in your video list. Can you consider making one on this please. Thanks in advance !!",True
@chrismalingshu,2020-08-01T18:11:23Z,0,it's a WOW moment! never thought that these property decorators could be that powerful! Amazing :) Appreciate it a lot!,True
@muhammedaydn1885,2020-08-01T16:53:50Z,0,"Thanks a lot, you make really easier to understand OOP concept, but how can we use getter notation, because I also saw getter as notation after fullname. .",True
@truesoul9142,2020-07-30T17:51:43Z,0,"Print("" Thank you so much I finally understand the OOP concept \nüíù  from INDIA "")",True
@satoshinakamoto171,2020-07-30T13:42:29Z,0,hmm. i am finding this difficult to understand,True
@theJYC,2020-07-30T08:33:23Z,0,"Corey- not sure if you'd get my comment but thought it might help others anyways.   Following your tutorial word-for-word, the property decorator (and setter/deleter) were not working, so I googled and found a Stackoverflow response that helped*   Long story short, once I let class Employee inherit from object, I was able to now make use of the decorator/setter/deleter. How is it that in your case, you didn't need to explicitly inherit from object and still have these work?   Thanks in advance!  * source = https://stackoverflow.com/questions/21604388/python-property-decorator-not-working",True
@MawaMaverick,2020-07-30T04:15:43Z,0,Nice,True
@trishithachowdhury7813,2020-07-29T15:09:31Z,0,He is better at explaining than my Professors in College,True
@NAGB968,2020-07-28T21:41:22Z,0,Can somebody tell me what editor he is using? Thanks!!,True
@SACAS20,2020-07-27T21:12:31Z,0,"Dudee! I swear I barely understood what you said, I don't speak English well, but I understood what you want to teach, thanks",True
@alexanderdecember8743,2020-07-26T19:26:55Z,0,You are an unreal brained bro. Awesome,True
@hermesdhenares6893,2020-07-26T17:32:59Z,0,"I made a Python course some months ago: paid too much for too little; I began the Treehouse Python Track: too many conceptual holes, some topics barely explained. You just filled each and every one of those holes, Corey. Your vids are fantastic!",True
@stevepaul1707,2020-07-15T17:43:40Z,1,This guys explains python so well!,True
@sreekanththota2200,2020-07-15T07:37:21Z,1,"I just now compleated  all ur OOP  concepts,it took 2days for me......finally feeling happy......Tqs for osm explanation.....",True
@imrans5538,2020-07-14T02:07:25Z,0,Bro plz go through inheritance and subclass briefly,True
@abdoubenkacem6893,2020-07-13T17:58:00Z,1,Best tuto thanks great job,True
@NehaPd,2020-07-12T18:55:47Z,1,"Thank you, sir!",True
@ashokbudha4777,2020-07-12T07:24:55Z,0,Thank u so much Corey for this tutorial .  I learnt Object Oriented in C++ in university but didn't grasp much in college.  I am clear about those things now !!!,True
@KhoiThinh,2020-07-12T03:02:08Z,0,"At 01:46, Corey said that it would break the code for everyone using the class. Can someone please explain how it break the code?",True
@dilpreetsinghnagra,2020-07-08T18:59:20Z,5,I have watched his almost every video related to python and believe me he explained to me clearly every concept that I wanted to study related to python,True
@imrans5538,2020-07-06T15:07:20Z,0,about getters,True
@theboyofjoyy,2020-07-03T13:28:19Z,1,Awesome! Good job!!,True
@olivierb9697,2020-06-27T13:39:38Z,0,Amazing explanation !,True
@sonumpsah1,2020-06-25T07:52:53Z,1,"Hi Corey, Can you please help me with this? https://stackoverflow.com/questions/62569948/how-to-call-super-attribute-defined-in-base-class-using-property-decorator",True
@SohailKhan-yi7my,2020-06-18T04:16:38Z,0,Please someone tells me which one is the next tutorial step after this!,True
@mananshah2140,2020-06-17T10:27:32Z,0,"i do understand what the @property does, but i don't know what it is exactly doing. Just know that it is adding functionality but don't know how. Inspite of learning decorators and all that concept, i dont know how they work here and only understand the examples of those videos. I would appreciate if u can make a video on this and explain in detail.",True
@TheMimeGogo,2020-06-15T20:15:35Z,0,"few points of confusion: 1) why was it necessary to empty the first and last variables under the fullname deleter when it'd get rid of the method entirely? was it because we didnt want anyone using the first and last vars after deleting the fullname attribute? 2) print ('Delete Name!') no longer seems to be working within the deleter, maybe this comes from using a new version of Python?",True
@WaelZahran,2020-06-15T15:22:44Z,1,"Thank you very much for the simple and clear explanation, really appreciate your efforts, one thing I hope you to add to this nice tutorial is how to store and retrieve class objects using different file types. thanks again and good luck",True
@binhaowang283,2020-06-12T00:22:08Z,0,How to find standard library code in my computer? I think it is a good way to explore the modules.,True
@vikasvk9174,2020-06-10T13:53:41Z,2,Big thanks for OOps series :)  Lots of love from india :),True
@wendyslittleprogram3984,2020-06-08T10:45:12Z,0,So what is the argument for not using property decorators? If I don't need setter or deleter functionality should I just stick with a standard method implementation?,True
@alwaysindistress8114,2020-06-05T13:16:19Z,0,Maybe i missed something in the video but i still don't get how email attribute is not able to pick the new first name and self.first is when both of them are in the same method? help,True
@davidbrown2806,2020-06-02T18:52:12Z,0,"What I did was run print(emp_1) after the del emp_1.fullname statement. The code deleted the first and last name, but the object emp_1 still exists but appears to be empty. The print statement returns <__main__.Employee object at 0x10e905d00>.   I put in a __repr__ method, and it returned Employee('None', 'None'). I think that shows that the object still exists but is empty.",True
@Bjquez,2020-06-02T01:39:37Z,1,I want to hug this man,True
@LadyPary8,2020-06-01T16:22:01Z,4,I love how you explain everything so simple and clear! I watched this whole tutorial! Thank you so much! Be safe.‚ù§Ô∏è  Ps. Your really good voice makes this learning process a lot better and easier :),True
@nadik4531,2020-05-30T12:36:26Z,1,You make programming so easy to learn mate. Thanks for the great videos.,True
@alexisaddicted,2020-05-29T11:50:04Z,10,"Unbelievable quality of this content, well done! Simple yet concise and to the point. Helped me a ton, thanks!",True
@wendyslittleprogram3984,2020-05-27T18:37:35Z,1,"Thank you for these fantastic videos. So just to confirm, the @property decorator is the 'getter' - i'm not sure if you clarified this in the vid?",True
@om3rbenbrahim488,2020-05-27T16:00:18Z,0,can you please make a tutorial on how to use pyi files,True
@jurkokubik6383,2020-05-26T18:22:01Z,0,"Bruh, I was up till 7am trying to figure out why my code wasn‚Äôt working. This just solved it all. Why is the solution so simple every time you have a problem?",True
@emreozgun3846,2020-05-23T21:01:07Z,0,"1:20 hey i don't get it. why the email still has the old first name ? since we've upgraded the first name, shouldn't the email be upgraded as well?",True
@beitexue2490,2020-05-23T09:03:38Z,1,Very efficient and great explained,True
@seifbouanik3689,2020-05-22T01:08:39Z,1,"No jabber, straight to the point, great job!",True
@siuuomi,2020-05-21T01:13:25Z,1,"Loved this seriesm thank you! My bachelor thesis will look much more professional with using OOP instead of the classical ""MATLAB-approach"" :D",True
@ManishKumar-hv8hg,2020-05-19T15:12:39Z,9,"Please sir, like this, make a tutorial on ""Data Structures using python"" like; linked list, stack, queue, tree and graph",True
@tivasalvation,2020-05-15T08:44:22Z,8,This is good! I actually just came here to learn the OOP. I just found myself going through the whole channel. The lectures are great üëå,True
@pratyakshgupta4787,2020-05-11T10:17:15Z,0,This OOP tutorial is amazing .. üíó loved ur work,True
@ahmadkhattab5700,2020-05-10T00:04:22Z,1,thanks sir everything is clear,True
@madhuvarun2790,2020-05-09T14:16:10Z,0,Why does adding property decorator make the method behave like an attribute? How does property works internally?,True
@kobebryant8836,2020-05-08T23:03:30Z,0,U didnt teach getters??,True
@ibrahimal-mahfooz8737,2020-05-08T12:40:24Z,1,Such a clear and clean tutorial. I really benefited from this a lot when I studied for encapsulation.,True
@sreejareddygummi4900,2020-05-08T07:26:37Z,0,You should have written self.first and self.last for email to update every time u give parameters,True
@ahmadzailani5017,2020-04-30T22:25:39Z,0,https://youtu.be/teokMxc0SYU  Like it,True
@koluboyinavaraprasad32,2020-04-30T15:27:20Z,0,Big Fan from India Corey Ms,True
@joydantongma728,2020-04-27T00:44:34Z,0,"Hi Corey, thanks for the video. Question on resetting first name from John to Jim (at around 1:16)    If different outcomes between method fullname() and attribute email result from the fact that method calls on self again and receives the latest first name, wouldn't the code below enables attribute email to update the first name as well?   class Employee():     def __init__(self, first, last, pay):         self.first = first         self.last = last         self.pay = pay         self.email = *self.*first + '.' + *self.*last + '@gmail.com'   I tested it and the email wasn't updated. Could you help explain?",True
@Arthurk346,2020-04-26T14:30:59Z,0,Hey can I say I love you?,True
@thomasstevens4643,2020-04-25T16:53:27Z,0,Hi Corey is it possible for an instance of a class to remember its original init values and then be reset to those values on request?,True
@praveen1193,2020-04-25T13:05:12Z,0,"emp1.age=30, if we do this it will create another variable in emp1object. is there any way to prevent that?",True
@PerFeldvoss,2020-04-23T21:45:26Z,0,Can you use the setter function in the  _init_.. üòâ,True
@Laaaaaber7311,2020-04-22T09:24:53Z,1,After watching your OOPS series I wanted to rewrite some procedural code. This raised the following question: Can you explain when it does makes sense to apply the OOP paradigm and when it is just inappropriate? Thanks in advance!,True
@NobleSteed00,2020-04-20T20:26:49Z,0,What is the point of having the function name in the decorator? Wouldn't @setter and @deleter have been enough?,True
@cristif92,2020-04-20T13:46:12Z,2,"now after I watching other tutorials, I really understand how great were these videos. :| A little bit fast, but to the point.",True
@nep1piece812,2020-04-16T02:18:53Z,0,"I have one question.  I did not get what is going on...   class Emp: 	def __init__(self, first, last):  		self.first = first 		self.last = last 		self.email = self.first+"".""+self.last+""@email.com""    ### here           def fullname(self): 		return ""{} {}"".format(self.first, self.last)       x=Emp('FGH', ""DFS"", 50000) print(x.first)     # FGH x.first='ABC' print(x.first)    # ABC print(x.email)   #FGH.DFS@email.com print(x.fullname())  #ABC DFS     now my question is that, if we instantiate x with first name FGH, then self.first will be FGH. But with x.first = ""ABC"", why did only print(x.first) printed ABC but, print(x.email) still used old name FGH ? email part (see ###here) also contains self.first so should not new value also reflect across it as well ? Moreover, if new value is not reflected across the email, then how come, fullname gets new ABC value ?",True
@maor9368,2020-04-14T02:06:14Z,2,Thanks!! the videos was so fun and easy to understand :),True
@Aditya-hk4je,2020-04-12T15:19:26Z,0,This is great!,True
@sebastianelsaca7872,2020-04-11T02:20:07Z,1,better than all my teachers in my university. Thanks,True
@mariolintang7081,2020-04-10T08:04:13Z,0,"Hi Corey, when doing @property I am getting ""AttributeError: can't set attribute""  I have attributes below: self.kids = kids self.books = self.kids * 3  then I do @property def books(self):    return self.kids * 3  I know I have to do a setter, but not really know how to do it because my case is different with your example.  My IDE (Pycharm) is giving a hint ""property books can not be set"" and there was a pop up on that offer help to fix it, I clicked it, nothing changed on the code but I did not get the error anymore when I run it. I do not understand what Pycharm did, but I want to find out how to fix it my self, manually.",True
@TarcisioBrun,2020-04-08T14:39:53Z,0,One of the best teachers in You Tube!,True
@danpickford3894,2020-04-08T01:42:43Z,843,If i can learn OOP at 2am in quarantine without the use of my singular brain cell then the explanation must be doing something right XD,True
@qbmain1487,2020-04-07T16:38:52Z,2,Amazing example that really shows the need of these methods,True
@DilipKumar-ic5cg,2020-04-06T01:42:36Z,1,"your videos are exceptional, Hi-5",True
@lil_fix,2020-04-05T15:22:47Z,1,Thank you sir!,True
@hubertcombomarketing2693,2020-04-05T09:07:25Z,1,Another great python tutorial. Thank You.,True
@ilankalika9775,2020-04-01T17:29:02Z,1,"Corey, this python OOP series is awesome! keep up the great work!  sending you a big like from Israel. Ilan.",True
@pritom_hazarika,2020-04-01T15:34:33Z,2,Thank you! learned a lot from this series.,True
@sumanshu.nankana,2020-03-28T22:30:28Z,0,"Hello Sir, is there any change in Python3..This is not working for me..   class Employee:          def __init__(self, first, last):         self.first = first         self.last = last          @property     def email(self):         return '{}.{}@email.com'.format(self.first, self.last)          @property     def fullname(self):         return '{} {}'.format(self.first, self.last)          @fullname.setter     def fullname(self, name):         first, last = name.split(' ')         self.first = first         self.last = last      emp_1 = Employee('Sumanshu', 'Nankana')  emp1_fullname = 'Ashish Kumar'  print(emp_1.first) print(emp_1.email) print(emp_1.fullname)",True
@acidicacid6328,2020-03-26T10:55:30Z,0,"So, That's all for the OOP in Python? Or there are some advance concepts?",True
@mechwar,2020-03-15T21:12:38Z,0,Very nice tutorials. Do you have any tutorial for GUI?,True
@kareemjeiroudi1964,2020-03-12T13:55:17Z,1,"This is a relief for me, especially that I am a fan of Java's getters and setters",True
@haduyduong5853,2020-03-08T14:21:01Z,0,Can you show me how to delete an object from the class. For ex: I have the emp_2 is supervised by the manager mgr_1. I wanna delete this employee (maybe fire) and deduct the number of emp in emp class and the employee under the manager 1,True
@pallavisaxena7496,2020-03-06T02:25:59Z,0,Thanks a lot for these videos. Could you please make video of multiple inheritance and method overloading,True
@vman049,2020-03-05T16:52:08Z,0,Just binge watched the entire series. Great explanations and a great reference to come back to. You're the best!,True
@Zorander2008,2020-03-04T17:57:43Z,0,"I'm converting over to Python from having taught myself on the job about Perl for a dozen and more years now.  I have to say, I'm really liking Python a lot more than I did Perl, and I love Perl, so that's saying something.  Corey does a great job about OOP, which I never really understood from Perl.  But Python (and Corey's tuts), I have come to a great understanding of how all this works now.  Thank you for the great series and I will be watching many more of your videos, I'm sure.  The only problem is deciding which....",True
@garrybeck216,2020-03-03T15:17:50Z,1,"Thanks Corey,  great set of tutorials on Python OOP.",True
@snehlatabharmoria2664,2020-03-03T11:20:56Z,1,nicely explained..learned a lot,True
@parikannappan1580,2020-03-03T03:29:05Z,0,what option is used to get [ finished in 0.0s ] at the end ?,True
@ashishbastola2963,2020-03-01T13:40:30Z,1,All of your tutorials are just awesome !!,True
@tanselervansel1648,2020-03-01T06:54:35Z,1,The Best Teacher in Phyton so far. Thanks for your education.,True
@eakzit3181,2020-02-26T16:38:04Z,0,Hey dude what IDE are u using?,True
@user-pt4vn5hr2z,2020-02-26T10:09:57Z,0,"Hi Cory, After works with OPP programing your tutorials help me a lot.   But i still find my self miss some basics.  for example: i wrote a class that build an sqlite3 DB with ""object_name"" column under ""File"" table. In this class i also wrote a function that go to the db and return a row according to the ""obj_name"" column . ""def get_db_row(self,file_name):""  all works grate until i tried to understand how to write an attribute for this function.   for example. get_db_row(""some name"").get_obj_id   should return the obj_id from the DB. something like ""datetime.datetime().now""  i try to search in Google with no success. i hope you can do a video on this topic in the future.  Thank you for every video that you upload, i learned from you a lot.",True
@diontan7096,2020-02-25T09:03:39Z,2,"Hi Corey, I hope you know that you are awesome. Thanks for the tutorials.",True
@vbrao,2020-02-24T06:44:51Z,1,Amazing!!!,True
@anubhav9476,2020-02-19T13:12:30Z,0,"Thank you for this amazing tutorial  Guys, if you want a copy of the tutorial, I've uploaded it on github, with some comments explaining what's going on  https://github.com/Anu-bhav/Python-Advanced-Tutorial/blob/master/tutorial_6.py",True
@hichamamchtkou7343,2020-02-17T22:34:02Z,1,"Men, they should give you like a nobel prize  about what you have done not only in this tutorial but  in  your Youtube channel , you're like superman for Python developers, thank you very much!",True
@manuelch4589,2020-02-14T23:11:24Z,2,Holy Moly. Loving your videos the more i watch them. I am new and i am gradually turning into a hero. Keep up and thanks.,True
@mohamedesmat2726,2020-02-13T10:30:49Z,0,"Excellent tutorial but one thing i cant understand, why when we modify the self.first in the 1st example, why did the first name change and the email didn't. does the code in __init__ run only once unless modified ?",True
@worldentropy,2020-02-10T21:39:14Z,0,"Lovely, clear and to the point. One question: what if you wanted to deal with a condition or an exception, say a empty first or last property, at both instantiation and during run time? e.g. if emp = Employee ("""", ""Smith""), then it's easy to raise an exception at instantiation time, but how would you raise the same exception if emp.first = """" was entered at runtime, say ?",True
@chrislam1341,2020-02-10T11:22:56Z,0,so how to use the getter decorator,True
@chinmaymaganur7133,2020-02-04T16:54:54Z,0,"when emp1.fname was updated  , email did  not change  why?",True
@chloewarden1876,2020-02-04T05:21:32Z,0,"coming from a c++ and C# background, this is very nice, not adding brackets or semicolons are gonna take getting used to but, you mentioned your setters and deleters, I went through the video and heard nothing about the Getters. I probably missed that sorry but,  wherein the video does it show an example of a getter?",True
@imeyris,2020-02-02T02:04:19Z,0,"Is there an issue with    def upd_email(self):     self.email = '{}.{}@email.com'.format(self.first,self.last)   and then just call upd_email?",True
@frankhu6922,2020-01-31T17:27:59Z,0,"I have a question! With the deleted delete the name,  the object name becomes none. Does the object still exist? If so, when printing the emp_1, we would just get ‚Äúnone, none, none.none@email.com, 50000‚Äù? Or the object is deleted?",True
@leavesarerandom,2020-01-28T22:38:25Z,0,maybe im just tired but i dont get why print(emp_1.email) generates incorrect result in the beginning. Can anyone explain this to me please? I suppose it's because we are using first and last instead of self.first and self.last but i still don't get it.,True
@mykhailoklym4417,2020-01-26T15:44:26Z,1,It was a great performance! Thank you!,True
@hetalchavan9446,2020-01-26T09:26:39Z,0,"in the __init()__ method itself why couldn't we write self.email=self.first+''.""+self.last+""@email.com""",True
@kvnptl4400,2020-01-25T12:16:08Z,1,"superb series of 6 videos on Python OOP concepts, learned a lot. Thank you Corey!",True
@jayv2052,2020-01-25T04:27:42Z,1,Lifesaver,True
@7justfun,2020-01-23T13:54:31Z,0,Thanks a ton. How is this property decorator different from function or method decorator where it's used to return wrapper functions? Is this property decorator manily just to indicate an attribute mad map it to a function call?,True
@MarshmallowIceCream,2020-01-22T21:26:26Z,1,I watch your videos. I have a new job. I love my new job. I love your videos.,True
@kingkai129,2020-01-19T04:36:11Z,1,You're a job saver lol,True
@tobi11999,2020-01-11T01:32:56Z,1,It just works,True
@silverheart573,2020-01-08T08:36:05Z,1,"Hi Corey, Thanks for your Tutorials. How do i do if i want to count the number of Developer and Manager for each instance separately from the total number of Employees.",True
@hayatt143,2020-01-07T13:52:36Z,1,I believe you can explain rocket science like a piece of cake. Awesome tutorial.,True
@trapworld3023,2020-01-07T10:42:25Z,1,great python tutorials ill give you hats off man,True
@dinandroos3408,2020-01-03T13:14:30Z,0,"Do you only use a property setter when you want to define an attribute with the same name as the property, or is there more to it?",True
@stephenrogers5458,2019-12-31T19:07:55Z,0,I'm a software developer refreshing my skills to include Python and JS (from a base of having done a lot of C#).  I find your pace and style perfect for doing this as quickly as possible.  I am able to incorporate what I'm learning into actual ground up product dev coding as I go through your short tutorial format.  Looking forward to seeing other videos you've created.  Thanks for the great work.,True
@baspass8578,2019-12-25T10:54:42Z,0,"Hi Corey, please make video on multiple inheritance , and a video giving a reason that why we should not pass mutable data types as arguments",True
@baspass8578,2019-12-25T10:54:12Z,0,class,True
@parthvats7781,2019-12-24T07:13:14Z,0,"You are exceptional at what you do! I have a doubt regarding the last step at deletion i.e when you deleted the fullname and set first and last to none then why we get the printed value as corey ,..... Is the code of deletion ran before the updation of the fullname of emp_1?",True
@hillsbills8634,2019-12-13T23:24:29Z,0,Why do you talk so fast? Whats the point?,True
@rahulkishor7935,2019-12-04T15:49:45Z,1,Awesome Corey... Thanks !,True
@jharris4854,2019-12-04T12:02:07Z,0,@6:43 Im getting a AttributeError: 'function' object has no attribute 'setter' . Does the syntax change in python 3.8?,True
@directduck,2019-11-25T05:43:00Z,0,"For those who also care about nonsense things: class Employee: ...     email = property(lambda self: f""{self.first}.{self.last}@email.com"") ...  print(emp_1.email)   I don't know who would do it this way, but it works just fine.",True
@romanleca4969,2019-11-23T13:50:15Z,2,"I would kill to have had this kind of teacher back in the university days :) Thank you for the fantastic work, Corey.",True
@mrchi6611,2019-11-19T03:17:53Z,0,Wow. I can't help but imagine what set of Aliens will watch your video and give it thumbs down.  Probably Haters. Very sure of that... Mind-blowing series I must confess,True
@ajiteshbhan,2019-11-18T00:54:16Z,0,"Great explanation of the concepts mate. These were well tailored six videos , only suggestion would be to put a link or description  for few examples on which viewer can work  on.",True
@karthikacharya7748,2019-11-13T11:00:33Z,0,How to send two parameters in setters?,True
@brutalbutler,2019-10-29T12:22:07Z,0,What advantage would this have over just writing normal get and set methods like;   def get_FullName(self):        return f'{self.first] {self.last}',True
@alexkhalamsky3715,2019-10-25T14:42:30Z,0,"I dont get it: all the fuss just to drop the  parentheses? What was wrong with just regular methods without the decorators? Still like and still subscribe, you know.... Peace",True
@lolipopjojo6218,2019-10-24T19:42:35Z,0,"Great video, do you plan to do a python MySQL tuto?",True
@madammemed3160,2019-10-19T06:53:57Z,2,So clear at all Good explaining.... Good job üëçüëç,True
@wwtorm510,2019-10-12T17:31:47Z,0,How to change email?,True
@hemanthkotagiri8865,2019-10-12T17:16:59Z,0,So is this the end for Python's OOPs? Is there anything more that I need to learn about Python's Classes?,True
@ebla1n393,2019-10-09T14:16:30Z,0,Have I messed smth?,True
@ebla1n393,2019-10-09T14:16:15Z,0,emm... And what about getters?,True
@qwertzuiop1978,2019-10-07T16:53:48Z,0,This seems pretty useless tbh. I really don't know where I would need this perk,True
@andip3domi702,2019-09-30T20:24:05Z,0,"As always your videos are easy to follow and understand but 1 question if I may, do you always have to create a getter (property) to be able to create a setter? Because they look like they are connected  to each other",True
@akashraut7265,2019-09-22T14:27:23Z,0,A very nice video. But I think you should include Abstraction and Polymorphism to the playlist. Looking forward for the change. And once again thank you sharing the information.,True
@Akshay-cj3hq,2019-09-14T05:02:14Z,2,thats an insane like ratio :o,True
@hafededdinebendib5974,2019-09-09T07:49:52Z,1,thank you sir,True
@peterchen5710,2019-09-08T07:36:58Z,4,"Corey champ, you are unreal! I can't thank enough for the way you explain the concepts/designs, you dont just show me how things works, but you help me UNDERSTAND how things works. I will be sure to show my appreciation via Paypal once I get  a dev job, thank you!",True
@ahmedabdulrahman8567,2019-09-04T06:08:49Z,2,thanks for the great work Corey,True
@bardamu9662,2019-08-27T12:31:06Z,1,Very comprehensive tutorials. Congrats and keep it up!,True
@dr_920,2019-08-26T21:42:49Z,3,Thank you so much for spending time on preparing the Class series. I've learned a ton from them.,True
@mohitjagdale4735,2019-08-23T10:37:05Z,1,Thanks a ton for this awesome playlist!!,True
@amt_XXI,2019-08-21T16:08:48Z,1,You have the best tutorials! Nice work!,True
@brunoalmeida381,2019-08-20T22:15:58Z,1,"Thank you, Mr. Schafer!",True
@purplesalad7272,2019-08-17T17:43:05Z,1,Corey be my dad!,True
@czagazeta,2019-08-15T15:03:38Z,3,"Thank you for this series! Your series cleared up a lot of the confusion I had about OOP in Python. I sent some BTC, and likes your way. Cheers!",True
@0568raju,2019-08-11T19:43:58Z,0,Getter is not shown,True
@tianhao7783,2019-08-09T09:25:23Z,1,what a nice tutorial! more more more~~~,True
@manuelcastellanos9470,2019-08-09T03:17:42Z,0,"Cory, If you call the attribute employee.email it will run the code under the @property decorator every time we call for it. But what if this code take a long time to run? Don't we want to fix the return value to avoid running the code every time we use it?  How do we solve this problem?",True
@JustOnYoutube2023,2019-08-06T04:16:11Z,0,"Hi Corey, Can you please also add try except block to handle exception. once i deleted the name from emp_1, if someone tries to print it , it throw an exception.",True
@spicy2112,2019-08-04T20:01:18Z,0,"Can't we do self.email = self.first+'.'+self.last+""@email.com"" ? in the __init__ ?",True
@manulgoyal6662,2019-08-04T14:29:32Z,341,30 semicolons disliked the video,True
@balrog5202,2019-07-29T06:55:18Z,0,"Thank you for that video, it helped me a lot!",True
@peepachu6605,2019-07-23T11:08:57Z,0,Hey Corey ! I have a question. What does the AttributeError: Can't set attribute mean ?,True
@gladyouseen8160,2019-07-21T04:17:28Z,0,Please tell me why 04:58 showing an error,True
@whjeng,2019-07-20T11:13:07Z,0,This is an excellent explanation for property in very concise way. Thanks Corey.,True
@brynshannon6692,2019-07-17T15:18:13Z,1,Are there going to be more videos in this series? Because I wanna know if I should hang around to get more Python OOP knowledge.,True
@MrJonte87,2019-07-16T14:06:53Z,1,"Hi Corey,  Thank you for a great video as always. I do have one question that I was wondering about. What is the reason that email doesn't change when firstname is changed at 1.50 ? What separates email in that case?  Thank you again.",True
@shivajishinde1496,2019-07-14T07:57:39Z,3,The best python teacher I ever had. Thank so much for providing highly valuable information. I like your accent very much!!,True
@atlaschooty,2019-07-10T07:14:12Z,1,people like Corey makes people want to code.,True
@mellasmpakaniye1404,2019-07-08T13:27:49Z,1,Dear Corey I am very happy with your videos and I wish all teachers were like you. It was very had for to understand this OOP but now I feel very Ok. Thank you very much.,True
@Allomerus,2019-07-05T04:36:32Z,1,"Again, excellent. Thanks!",True
@elghark,2019-07-04T14:03:58Z,0,"Problem: it doesn't recognize the name   @fullname.setter. I wrote it in the very same way as you but it doesn't change color and the system shows me an error: ""@fullname.setter:^  SyntaxError: invalid syntax",True
@elperronimo,2019-07-01T17:52:21Z,0,Naym,True
@ancientgroove3464,2019-06-30T17:06:32Z,0,Can you explain how email gets updated when you set the fullname?,True
@koualsky,2019-06-29T10:31:45Z,1,the best explanation of @property on the web. thanks :),True
@Mainhunpyarkamusafir,2019-06-19T02:55:26Z,3,Can't believe This channel was there and I found it now ... Awesome Corey .. I never understood these concepts before :),True
@BiplavChoudhury,2019-06-16T23:59:51Z,0,"Not related to this lecture, but what is the difference between: return (  '{} {}'.format(self.first,self.last)  )                   and return (  self.first +'  ' +self.last  )                                  when defining the fullname() method? I get the same output, so why are we using the format function?",True
@astridjerald5328,2019-06-13T03:06:34Z,0,At 6:32 why can't we directly set self.first and self.last to name.split?,True
@divakark1,2019-06-10T09:30:38Z,0,Can you please throw some light on how __getitem__() and __setitem__() works as well?,True
@bright1402,2019-05-30T05:05:28Z,1,"Great video! But please notice that, in the first instance, if we add self to both the first and last name to construct the email attribute like the following:   class Employee(object):          def __init__(self, first, last, pay):         self.first = first         self.last = last         self.pay = pay        # Add self before first and last         self.email = self.first + '.' + self.last + '@company.com'              def full_name(self):         return '{} {}'.format(self.first, self.last)  emp1 = emp1 = Employee('John', 'Smith', 5000) # Change the first name emp1.first = 'Jack' # The full_name() method works well emp1.full_name() -> 'Jack Smith' # But the email method still gives John emp1.email ->'John.Smith@company.com'   Why does that happen? It seems like I have changed the self.first attribute. And since the self.attribute is built from self.first, it should have changed simultaneously. Could you explain this? Thank you very much for your time!",True
@syedabdulrahmans3357,2019-05-23T17:45:00Z,0,"Hi Guys, What else Should I learn  after completing these OOP videos to complete OOP concepts? Thanking you.",True
@stealthwolf1,2019-05-23T16:23:01Z,0,"After running del.emp-1 , does fullname automatically update to reflect the changes in first and last?",True
@gmmxn,2019-05-22T16:11:19Z,0,"As a C++ developer, I needed those:D BTW, where is the ""getter""?",True
@muhammadahmed6884,2019-05-21T17:15:20Z,0,my decorator fullname.setter is not working help please,True
@daevski,2019-05-08T15:55:03Z,6,"Bro, this is genius; I understood this example very clearly, and I was struggling to understand @property otherwise. Thanks so much for this awesome example!",True
@garygriffith5065,2019-05-08T04:20:44Z,0,When I use the fullname method I have to leave off the () after fullname otherwise I get error ‚Äòstr not callable ‚Äò.  I can‚Äôt figure out why.,True
@singularity1130,2019-05-04T16:05:44Z,0,3 years in the future but for some reason Print doesn't work. The properties performs the name split and deletion but refuses to print which is the weirdest thing.,True
@CousinsDayOut,2019-05-03T12:19:44Z,0,"Want to know, Why I am getting error('str' object is not callable) if I call  ""emp_1.fullname()"" once fullname has setter and property decorator.  I want both emp_1.fullname and emp_1.fullname() to work. please help me in this",True
@jimnobles7117,2019-05-03T05:20:35Z,0,"Excellent series. My only question, when following along, is when trying to use the setter/deleter, it raises an attribute error.  @fullname.setter def fullname(self,other):         do stuff AttributeError: 'function' object has no attribute 'setter' Same for deleter  Using python 3.6 Any ideas? the setter/deleter functions are after the initial fullname function, if that's pertinent.",True
@need2game834,2019-05-01T12:17:30Z,5,"I like how the first video has over 1 million views and the last one 226k :D for me I watched the whole series and it was excellent, thanks Corey",True
@tomeubank3625,2019-05-01T08:46:38Z,0,"If you followed the convention that methods are verbs and properties are nouns (or adjectives), the you would have originally defined a get_fullname(self) method and subsequenly the fullname property.  It used to be customary to use properties for quick, simple tasks, and methods for more complex and 'expensive' tasks.  But perhaps such distinctions are now moot.",True
@justinmacdonald1525,2019-05-01T00:31:09Z,1,Bravo sir. Excellent tutorials,True
@slimyelow,2019-04-28T10:18:15Z,17,"Took me all morning coding and documenting along, but finally got my grip on this. Yay Corey !",True
@yashjain6848,2019-04-17T11:50:24Z,1,"Thank you , Awesome place to learn.",True
@arbind,2019-04-13T15:52:55Z,0,"in my code, the @fullname.setter, not working and i am getting followig error     @fullname.setter AttributeError: 'function' object has no attribute 'setter'   is this something i need to import something to use this package",True
@lightninginmyhands4878,2019-04-12T02:03:24Z,1,"So basically, a `@property` decorated method is way to make a hefty attribute.  To elaborate: we want complex attributes that require the power of functions to design them, and we don't need those functions to be called on the instance because their responsibility is more in ""configuration"" of an object.  This elaboration is to highlight the difference with a regular class method.  The methods are for the object to interact (e.g.: verb) on other objects outside of the class.  Is this correct?",True
@ArkFreestyle,2019-04-09T15:59:11Z,1,BRILLIANT!,True
@WookENTP,2019-04-03T08:56:49Z,0,"For the record: getters/setters are a bit controversial, I wouldn't use them like this (or at all, ever), when you are doing employee.first_name = ""bla"" you expect it to do just that, people who unaware of that functionality need to enter the code to see wtf happened to the other properties... And no, getters/setters != encapsulation (preemptively :) )",True
@christophermichaelrytting5465,2019-03-27T03:28:44Z,2,"Property decorators are not that hard to explain, and you seem to be the only person on the internet who realizes that! Thanks much.",True
@ruchiagrawal600,2019-03-19T19:49:14Z,2,Why does the first name in the email doesnt get changed when we change the name from john to jim even,True
@lightninginmyhands4878,2019-03-16T05:24:06Z,1,youre a legend,True
@maninarush2112,2019-03-15T05:38:51Z,2,oh my god. thank you so much. i have this video bookmarked for future reference.,True
@YogeshKumar-hz4sk,2019-03-14T04:09:33Z,1,"Hi Corey, Your videos are osm. Could you please make a video on Co-routine from start to end. Thanks a lot,  Keep doing this.",True
@subhampolpagedar3211,2019-03-13T13:37:28Z,0,Please continue this series with encapsulation abstraction also...,True
@NaachoElegante,2019-03-13T08:58:52Z,3,"really appreciate your skills and talent of explaining...............loved everything about your videos...........be it voice, language, content, explanation, concept...........too good..............would request you to make some videos on data structures with python",True
@superumesh777,2019-03-12T09:34:56Z,1,well explained in a simple manner,True
@mrshyam538,2019-03-10T04:07:22Z,4,You are a great teacher... I have been following through all your playlists and i have learned a lot in so little time.   Thank you so much whole heartily,True
@allaabdella4794,2019-03-09T00:13:33Z,0,"Thanks Corey, I would like to ask you if you have video explains this concept: parser = argparse.ArgumentParser",True
@davidalexander829,2019-03-07T17:14:03Z,0,"Must have been caught in the same vortex as followers 3 weeks prior.  I follow up to the setter portion    AttributeError: 'Employee' object has no attribute 'fullname'.  Sure it does, Emp1.fullname = 'Joe Blow'    Interpreting errors are like decrypting ciphers",True
@mikeface10,2019-03-03T19:51:05Z,1,YOU ARE THE GREATEST! lol,True
@alperakbash,2019-02-26T20:34:31Z,1,You really know how to explain and teach. Thank you so much,True
@ArjunUmathanu,2019-02-24T16:20:01Z,1,"@Corey: Please write a Python book from Zero to Hero, by explaining every topics that fit in. I will be the first to buy it.",True
@jshashwat93,2019-02-23T01:05:27Z,2,"When the email was an attribute, could we write self.email = self.first + self.last and have it update from the latest values?",True
@abdulmoiz.6975,2019-02-20T06:02:15Z,0,can anybody tell me that why we had to use setter when working with full name? while we didn't need to use one when working with email.,True
@gatootechnical,2019-02-19T22:07:11Z,2,"Excellent video, my Python concepts are getting sharper every day, PCAP here I come...",True
@mehuljadav7936,2019-02-12T10:02:55Z,0,"@fullname.setter AttributeError: 'function' object has no attribute 'setter'",True
@thomaswolff3261,2019-02-10T19:36:17Z,0,When I run the code to delete an employee I get the error: 'AttributeError: Employee instance has no attribute 'fullname''. But i wrote the fullname.deleter method as instructed. Thanks for the excellent videos though!,True
@devanshagarwal9158,2019-02-09T13:49:37Z,1,Wow great video!!! This is one of the finest and most refined video on Object Oriented Programming Thanks a lot Corey Schafer for making such good videos and explaining oop in such a modest way,True
@Nalurilolz,2019-02-08T00:51:58Z,0,"I have one question : What is the difference between using the special method ""__setattr__"" and setters using properties like you showed in this video. I also want to thank you a lot for your tutorials, your courses are helping me a lot for my researches :)",True
@yingnanyi,2019-02-07T00:16:48Z,0,"Nice video. A question about the application of class and instances.After I finish coding the classes and objects, how can I get them into an application? If I shut down Python, all the employees, developers, and managers file I input will be gone right?",True
@arunaugustin,2019-02-05T06:32:28Z,0,"Sorry Corey, wondering where you explained the getter method. I know I look dump for asking this....is it the first example?",True
@nickt423,2019-01-28T20:11:47Z,1,Corey. You are awesome bro!,True
@nfs1013,2019-01-24T14:25:43Z,0,what ide is it?,True
@kalangiprasad4073,2019-01-20T14:55:53Z,0,"Hey Corey, in this video why did we use @------ symbol. I'm in confuse",True
@hfarukuslu,2019-01-15T13:37:14Z,0,"print(emp_1.__dict__) does not print the attributes created with @property decorator,   Does this mean people using this class will still be affected somehow, if we move the attributes and create methods with decorators",True
@fredrickkasuku6514,2019-01-14T10:57:40Z,2,Thank you very much for this work.,True
@billybabcokcs8224,2019-01-10T02:02:08Z,1,"beautiful, thanks",True
@user-ld3ix8vj9g,2019-01-09T16:36:14Z,1,Thank you too much !,True
@felixsnz7764,2019-01-03T04:08:13Z,0,"i didn't understood the ""getter""",True
@user-zg2gv3nb5y,2019-01-01T13:08:25Z,1,"as always, your video is great! Thanks",True
@colinmanko7002,2018-12-30T19:36:56Z,22,Perfectly paced. Watched all 6 parts of ‚ÄòWorking with Classes‚Äô without needing to pause. Corey goes over concepts in a logical order and without fluff (as a good programmer would). I‚Äôll be back!,True
@alexandardimitrov5064,2018-12-30T18:36:57Z,0,From where do you get the source code of the real-world examples?,True
@Impeccable_content,2018-12-29T20:06:22Z,0,"sir ,in case of inheritence how these property will work .can you please explain",True
@bonbonpony,2018-12-29T15:51:10Z,0,"Now try ""Corey    Shafer"" ;>",True
@pardeep657,2018-12-25T04:30:11Z,0,"Hi, thanks for the video. when i tried to write the same code and execute after creating the setter method, i got below error: AttributeError: 'function' object has no attribute 'setter' can you please advise on this?",True
@serhii.chumachenko,2018-12-23T15:56:10Z,1,Thanks a lot!,True
@SusanAmberBruce,2018-12-21T10:06:08Z,0,"You are the cleverest and most helpful guy who does python that I have seen, would you please give this little bit of code some consideration.   https://pastebin.com/UXWnKjdi?fbclid=IwAR1ij1NZBwmVQHe4_x97dLSMwDQYFXOOqEjTRrjBZjj6z7Xf9o5ex40-ZKY",True
@relikpL,2018-12-14T22:05:06Z,0,Where is the Getter in this example?,True
@Nuhyamin1,2018-12-14T06:13:11Z,0,I'm still confused. Could you give an example how everyone has to change their code if we don't use property decorator? Please..,True
@peterg2378,2018-12-13T10:46:10Z,0,"I have a question. If you define a property, it appears to behave like a 'getter'. However, you can separately define a 'getter' only if the property exists. So, provided I have understood it correctly, why bother with a getter other than it is more descriptive?",True
@MohamedAli-nr2dr,2018-12-09T08:22:25Z,1,Great job Corey.  Really enjoyed,True
@meltedcheese1908,2018-12-08T02:49:14Z,1,"This was a very helpful tutorial, thank you!",True
@sanjayparihar4460,2018-12-03T17:37:21Z,1,This is really awesome OOPS tutorial.,True
@asifmehmood4306,2018-12-03T16:14:09Z,0,"When I use the same  @fullname.setter , I get an error: ""AttributeError: 'function' object has no attribute 'Setter'"" . Is there anyone to help me with it",True
@kavabangaungava,2018-11-28T19:03:59Z,4,This is a brilliant example of how to explain complex things in simple language!,True
@MC-et7rm,2018-11-28T00:30:42Z,0,Why can't you just define self.email to be self.first and self.last instead of first and last?,True
@QuoVadis84,2018-11-22T13:48:51Z,0,The only thing I didn't really fully understand is the deleter decorator. What is the practical use? And for some reason I've expected to get an empty string when I ran print(emp_1.fullname) :). I got None None. And this is correct.  Also wanted to know more about this 'del' function.,True
@allinman4028,2018-11-21T23:59:57Z,34,"I had no coding experience. I followed beginner series and OOP series and coded along with them with my little three kingdoms game concept. I feel I built great a solid fundamental understanding of Python. It will be extremely useful for my future coding journey. Thank you so much, Corey.",True
@anon-sl4vp,2018-11-16T18:58:05Z,3,print('Love learning with Corey Schafer xD'),True
@naturheilkunde-kanal9814,2018-11-15T10:43:12Z,0,"How can I use the property self.email = ... and also use it as property decorator? I tried it and it gave me an error until I changed the the name from self.email to self.emaila or something like that. I guess the question would be: can I use a property dec within init?  Btw, great videos! Thanks!",True
@aidensmith6277,2018-11-14T20:56:43Z,3,"Other tutorials are so... bleh they just make you feel confused on the spot. Others make you feel like you understand because they don't tell you the whole story. You, sir, are neither. You are an awesome teacher. Thanks! üòÖ",True
@kalekalekale,2018-11-06T21:39:38Z,0,"Thanks for the great video. I copied your code verbatim from GitHub and then added the setter but it does not apply the changes, nor do I see a print occur when setting or deleting a property. I'm using Python 2.7. Any ideas?        class Employee:      def __init__(self, first, last):         self.first = first         self.last = last      @property     def email(self):         return '{}.{}@email.com'.format(self.first, self.last)      @property     def fullname(self):         return '{} {}'.format(self.first, self.last)      @fullname.setter     def fullname(self, name):         first, last = name.split(' ')         self.first = first         self.last = last         print(""Set Name"")      @fullname.deleter     def fullname(self):         print(""Deleted Name"")         self.first = None         self.last = None  emp_1 = Employee('John', 'Smith') emp_1.fullname = 'Abe Lincoln'  print(emp_1.first) print(emp_1.fullname) print(emp_1.email)  del emp_1.fullname  print(emp_1.fullname)",True
@meenumeric,2018-11-05T12:22:20Z,3,I first press like button before watching your videos. Awesome work!,True
@jiahueichan5914,2018-10-20T23:36:39Z,0,"Hi Corey, I just want to say I enjoy your tutorials very much :)  I do have a question on the property decorator if you don't mind: Initially you were showing that  self.email = first + '.' + last + '@email.com""  then you introduced the concept of property decorator: @property def email(self):     return '{}.{}@email.com'.format(self.first, self.last)  But it occurred to me that if you just replace the initial code with self.first and self.last instead of just ""first"" and ""last"", you won't need to use the property decorator to update the email and it doesn't change the code from the client side right?  I know you're trying to introduce the concept itself but I just wanted to clarify if there's any underlying reason to not do it my way?",True
@sakuraM505,2018-10-17T08:12:59Z,0,"Hey Corey  I tried this on my own on python 2.7 On the output, I found the first and last to be unchanged here in the code  class new():  def __init__(self,first,last,address):   self.first=first   self.last=last   self.address=address  @property # property decorator allows us to access a method as an attribute :)  def email(self):   return ""{}.{}@email"".format(self.first,self.last)  @property  def fullName(self):   return ""{} {}"".format(self.first,self.last)  @fullName.setter  def fullName(self,name):   (first,last)=name.split("" "")   self.first=first   self.last=last    @fullName.deleter  def fullName(self):   print(""Deleted the name"")   self.first=None   self.last=None    def __repr__(self):   return ""--> {} {}"".format(self.first,self.last)   n=new(""Henry"",""raval"",""Indiana"") n.fullName = ""Rick Roy"" del n.fullName print(n.fullName) # accessing the method email as an attribute",True
@Skaxarrat,2018-10-10T07:49:31Z,667,"Holy shit, in a bit of an hour I've understood concepts that would take hours to understand and fix the information in my brain. Thanks Corey  P.D: You need to write a Python book",True
@longtimegamer779,2018-10-09T23:50:18Z,0,what is the special method dunder mifflin? (Lets see who gets the reference!),True
@Jonathan-rm6kt,2018-10-09T16:33:47Z,4,"Best python videos ive found, keep em coming. Im coming from an analyst background so am more used to performing examples like these with database operations. Can anyone pls describe other common use cases for attribute setting?",True
@JonathanHobbe,2018-10-09T10:31:57Z,9,Finally someone that explains it so you understand the logic behind it! Thanks so much!,True
@bobc8190,2018-10-02T05:47:14Z,1,awesome super clear instruction good vocal sound supadupa class bro,True
@sundarraj6509,2018-09-29T12:42:42Z,0,Where we find other's code to read and understand how it works.,True
@wronski11,2018-09-28T16:58:01Z,0,"Is the @property decorator used only on derived variables. Here email is something you build from the class constructor information. Since the constructor is called only once, changing something after it has been invoked will take no effect on the derived variable email. Hence either @property has to be used or the email attribute should be reassigned. But are there other applications?",True
@kevinzhang8974,2018-09-28T15:58:03Z,778,I watched this whole series (OOP) 3 times and code along with it. I have to say this is so far the best videos I have watched to explain Pyhon OOP. I learned some much from it ... Thanks you!,True
@karthik-ex4dm,2018-09-18T15:11:45Z,0,"There is a famous indian youtube channel (dont wanna make names) just remakes great videos from corey's, bucky's, sentdex's  with a new name, new interpreter and a random teacher to simply promote their coaching academy..",True
@karthik-ex4dm,2018-09-18T15:04:14Z,0,"Dream OOP series!! Like del emp_1.fullname, I tried set emp_1.fullname('some name') but throws an error.. Is there any way around",True
@theflippedbit,2018-09-16T13:27:59Z,2,While(True):     say_thanks( ),True
@leonardogrinstein9815,2018-09-13T20:54:36Z,0,"Hey Corey. I found the behavior of the deleter strange. If you `print (emp_1.fullname)` it's going to print `None None` because we typed   `self.first = None      self.last = None` in the fullname method with the deleter decorator. But in my understanding, this behavior is more of a name change than a true removal of the value for fullname.",True
@voostar,2018-09-10T15:35:23Z,2,this‚Äôs the top one i watched for decorator! give me a idea to improve my last script.,True
@perkodanny,2018-09-05T06:55:47Z,0,Can you overload those properties with instance methods? Or would that piss off the parser because it wouldn't know if you're referring to the property or the callable?,True
@venkysmoments9155,2018-09-03T11:49:51Z,5,Your way of explaining and breaking things into smaller and understandable way is awesome. You are an great tutor.Learned lot of stuffs from your tutorials. My longtime wish from me is please make videos regarding Multithreading and MultiProcessing. So that all of us can make utilize and learn these concepts in a simplified manner.,True
@ArjunKG95,2018-08-29T08:18:37Z,2,I've read about @property in so many places. But understood it properly for the first time here. Amazing video!,True
@tamnhuanminh1422,2018-08-29T01:26:40Z,1,"Thank you very much, I wish I should have watched these video clips earlier",True
@dimonr6144,2018-08-27T22:46:58Z,0,thanks! Great videos!  It would be great to have additional tasks to solve them and practice OOP!,True
@mafridi106,2018-08-25T13:16:39Z,0,I'm using Python version 2.6 and noticed that I needed to use 'class Employee(object)' when defining the class. Otherwise the setter function was not being called if I didn't put 'object' inside the parenthesis.,True
@acat4701,2018-08-22T09:11:37Z,0,This was very useful! Thanks!,True
@sudhanshu20094u,2018-08-20T11:09:29Z,0,When i saw the code then i thought the first name and last name is not changing in the email of __init__ because we are not intatiating it. So i tried to write my code like this - self.email = self.first + '.' + self.last '@email.com. But still it did't change. Can anyone tell me in details why is it so? why the first and last are not changing in the email?',True
@lusch2194,2018-08-16T15:00:19Z,0,"Does the ""Employee""-object now has variable ""fullname"" like it has variables first/last?",True
@matitiudeforever8155,2018-08-12T10:27:25Z,8,thank you for all of your lectures !! may god bless you and you find happiness in your life,True
@AdityaKumar-ox3wz,2018-08-11T16:44:05Z,0,Why I always get indentation error ?,True
@objectobject6172,2018-08-03T12:24:46Z,0,"With  `@property     def email(self):         return ""{}.{}@email.com"".format(self.first.lower(),self.last.lower())`,   does this update activate whenever any variable within is updated? If I change the first name in the program and print the email before and after, the email changes and I was wondering why this happens, even without a setter",True
@jonathanlevy3401,2018-07-30T08:55:36Z,1,Huge seccess to your videos!,True
@andrewcekuta8627,2018-07-28T20:47:40Z,1,great video as always,True
@rajeshsomasundaram7299,2018-07-22T15:14:36Z,2,Thanks Corey for the remarkable videos,True
@kenbobcorn,2018-07-19T04:26:34Z,0,"Does anyone have any suggestions for future content to cover after this course? I'm looking to learn some more, but I'm not sure where to start.",True
@CalvinJKu,2018-07-19T03:24:54Z,18,Best python channel ever. This decorator thing has troubled me for so long!,True
@alexmomotov792,2018-07-17T21:25:20Z,0,"Would this be a true statement? ""The main purpose of property decorators, getters and setters is to provide the developer with the ability to turn attributes into methods without breaking client code"". If so, it appears to me that the functionality is very niche and specific to cases when the code has large user base. I am trying to think how this could be used in my personal projects, but I can't seem to come up with a use case. In addition, it would be great to see a future video about the use of private attributes, perhaps an idea for 7th OO Tutorial. Thanks!",True
@mikebarger,2018-07-09T02:09:19Z,1,Thank you for the great videos.,True
@tabancosmos2235,2018-07-06T22:24:28Z,0,"Just one thing. Once you did the delete, you should have shown that the values are actually deleted.  ""print(employee1.email) del employee1.fullname print(employee1.first)"" del also does not clear the memory.",True
@gayatribasude9071,2018-07-06T04:36:29Z,0,I can't find django tutorial in your channel,True
@ameeralsafi671,2018-07-01T22:51:14Z,0,"Corey, thanks for your imazing playlist at youtube, but this is something i did not quite understood ! why var update (first) did not pass to the email! it does passed to full name function! but it does not to email!!",True
@manishbagra9494,2018-06-30T20:19:20Z,0,when I am trying to delete the fullname (del emp_1.fullname ) it gives me an error  error : can't delete attribute note :  I am using anaconda navigator,True
@archittewari2374,2018-06-29T07:14:36Z,0,"When I executed the code after changing fullname ,it executed in python2.7 but not in python3.7.....why??  Thanks for these awesome Videos.",True
@harshitbajpai4942,2018-06-28T15:17:21Z,0,"for any body who is not getting the same output as in video, remember the version of python being used is Python3 and not Python2. Decorators and inheritance have different ways of working in both of these versions.",True
@arindammukherjee391,2018-06-23T23:11:29Z,0,"Hi Corey, I had a doubt. Can you please explain the difference between getattr and attrgetter?",True
@sunitgautam7547,2018-06-21T09:38:08Z,0,"At 7:50, can we set self.first and self.last equal to null?",True
@roushansingh9776,2018-06-14T19:13:42Z,1,awesome,True
@larryguo2529,2018-06-12T04:22:05Z,0,"Hi Corey,  would you consider to make a series of tutorials on Python design patterns ?",True
@serhii.chumachenko,2018-06-11T19:55:59Z,2,You are the best! Thanks a lot!,True
@CutegirlShanaya16,2018-06-03T18:43:40Z,1,great explanation thanks a lot : ),True
@serwoolsley,2018-05-31T00:12:30Z,0,"thank you very much, other courses failed totally in explaining this concept",True
@tylerstrasser2073,2018-05-30T22:07:39Z,0,"Why does the @property fullname function have to have @property when doing the @fullname.setter function? I was getting an error when not having @property above the first function. It was this: AttributeError: 'function' object has no attribute 'setter'  It shoul be pointed out that I wasn't actually using the fullname functions later in the code. It said it couldn't find setter attribute on fullname function.  Edit: Ok, later you say that @property is basically required.    Good tutorial btw. I love how clear of a speaker you are.",True
@iancarr3923,2018-05-30T18:52:09Z,1,Excellent! Many thanks. I prefer Python over PHP.,True
@pubgfunnyvideos1787,2018-05-28T23:06:12Z,0,Why is it that only the email attribute fails to change itself after first name is edited?,True
@samuelnewport4970,2018-05-24T16:13:00Z,0,who were the 10 people who downvoted?,True
@MdAzhar-kx7op,2018-05-18T16:23:32Z,2,Have never seen such a great tutor like you. everything you made so simple and easy to understand. thanks a lot man.,True
@after9partners,2018-05-15T17:14:18Z,1,Awesome Video series!!!,True
@spiritualquest6092,2018-05-09T15:01:54Z,1,"One of the excellent tutorials on Python, great demo!",True
@crediblemulk4638,2018-05-07T09:23:55Z,0,"I had an issue where the setter was not working, it did not set the new name, so I declared the class like this: class Employee(object): and it worked fine.",True
@mountainscott5274,2018-05-01T18:38:45Z,0,"I understand that you set up the Employee class in such a way as to teach how to use ""@property"" and ""@[method].setter"" decorators.  Thanks a lot for that.  However, since this is the last of your ""Working with Classes"" playlist, I'd like to know if this is the basic paradigm of how you would set up a class in real life (aside from unique client requests). For example, in your tutorial in this playlist where you first create an employee method, many people (including myself) asked ""why not just create a 'fullname' attribute"" in which you gave a standard response explaining you created a separate method for pedagogical purposes.  But now, considering the likelihood that the somewhere down the line someone will have to update employee information--and considering that certain attributes in a particular class might not automatically update---it seems like we should create separate methods and assign property decorators to foreseeable common modifications to instances from the start.    Is that how you would normally do it?",True
@cinnion,2018-04-30T02:51:43Z,0,"Great refresher series for something I have not heavily used for *mumble* years (I started around 1.0 and remember 3.0 was a future release last I used it heavily).  Well structured, building one relatively short video on top of another.",True
@nimaliberty4734,2018-04-27T09:39:53Z,3,"Hi there Corey, YOU are a GENIUS. your VIDEOS are the BEST on youtube. I wanted to give up till I came across your videos. You are a life saver. A big THANKS to a HERO THAT YOU ARE.",True
@sovanraksa2112,2018-04-18T00:54:46Z,0,"Can‚Äôt we fixed that problem with the written code below? self.email = ‚Äò{}.{}.email.com‚Äô.format(self.first, self.last)",True
@mafiaboy16,2018-04-15T20:13:41Z,0,"Hey Corey, I have the following challenge. I want to try the threading of python for a project. It is about a production of which 8 machines that parallel work in one line. Each machine works independently and they each have their own identification number. If I use threading to see which machine puts its product on the conveyor belt, threading will only show the first machine, but the rest will not be placed in the threading. even if I put the identification in a list. What tips do you have for me? e-mail: ronny.charles@me.com",True
@talalhaider840,2018-04-13T11:03:52Z,0,corey what do you mean by it will break the code/anyone using our class will have to change their code also??,True
@wyj4549,2018-04-10T20:14:52Z,0,Thank you for the awesome vidoes,True
@ajaykumardas2235,2018-04-09T12:16:42Z,0,How to change email address explicitly with out changing the name?,True
@sumityadav2060,2018-04-09T03:43:50Z,0,@Corey Schafer - Your OOP playlist is the best on youtube. I went through all of them. Its precise and very useful. Do you have idea about Apache Spark? if yes please do videos on Spark + Python..thank you!,True
@Sirstep,2018-03-29T18:04:07Z,0,Thank you!,True
@tonyparka78,2018-03-21T00:13:34Z,0,Excellent,True
@prabalbhadoria1764,2018-03-18T08:35:06Z,0,"I don't know why i'm getting confused . But, initially when you printed out emp_1.email , why did it printed John.Smith@email.com and why not Jim.Smith@gmail.com . Why it's not getting Jim.",True
@brunon9837,2018-03-16T02:47:28Z,0,Thanks for the explanation!,True
@happywoofwoof,2018-03-15T15:15:51Z,0,Thank u for your lessons! don't need to go to programming school :),True
@susannaventafridda430,2018-03-12T14:33:16Z,0,"For whoever is using Python 2.x:  class Employee(object):     def __init__(self, first, last):         self.first=first         self.last=last     @property     def email(self):          return ""%s.%s@email.com""%(self.first, self.last)     @property     def fullname(self):         return '%s %s' % (self.first,self.last)              @fullname.setter     def fullname(self, name):          first,last=name.split(' ')         self.first=first         self.last=last      @fullname.deleter     def fullname(self):          print ""Delete Name""         self.first = None         self.last=None          emp_1=Employee(""John"", ""Smith"") emp_1.fullname=""Corey Schafer"" print emp_1.first  print emp_1.email  print emp_1.fullname  del emp_1.fullname",True
@dilmurat123456789,2018-03-11T23:13:29Z,0,Great tutorials!,True
@SriramM289,2018-02-28T08:53:42Z,0,Do you have any videos on django?,True
@SriramM289,2018-02-28T08:52:25Z,0,"Hi Corey, do you have projects for practice?",True
@PhatNguyen-yk2nk,2018-02-23T04:05:41Z,0,"good job sir, i found the way to solve my problem",True
@zhiweixiong5341,2018-02-23T02:08:11Z,0,"The setter and deleter cannot work in my program. Even no error right before I add the setter and deleter code, where there should  be an error as explained in the video. I am using Pycharm in Ubuntu. What would be a possible reason for this?",True
@TonyFlexPromo,2018-02-18T23:37:34Z,5,This one is actually blowed my mind. Thank you for this tutorials!,True
@SAJITAHAMED,2018-02-10T07:31:31Z,0,awesome..,True
@AlanFlett,2018-02-01T18:32:20Z,0,"Thanks Corey, Great Tutorial.",True
@riderblack6401,2018-01-27T23:03:34Z,0,Great video of all timer for python learner!,True
@YamiFrankc,2018-01-20T09:19:37Z,0,"Your videos have helped me a lot to understand classes! Do you have a video, or is there a way to access the full list of objects? For example, if I want a list of all developers that know Python, what do I do? I don't know what term to call this, so I don't know how to google it...",True
@hunarb.mohammed9189,2018-01-19T13:36:33Z,0,"delete names None None.None@gmail None None hi sir,first of all i appreciate your great video i dont want show anything after deleted ,except that syntax i printed",True
@dham3007,2018-01-15T00:05:37Z,0,Another great video!!!,True
@kstampo,2018-01-14T07:07:37Z,0,You've been most helpful!!!! Thanks!,True
@shockingvideos5225,2018-01-07T07:24:13Z,0,if we want to delete the whole object then?,True
@iremkaya9103,2018-01-02T20:12:54Z,3,"Why haven't I found you sooner, I would have done a lot better in lab classes of Python :(( You are great!",True
@sanjaypj5808,2017-12-26T13:21:55Z,0,:),True
@IslandCave,2017-12-15T15:26:38Z,0,"I think I should go through your python series from start to finish. While I have used python a lot, I picked it up very informally, by just using it and go-ogling once and a while, so there are a lot of little gaps like property decorators that I didn't know what they did till now.",True
@jasonhe6947,2017-12-07T20:41:44Z,0,This is very useful Thx,True
@hongren99,2017-12-06T13:33:05Z,0,no one is better than you,True
@maanasareddy1702,2017-11-22T17:46:40Z,1,You are awesome,True
@chindrissebastian8282,2017-11-06T18:33:40Z,1,"Great Series !! one question though... any idea why the getter/setter/deleter decorator won't work for me? i am using py3.6.3 , with IDLE (i am a begginer)",True
@mohanrajsenthilnathan856,2017-11-05T18:07:46Z,0,Thanks. very precise,True
@theshakeel2003,2017-10-18T03:33:24Z,0,Good work Corey...All the best..Please let me know when you will be posting other videos on classes,True
@turboromy,2017-10-10T10:16:58Z,0,"Are there limited number of preset names for decorators ?  If so, can you give a link or search term.  And, I understand how decorator works on this video, but other instructors seem to show quite different usages of it.  My bro (on the other side of planet) is a programmer and he doesn't seem to use decorator at all.  Is it ... a common thing ?",True
@franklinbradfield9131,2017-10-08T21:23:57Z,5,"So much more useful than the Python docs that use ""foo"", ""bar"", and ""x"" for everything!",True
@realsuayip,2017-10-03T20:26:28Z,0,"If you add @property to your method, you can actually get it's return value with self.method_name",True
@johnposada2179,2017-09-29T00:21:55Z,0,AWESOME VIDEO! It helped me understand some of the source code I work with at work.,True
@mksagal,2017-09-26T11:25:30Z,0,"Very nice!! Alternatively you can use fullname = property(getter_method, setter_method)",True
@brezomarek,2017-09-25T08:00:49Z,0,This seriously is amazing. I am learning at Treehouse but after every video there i come here to really understand what they meant there. Thanks,True
@adnanalam482,2017-09-23T05:29:28Z,0,can you make tutorial on hiding method in Python ?,True
@soumitripattnaik,2017-09-16T06:07:13Z,54,"At 5:54 can't we simply do self.first, self.last = name.split(' ') ??  It's been a great learning experience from your videos :)",True
@amr4339,2017-09-09T03:50:19Z,0,hi Corey of course it's wonderful explanation but  if i found it complicated  and all time i lost in the code ... so  i can't be good developer or i need to use about it only or what  ? some times i feel i'm so far  and some times no ..but when i try to practice these  i feel i don't understand or i'm lost,True
@Pkmafffy,2017-09-02T21:48:24Z,9,"Amazing series on OOP - I learnt so much!    One thing I don't quite understand is when to leave your attributes as public or using '_' (underscore) notation to privatise them.  When playing around with the underscore notation I sometimes get 'maximum recursion errors'.  I know this isn't covered in this series, but I would really appreciate it if you knew of any resources to better understand this.  Thanks",True
@aoiwoi,2017-09-01T11:35:51Z,1,This is the best python tutorial ever. I am so happy to find the channel.,True
@tasoulman,2017-08-22T12:24:50Z,1,Wouldn't this solve the problem you mentrion ??? self.email = self.first + '.' + self.last + 'email.com',True
@luisrierayoutobe,2017-08-19T14:52:36Z,0,"Hi Corey,  What IDE are you using for your videos?",True
@tcchan14,2017-08-19T08:11:49Z,2,"If we don't use property decorator on fullname method , I find that it is impossible to use setter method and change our self.first and self.last through fullname method. If i comment out @property on fullname method and type in emp_1.fullname = 'Corey Schafer' It will print out  Attribute error: 'function' object has no attribute 'setter'  emp_1.fullname() = 'Corey Schafer' It also print out Syntax error : can't assign to function call  Is that mean setter method can only  be used on attribute but not method?",True
@kostasnikoloutsos5172,2017-08-12T16:59:32Z,0,Did you forgot to talk about Getters?,True
@rajeshjadav1196,2017-08-04T11:45:55Z,0,"Hi Corey,   I am really appreciate your effort for  simple and easy to understand video.All video are just awesome.   I was searching a lot but I didn't get any valuable video or document for Celery and cx_oracle module.   If possible please make some video of Celery and cx_oracle module .  Thanks You :)",True
@sureshroyala6296,2017-07-25T10:12:01Z,0,Very structured and easy to follow. I managed to complete the series in less than a day. Now off to get my hands dirty. Thanks a ton for this.,True
@joedempseysr.3376,2017-07-24T12:54:00Z,0,Please ignore my previous question. I did what I tell my students to do: Run the experiment and find out for yourself!,True
@joedempseysr.3376,2017-07-24T11:55:41Z,0,"Great tutorials! Question:  # Your example: @fullname.setter def fullname(self, name)   first, last = name.split(' ')   self.first = first   self.last = last  # My question: It it possible to do this: @fullname.setter def fullname(self, name)   self.first, self.last = name.split(' ')",True
@bavquant,2017-07-18T08:10:13Z,0,^Great videos Corey - crystal clear! Trank you!!,True
@tanvirahmed7993,2017-07-18T04:31:05Z,0,Is it in Python 3.x? Because I found some problem running this code in 2.7,True
@matiasdaneri1142,2017-07-14T16:14:33Z,1,What's the difference of using @property.getter instead of just @property?,True
@saitaro,2017-07-05T13:47:27Z,92,Glad I found your channel...,True
@mountainking212,2017-07-05T03:02:09Z,0,"Instead of defining a new method ""email"", why not just have self.email = self.first + '.' + self.last + '@email.com'",True
@jitendrakumar83,2017-06-24T12:08:46Z,1,"emp1 = Employee('jitendra', 'kumar') emp1.fullname = 'Corey Schafer'  del emp1.fullname  print (emp1.email) print (emp1.fullname)  This order output in: Delete Name ! Corey.Schafer@company.com Corey Schafer  It means deleter is not working...Can you please explain",True
@hrishikeshganga2833,2017-06-23T06:44:43Z,0,Really cool tutorials bro. It helped me lot.,True
@rogut8,2017-06-14T20:05:42Z,0,"Thanks Corey, great explanation. This is gold",True
@indirajithv5041,2017-06-11T16:55:39Z,0,"Thank you very much for your tutorials. Really easy to understand and follow with real world examples. Great! I would like to learn about ABC, abstract base class, could you please make a tutorial on this?",True
@johnhendy1281,2017-06-03T16:43:00Z,14,"This has been an amazing series! I've taken some Coursera classes, but always felt overwhelmed when I saw classes and the dreaded __foo__ and `self` stuff start showing up. Thanks so much for making these!  One question... is there a reason not to do: `self.first, self.last = name.split(' ')` when you define the fullname.setter? Perhaps expanding is more readable?  Quick edit: I did this, and it seems to work fine. I mainly wondered if it's considered more pythonic to do one vs. the other.",True
@PavansnSMG,2017-05-30T11:26:14Z,4,Impressive. I just love these videos. They made Python even more interesting. Thanks Corey. Keeping making videos like this and help novice programmers like me :P,True
@KOtwenyo,2017-05-23T02:15:33Z,1,"I must say, I am learning from you more than I did from an MOOC that teaches the same Python, thank you Corey",True
@nagrajullasgokarnkar6366,2017-05-04T05:24:35Z,0,"hi there sir u had explained the concept each and everything clear but it is more benefitials for me also for some one if you cover more ""object oriented concepts"" like  ""encapsulation,polymorphism,abstraction"" because these are the topics where people are mainly suffer including me also sir please try to do this oops concept tutorials which i had mentioned above",True
@ppp72957,2017-04-30T04:48:57Z,0,"Thanks for this Python mini series. Great quick way to ""learn"" Python if coming from another language",True
@hamzamungadi2626,2017-04-21T11:50:41Z,0,Thank for your tutorial,True
@moryuval,2017-04-19T19:07:48Z,0,"Hey, i've done the same thing but got other output :       @fullname.setter     def fullname(self, name):         name, last_name = name.split(' ')         self.name = name         self.last_name = last_name  emp1 = employee('Chana', 'or')  emp1.fullname = 'Jack Or'  print emp1.fullname print emp1.name print emp1.email   the output :  Jack Or Chana Chana.or@email.com  Why is that? thanks !",True
@sayyarkhan851,2017-04-15T22:24:32Z,0,"Sir, Corey! Do you had any tutorial series on cloud computing?",True
@angel_machariel,2017-04-14T15:51:12Z,0,"Why can't or won't you do this:  @fullname.setter def fullname(self, name): self.first, self.last = name.split(' ')  So the result would be that we don't have to do this intermediary step: self.first = first self.last = last",True
@charlescarriere6589,2017-04-09T16:28:46Z,1,"Love your videos - so clear and well-paced! Quick question - you don't explicitly define 'del' in the property decorator @fullname.deleter - so I am a bit confused. does 'del' always call the 'deleter' decorator? if the answer is YES, is there also shorthand for 'set' and 'get'?",True
@jdcap75,2017-04-07T16:50:03Z,0,Nicely explain and clear. Good work!,True
@JonesDTaylor,2017-03-29T15:39:17Z,0,Hi You did not talk about getters !,True
@ivandrofly,2017-03-21T02:16:54Z,0,"Very well explained, thank you :)",True
@saswatdash1498,2017-03-14T04:26:48Z,0,"How all decorators @property, @fullname.setter and @fullname.deleter contains the same method 'def fullname()'. without errors.",True
@VVe11erMichae1,2017-03-09T13:36:20Z,0,Thanks for the videos on OOP using Python. It's really helped me understand how classes work in Python.,True
@LHasby,2017-02-16T11:26:52Z,1,"Thanks sir, now i know what is Setters n Deleters. can u explain the ""getters"" ? cause in the video was not explained.",True
@arvindu123w,2017-02-15T11:52:58Z,0,"Hi Corey, I am using python2.7 . The setter example is not working as expected. Could you please advise what should be done. It should ideally print ""Jack Daniel' in all 3 lines of the output. Thx in advance  Script Wed Feb 15 17:20:14 root@ansible:/var/tmp/python380 cat class14.py #!/usr/bin/python import string,datetime  class employee:         def __init__(self,first,last):                 self.first = string.lower(first)                 self.last  = string.lower(last)          @property         def email(self):                 return '{}.{}@gmail.com'.format(self.first,self.last)          @property         def fullname(self):                 return '{} {}'.format(self.first, self.last)          @fullname.setter         def fullname(self, name):                 first, last = name.split(' ')                 self.first = first                 self.last = last   emp1 = employee('John', 'Doe')  emp1.fullname = 'Jack Daniel'  print emp1.first print emp1.email print emp1.fullname Wed Feb 15 17:20:17 root@ansible:/var/tmp/python381  Output Wed Feb 15 17:20:17 root@ansible:/var/tmp/python381 python class14.py john john.doe@gmail.com Jack Daniel Wed Feb 15 17:20:20 root@ansible:/var/tmp/python382",True
@cakeholmes,2017-02-03T22:28:34Z,0,Very nice tutorial! I have a question. So is it usually a good practice to use properties instead of just class variables if those properties depend on other variables?,True
@Tadae323,2017-01-30T07:41:42Z,1,"Seriously, checked the whole Internet and your tutorials are the best.",True
@ravitejakondisetty,2017-01-30T02:03:17Z,0,"Hey Corey, I absolutely loved the series of python videos. I appreciate it. One thing I'd like to ask is ""Where can I implement or practice these concepts?"" I am a beginner but I can apply the logics well. Please suggest few resources.",True
@alexandredamiao1365,2017-01-29T21:22:59Z,0,great videos man! thanks a lot!,True
@emmadoyle4157,2017-01-22T15:02:51Z,0,Very straightforward and simple.,True
@pablonapan4698,2017-01-20T05:01:45Z,0,You create the getter and setter for the CLASS variable. Aren't we supposed to create getters and setters for the instance variables?,True
@khalidmohammad5103,2017-01-17T20:13:06Z,0,"Hi , after i finished learning from this Great video, what should i practice for better OOP python? any recommended  books?   It would really be useful.  Thanks!",True
@KhoaTran,2017-01-14T14:23:29Z,0,"guys, python is alot messier than scala",True
@aramhamidi7080,2017-01-13T22:41:03Z,0,Why my @property email getter doesn't work? Is it python 2 vs 3 thing?,True
@opiyosebastian50,2017-01-13T15:58:11Z,0,great job!!! Got the understanding!,True
@virajth,2017-01-03T16:36:37Z,0,Amazing series of tutorials. it helped a lot to clear most of  the OOPs concepts. not only in  python prespective. but also for the overall Object Oriented Paradigm and some of basic class  design ideas as well.   if you dont mind Can you share some of your web application development knowledge using python? Or can you share some resource which can explain concepts as well as you are explaining and covering?,True
@petenilson,2016-12-21T21:03:20Z,433,One of the clearest explanations of this that I've seen before. Thanks very much!,True
@maziarghorbani,2016-12-19T03:41:41Z,1,absolutely fantastic.,True
@saurabhkansal8178,2016-12-08T16:43:09Z,0,"Before starting these videos, I don't have any knowledge of classes. But now i got the concept and can understand the source codes in better way. Thanks Corey... Thanks a lot..",True
@prameshshakya9810,2016-11-24T17:55:30Z,2,Could someone explain why the first name in the email didn't change? but calling the fullname() method changed it?,True
@RajeshGoyalg,2016-11-23T05:24:43Z,1,Must watch python videos. Thanks Corey.,True
@atibhiagrawal6460,2016-11-18T18:59:26Z,0,I understood decorators in one go !!!!!!!! Great job :) Thanks a lot !,True
@MrWhaleFarmer,2016-11-17T14:50:07Z,0,"Hi, Corey, great tutorial. However I'm still not fully understanding the @property, if u have a few minutes can u reply with a quick definition. Appreciated.  class Background:     def __init__(self, x, y, file):         self.x = x         self.y = y         self.Img = pygame.image.load(file)         self.w = self.Img.get_rect().width         self.h = self.Img.get_rect().height         self.Rect = pygame.Rect(self.x, self.y, self.w, self.h)              def render(self):             DISPLAYSURF.blit(self.Img, (self.x, self.y))                       @property     def sprite(self):         return pygame.Rect(self.x, self.y, self.w, self.h,)  So thats my code, i just need to fully explain everything, thanks again!",True
@yehoshuakahan6481,2016-11-07T05:22:53Z,0,"Hi, Corey.  I've been going through your videos these past couple of days to help me keep up with my programming class.  Thank you.  I do have a couple of questions.  First off, why did you change the self.email and self.fullname attributes via @property tag instead of adding lines to the __init__ function to the following effect?   self.email = self.first + ""."" + self.last + ""@email.com""  self.fullname = self.first + "" "" + self.last  Second, in your setter, why did you use three lines of code to set the fullname attribute instead of one, like so?   self.first, self.last = name.split("" "")",True
@swadhikarc7858,2016-10-09T16:33:45Z,17,"Hi Corey,  Your videos are none other than best! Simple and easy to understand. I am a beginner to Python and have a question in deleter. The example you have shown is used to delete a property. Can you explain how to delete an instance itself? example: del emp_1?  Thanks a lot for your videos!",True
@Ronald-de9yj,2016-10-03T09:20:10Z,0,Nice video. Clarifies my confusing regarding Google Cloud Platform's endpoints-proto-datastore @EndpointsAliasProperty usage.,True
@mujahidrasheed4987,2016-10-02T17:51:50Z,30,Great post.. For PYthon 2: the Class must inherit from the 'object' class to able able to use decorators. example: class Employee(object) learnt it the hard way..,True
@PrantickSaha,2016-09-23T10:29:47Z,0,helpful ..thanks :),True
@ABC-xn3td,2016-09-22T14:48:31Z,1,Great tutorial Corey. I learnt a lot of new things that I did not know existed in Python.,True
@Gwith126,2016-09-16T20:11:30Z,0,"This was good, thanks!",True
@rolandovillcaarias5112,2016-09-15T01:01:54Z,0,"Amazing, finally I have understood. Thank you so much.!!! Do you have video about Threading? Also, could you make a video about dependency injection sample?",True
@wissamali3136,2016-09-14T09:59:00Z,3,Thank you so much for these wonderful python oop tutorials. All makes sense now. Could you please make a video describing the difference between oop inheritance and composition.,True
@dannychung1000,2016-09-04T04:09:18Z,0,very great!,True
@NJ-gj4xv,2016-08-28T17:32:21Z,0,Great Tutorial...,True
@playgoods,2016-08-24T03:23:50Z,0,"Great , corey I want ask can you intro flask tutorial , i wash some time on your video to used",True
@borisurkan2223,2016-08-23T18:10:19Z,0,Great tutorial!,True
@sergey4879,2016-08-20T10:25:26Z,1,"Very good, as always :) Many thanks!!!",True
@hustels,2016-08-19T23:06:53Z,0,"Amazing  tutorial,  thank  you so much :).",True
@Mrjarnould,2016-08-19T18:19:47Z,3,Great video!,True
