author,updated_at,like_count,text,public
@harshitaatray,2024-01-20T09:13:51Z,0,"Thanks for the awesome practice. I was able to visualize the calculations better by combining the two functions into one. Here's the code for anyone else who might have a similar way of thinking:  def Binary(lst, n):     if n == 0: return []     elif n == 1: return lst     else:         a = ""0""         b = ""1""         lst1 = [a + ele for ele in lst]         lst2 = [b + ele for ele in lst]         lst = lst1 + lst2         #print(lst)         return Binary(lst, n-1)          n = 4 lst = [""0"", ""1""]  print(Binary(lst, n))",True
@umairgillani699,2022-12-01T10:31:07Z,0,Teaching CP and never solved a single live coding challenge!!!!,True
@ramakanthamshala2311,2022-02-17T18:31:33Z,0,"n = 4 ind = n l = [] if n%2 == 0:     n = n*n else:     n = n*n-1  for i in range(0,n):      s = str('{0:08b}'.format(i))     l.append(s[-ind:])   print(l)",True
@GameLoverVivekrana,2022-01-05T17:09:31Z,0,Bsdk aata to hai ni tujhe,True
@stretch8390,2021-10-04T01:28:45Z,1,Thanks for these videos!,True
@zeta8334,2021-09-15T07:30:15Z,0,"I did it with for loops lol  n = int(input(""Enter number: "")) li = [] def binout(n):     for i in range(2):         s = str(i)         if n == 1:             li.append(o)         for j in range(2):             m = s + str(j)             if n == 2:                 li.append(m)             for k in range(2):                 o = m + str(k)                 if n == 3:                     li.append(o)                 for l in range(2):                     p = o + str(l)                     if n == 4:                         li.append(p)     print(li) binout(n)",True
@vivekshanbhag786,2021-09-04T18:08:58Z,0,"How is this? Python 3 code: N = int(input()) num = int("""".join('1' for _ in range(N)), 2) print([(bin(i)[2:]).zfill(N) for i in range (num+1)])",True
@sssingh6000,2021-08-09T14:05:05Z,1,Is website is free completion python project,True
@toomuchpoop450,2021-07-31T13:24:28Z,0,"FYI competitive programming is where you compete in a programming contest and pass test cases against the given task (its a mind SPORT). What you are doing is simple problem solving/DSA it can't be called ""competitive programming"".",True
@hemanthharikrishnan3051,2021-07-09T08:33:54Z,0,"n=int(input('Enter the number of digits')) reach=2**n arr=[] for i in range(reach):          val= ""{0:b}"".format(i)     if len(val)<n:         cr=n-len(val)         for i in range(cr):             val+='0'     arr.append(val)  print(arr)",True
@stefanknezevic1,2021-06-20T16:41:26Z,1,"n = int(input()) number = 2**n output = [] for i in range(number):     output.append(""{0:b}"".format(i).zfill(n)) print(output)",True
@aliyoussef97,2021-05-07T10:04:57Z,0,"Hi Krish , Great video, if you could solve problems in codeforces will be soo greater too.",True
@unnamramu5843,2021-05-04T19:22:20Z,0,"HI Krish, could you suggest best books for Algorithms and DataStructures each",True
@peopleclickindia1733,2021-04-21T11:06:14Z,0,"Ready to boost your career with the most versatile programming language, Python? Using Python, You can scrape web development, Automate things around you and make them more simple, Adapt Machine learning, etc. by using a python programming language. Python is more capable than we can even explain. This Python Training program covers the basics of Python and how to adapt it to real-world applications. The modules, classroom projects, and curriculum assignments cover Python data operations, strings, conditional statements, error handling, web scrapings, shell scripting, and Python's Django widely used web frame. Peopleclick offers python certification training with  •	1 on 1 interaction,  •	Quality course materials,  •	24*7 reliable support,  •	Multiple live projects.  The trainers here are certified working professionals with years of experience in the industry. Also, we have tied up with 100+ client companies for placement programs. More Than 7000 students are already placed in Top MNCs. So don’t think twice; grab the opportunity and book your free demo class now. Create A Solid Career With Us. For More Details: +91 76193 43002 Visit:	https://www.peopleclick.in/python-training-bangalore.html?utm_source=SEO&utm_medium=banner&utm_campaign=Python",True
@saikumarpulicharla9483,2021-02-10T14:05:40Z,2,"With the help of Lamda function, I completed in a single line  generate_bits=lambda n,lst=[[0],[1]] : generate_bits(n-1,[i+j for i in [[0],[1]] for j in lst]) if n > 1 else ["""".join([str(_) for _ in i]) for i in lst] if n==1 else []",True
@sujitkumar-pr3rr,2021-02-01T05:07:26Z,0,"Other solution using Recursion:  def gen_bin(n , ans):     if len(ans) == n:        print(ans)        return      gen_bin(n , ans+'0')     gen_bin(n , ans+'1')  gen_bin(3 , '')  [ pass number and empty string ]",True
@jeevapriya4853,2021-01-19T17:01:55Z,0,Sir plz make playlist on  leetcode  nd hackerearth  problems with solution  .... plz continue  this series sir ... it will be very helpful  ...,True
@sandeepkale7759,2021-01-11T07:43:13Z,0,"I think it would be easier if we use the bin() function. Good series.   def binary2(rang):     num = 0     bin_list = []     while True:         bin_num = bin(num).replace('0b','')         if len(bin_num) == rang:             bin_list.append(str(bin_num))         if len(bin_num) > rang:             break         num += 1     return bin_list print(binary2(5))",True
@surya-td4dg,2021-01-05T19:52:00Z,0,Awsome... Good initiative,True
@akshatpant9758,2021-01-04T14:18:36Z,0,"Hello Krish..it took me almost two days to think the logic for it..but it worth..thanks for this amazing problem..and please have a look into my solution once..Thanks  def bin_generator(n):     l=[]     while(n!=1):         if n==0:             return str(0)         else:             l.append(n%2)             n=n//2     if n==1:         l.append(1)         l=l[::-1]         res=""""         for i in l:             res+=str(i)         return res  def gen(n):     l=[]     for i in range(0,(2**n)):         if len(bin_generator(i))<n:             l.append(""0""*(n-len(bin_generator(i)))+bin_generator(i))         else:             l.append(bin_generator(i))     return l  output-->> print(gen(4)) ['0000', '0001', '0010', '0011', '0100', '0101', '0110', '0111', '1000', '1001', '1010', '1011', '1100', '1101', '1110', '1111']  print(gen(5)) ['00000', '00001', '00010', '00011', '00100', '00101', '00110', '00111', '01000', '01001', '01010', '01011', '01100', '01101', '01110', '01111', '10000', '10001', '10010', '10011', '10100', '10101', '10110', '10111', '11000', '11001', '11010', '11011', '11100', '11101', '11110', '11111']",True
@dineshpandiyan1963,2021-01-04T11:58:57Z,0,Thank you so much sir it will really helpful for me,True
@nikhildr4441,2021-01-04T03:22:11Z,0,Best of luck dealing with TLE,True
@prernakhurana7404,2021-01-03T20:09:01Z,0,Amazing explanation,True
@shubhambhandari431,2021-01-03T19:40:36Z,0,"Ans=[] def bin(n,s):     if n==0:         Ans.append(''.join(s))         return     else:         return bin(n-1,s+['0']),bin(n-1,s+['1'])",True
@cedriclebocq1060,2021-01-03T15:49:36Z,0,"Hello Krish, if this exercice is to introduce how to use recursivity, it's a nice demonstration. By the way, in this case, for competitive programming, it""s not needed. What you want is all power of 2 for a given indice n. and it can  be done easily without recurivity.  def getBinary(n):     return [f""{i:b}"".zfill(n) for i in range(2**n)]  It's not a negative comment, i'm a great fan of your channel ;)",True
@maseedilyas203,2021-01-03T14:14:51Z,1,"another way of doing this is using itertools :-  import itertools bi=[0,1] n = int(input(""enter a num : "")) bi_str=[] li=list(itertools.product(bi,repeat=n)) for i in li:     s=""""     for num in list(i):         s=s+str(num)     bi_str.append(s) print(bi_str)",True
@neeleshjaiswal4922,2021-01-03T11:24:32Z,0,"Breaking the code for better understanding of recursion: Here, we are trying to compute for n=3  #making formula generate_bit(3) -> append_bits(""0"",generate_bit(2)) + append_bits(""1"",generate_bit(2))  generate_bit(2) -> append_bits(""0"",generate_bit(1)) + append_bits(""1"",generate_bit(1))  generate_bit(1) -> ['0','1']  #now start returning return ['0','1']  return append_bits(""0"",['0','1']) + append_bits(""1"",['0','1']) = [""00"", ""01""] + [""10"", ""11""] = [""00"", ""01"", ""10"", ""11""]  return append_bits(""0"",[""00"", ""01"", ""10"", ""11""]) + append_bits(""1"",[""00"", ""01"", ""10"", ""11""]) = [""000"", ""001"", ""010"", ""011""] + [""100"", ""101"", ""110"", ""111""]  																		      = [""000"", ""001"", ""010"", ""011"",""100"", ""101"", ""110"", ""111""]",True
@iitnakanpur..,2021-01-03T10:07:48Z,0,"If anyone wants to better at cp, watch errichto youtube channel",True
@maanasverma7659,2021-01-03T08:35:20Z,0,"for loop can solve this in 1/10th time than recursion, then why we are using to use recursion",True
@rock78785,2021-01-03T02:41:38Z,1,Is python slow for competitive programming....,True
@ankerrm1111,2021-01-03T00:57:11Z,0,public class PrintBinary {      public static void main(String[] args) {         int n = 100;         int counter = 0;         int size = 0;         while (size <= n) {             String binary = getBinaryNumber(counter);             size = binary.length();             if (size > n) {                 break;             }             System.out.println(binary);              counter = counter + 1;          }     }      public static String getBinaryNumber(int number) {         return Integer.toBinaryString(number);     } }  Java Solution,True
@aravindsai2843,2021-01-02T20:14:59Z,0,Sir plz continue this series..,True
@RanjeetYadav-oh9en,2021-01-02T18:02:55Z,0,"import itertools a=[""0"",'1'] a=itertools.product(a,repeat=4) for i in a:     print("""".join(list(i)),end="" "") print(""\b"")",True
@ravisoni1386,2021-01-02T17:14:08Z,0,"My solution is very simple. You will not learn any concepts but you will know why I love python. It is very handy to solve problems.    def problem1(n): 	list1 = [] 	for i in range(2**n): 		list1.append(bin(i).replace(""0b"", """").rjust(n,'0'))  	return(list1)  I will be posting these easy tricks also but for good conceptual answers I will prefer Krish's answers.",True
@athanikarammy7476,2021-01-02T15:50:39Z,0,"i am a bit confused  after solving the left part we get values['000', '001'] and solving the irght part we get [110,111]..but the total number of combinations we get are 8..  can any one please explain me why,,",True
@saimuralipavan,2021-01-02T13:31:26Z,0,"n = int(input('Enter the NUmber to convert')) print(n) out = [str(bin(i).replace('0b','')).zfill(n) for i in range(2**n)] print(out)  We can achieve in 4 lines",True
@lokeswarreddybollavaram2807,2021-01-02T11:25:40Z,0,"I did in a naive approach, recursion may confuse some times to understand so I solved using for loops.  # Online Python compiler (interpreter) to run Python online. # Write Python 3 code in this online editor and run it. n=int(input()) bs=[] for i in range(0,2**n):     tstr = ''     temp =i     while temp>0:         tstr = str(temp%2)+tstr         temp //= 2     c = len(tstr)     if c < n:         tstr = '0'*(n-c)+tstr     bs.append(tstr) print(bs)",True
@miteshpawanarkar7588,2021-01-02T11:18:29Z,0,Glad that you started this series!! Thank you ❤️,True
@ballinalways2013,2021-01-02T11:16:44Z,0,"num=int(input()) max_num=2**num ans=[] temp=[] for i in range(max_num):   temp.append(bin(i)[2:]) for data in temp:   a='0'*(num-len(data))   ans.append(a+data)   print(ans)  how about this sir. Is this be acceptable??",True
@abhisheknegi9297,2021-01-02T10:45:46Z,0,"## Krish Sir shoul i use this code ?  def generateBinary(n):     l=[]     for i in range(2**n):         j=bin(i).replace(""b"","""")         if len(j) < n:             l.append(('0'+j))         elif len(j)>n:             l.append(j[1:])         else:             l.append(j)     return l",True
@thedrunkprogrammer1474,2021-01-02T09:58:05Z,2,"The best part about your videos are that you genuinely want us to learn the way of finding solutions, rather than just follow yours.",True
@mukeshkumarsandela8899,2021-01-02T08:18:56Z,0,I am very excited with your this series but sir please teach more deeply with space and time complexity concepts.,True
@mayukhdifferent,2021-01-02T07:57:39Z,0,"Great initiative, as usual. Just wanted to add that we need to have a cache function to store the intermediate value in a list i.e. using memoization concept, else the code will take a lot of time to backtrack for large value of n..say for 3 or 10..this works fine..but for 5000 r 10000 this code would take very long time to backtrack..adding memoization concept would make the recursion more robust👍",True
@shubhamsaha7887,2021-01-02T06:55:16Z,0,This was highly needed sir. Please continue this,True
@charansai01,2021-01-02T05:42:23Z,5,"Using List comprehension  n = int(input(""Enter Number: "")) print([str(bin(number)[2:]).zfill(n) for number in range(2 ** n)])",True
@sj-st5cz,2021-01-02T05:01:49Z,0,Give problem statement too which you are going to solve next day and will share our code with you the best and worst  approach you can talk about so all can learn what is lacking in that code.,True
@journeyofimprovement1318,2021-01-02T04:48:22Z,0,To convert all those strings into integers Do we need to use for loop Or is there any easy solution,True
@MrSawan27,2021-01-02T04:41:52Z,0,"Great video Krish. Looking forward to upcoming videos in this series.  I used bin() and for loop for my solution as below:  def generate_binary(n):          lst_binary =[]     for i in range(2**n):         binary = bin(i).replace('0b','')         s = str('0'*(n-len(binary)))         lst_binary.append(s+binary)          return lst_binary",True
@empowercode,2021-01-02T03:54:06Z,0,"Hey! I just found your channel and subscribed, love what you're doing! Particularly, I like how clear and detailed your explanations are as well as the depth of knowledge you have surrounding the topic! Since I run a tech education channel as well, I love to see fellow Content Creators sharing, educating, and inspiring a large global audience. I wish you the best of luck on your YouTube Journey, can't wait to see you succeed!  Your content really stands out and you've obviously put so much thought into your videos! I applaud you for that and really wish you the best for the future!   Cheers, happy holidays, and keep up the great work :)",True
@dharanfun397,2021-01-02T03:42:47Z,1,Keep rocking sir 💪,True
@vijaykumar-yq7sf,2021-01-02T03:34:55Z,0,"Please please please reply to me. Hello Mr.Krish,  I am not good at Leetcode or hacker rank problems. should I study machine learning or not? please give me a reply. I like machine learning math. and done many projects on machine learning and deep learning. But I am losing confidence when I am unable to solve some of the problems of Leetcode and Hacker rank. How should I judge my self please let me know.",True
@saurabhbarasiya4721,2021-01-02T02:07:57Z,0,Great,True
@souhardya69,2021-01-02T01:43:24Z,2,There is a website called pythontutor.com there you can visualize the codes and it will be more easy to understand,True
@mohitkumar-in,2021-01-02T00:58:25Z,1,Sir dry run to kr lenge khud and code b khud kr lenge....... Bss logi bataya karo..... Ke kya socha bss,True
@thulasikumar770,2021-01-01T23:59:25Z,0,Please do video how to crack hackerrank test,True
@malhardesai2754,2021-01-01T22:58:32Z,1,"Hi Krish,  I have a question. Are we allowed to use in-built functions like bin() and pow() for such problem statements during coding rounds?  - Thanks",True
@rahulranjan7567,2021-01-01T21:04:06Z,13,"For anyone having issues with recursion, don't worry. Let it sink in.  If you can command recursion, half the battle of DSA is done as entire trees, Graphs, DP, Backtracking, BST, Merge sort, quicksort, quickselect etc depends on recursion.  Even dive and conquer is all about recursion",True
@rahulranjan7567,2021-01-01T21:01:49Z,0,"IMHO using recursion is a bad idea if you are not coupling it with DP.  Python has a drawback of quick stack overflow if your recursion depth is more than 999.   Now, you can do it iteratively.  For this particular problem you can do is make a function of generating binary of any number N.  Now, in for loop, call this function for numbers between 0-given number.",True
@itachiuchiha9311,2021-01-01T20:42:39Z,0,"llist=[] for i in range(0,(2**n)):     llist.append(bin(i)[2:])     if llist[i]!='1'*n:         llist[i]=('0'*(n-len(llist[i])))+llist[i]        is this code optimized,,,please let me know  ;)",True
@theoutlet9300,2021-01-01T20:20:37Z,6,"Did this with the help of comments. Thanks I learned how to use bin() def func(n):     l=[]     for i in range(2**n):         c = bin(i).replace('0b','')         s = str('0'*(n-len(c)))         s += c         l.append(s)     return l",True
@shivareddy6876,2021-01-01T20:10:45Z,2,Yes bro continue this series really it helps lots of students who are preparing for placements .. Lots of respect 🔥🙏🙏,True
@adonisdias1573,2021-01-01T20:06:27Z,1,Really awesome explanation! Congrats!,True
@mukunthanr2514,2021-01-01T19:54:17Z,0,"Hi Krish,      At present am working as data scientist in a service company. This present company asked only data science related stuffs in interview.      For data scientist role in any product company should these data struct, algos like dynamic programming are required to prepare for interview?",True
@pycodesmachinelearning5096,2021-01-01T19:39:16Z,0,"hi sir big fan of you but not getting any job. def fun(n):     for i in range(pow(2,n)):         x.append(bin(i).split(""b"")[1])     for i in range(len(x)):         if (n - len(x[i])) > 0:             m = n - len(x[i])             x[i] = '0'*m + x[i]     for i in x:         print(i)          x = [] fun(3) 000 001 010 011 100 101 110 111",True
@swathiartsrangolies,2021-01-01T19:18:01Z,0,waiting for more video like this,True
@AbhishekMadankar,2021-01-01T19:12:59Z,0,is competitive programming or DS ALGO needed for data science? Should someone aspiring to do career in data science know DS Algo?,True
@shahabuddinnadeem5794,2021-01-01T19:04:39Z,1,"Great initiative. I've done the same with below logic:  #Function  def decToBin(n,m):     ln = bin(n).replace(""0b"", """")     if len(ln) < m:         return '0'*(m-len(ln))+ln     else:         return ln      def generate_string(m):     return [decToBin(val,m) for val in range(2**m)]  generate_string(3)  OUTPUT: ['000', '001', '010', '011', '100', '101', '110', '111']",True
@akshatpant9758,2021-01-01T18:51:11Z,0,"I tried with another way..please have a look krish.. def gen(n):     l=[]     for i in range(0,(2**n)):         if len(bin(i)[2:])<n:             l.append(""0""*(n-len(bin(i)[2:]))+bin(i)[2:])         else:             l.append(bin(i)[2:])     return l  output--> print(gen(2)) ['00', '01', '10', '11'] print(gen(3)) ['000', '001', '010', '011', '100', '101', '110', '111'] print(gen(4)) ['0000', '0001', '0010', '0011', '0100', '0101', '0110', '0111', '1000', '1001', '1010', '1011', '1100', '1101', '1110', '1111']",True
@ravitanwar9537,2021-01-01T18:42:44Z,3,"this also works but uses bin inbuilt function. also recursion is very time consuming and eats up stack space pretty quick  def withbinfunction(n):     ans=[]     for i in range(2**n):         bi=bin(i)[2:]         ans.append('0'*(n-len(bi))+bi)     return ans  print(withbinfunction(3))  output->['000', '001', '010', '011', '100', '101', '110', '111']",True
@harendrakumar7647,2021-01-01T18:40:08Z,1,"Hey krish , could you please make a video on solving adventofcode puzzles",True
@shubhamgoel3272,2021-01-01T18:08:50Z,0,"Hi Krish Sir. I have applied my logic of above given problem. Please check it, it is working fine. :)  input_number= 2 count= 1 lst= [] while(True):     if count== 1:         a = '0' * input_number         lst.append(a)         b= (bin(int(a,2) + 1))[2:]     else:         b = (bin(int(b, 2) + 1))[2:]     while (len(b)<input_number):         b= '0'+ b         continue     lst.append(b)     count+= 1     if b== '1'* input_number:         break print(f' Binary numbers of given length {input_number} is: {lst}')",True
@kaustubhalau6476,2021-01-01T17:58:52Z,0,Much needed sir plz continue it very very thankyou,True
@mindzlabs734,2021-01-01T17:56:17Z,1,Another way is get the string binary value of n.  Convert that to decimal. Get the binary values below the number by calling range function on it.   Make all binary string of length n.,True
@ShahnawazKhan-xl6ij,2021-01-01T17:54:06Z,0,Awesome keep it up,True
@Sanjay-xq5xr,2021-01-01T17:50:16Z,0,"My python solution with O(n) time complexity: n=int(input()) c=""1""*n i=0 v="""" a=[] while v!=c: 	b=bin(i) 	s=str(b) 	v=s[2:] 	if len(v)<n: 		k=n-len(v) 		v='0'*k+v 		a.append(v) 	else: 		a.append(v) 	i+=1 print(a)",True
@Dharmendrakumar-yy9rc,2021-01-01T17:27:12Z,1,Why not in C++ ?,True
@ShivaniShivani-ss3zl,2021-01-01T17:25:43Z,0,"I am a fresher and got placed at Accenture, E&Y, DXC and SMITHS Detection systems private limited... Which one is the best to choose among the above?",True
@xdstudios6205,2021-01-01T17:17:21Z,0,"def generate(s,n):     if n==0:         print(s)         return          generate('0'+s,n-1)     generate('1'+s,n-1)   generate('',3)",True
@skydebnath2593,2021-01-01T17:01:34Z,7,"I really liked your approach... and learnt a great thing today. I'm glad that my New Year started like this because of you.  Before watching your solution I took a very primitive approach What I did is this...  def decimal_to_binary(num):     number = num     binary = 0     p=[]     if num == 0:         return binary     else:         while num!=0:             x = num%2             num = int(num/2)             p.append(x)          for i in range(len(p)):             binary = binary*10 + p.pop()                         return binary    x = int(input()) List = [] for i in range(2**x):    List.append(str(decimal_to_binary(i)).zfill(x))  print(List)",True
@AmitGupta-pm8iw,2021-01-01T16:46:08Z,0,"time complexity = O(2**n) space complexity = O(2**n)  solution:  zero_one = [] for i in range(pow(2,n)):   #print(i)   if(len(bin(i)[2:])<n):     zero_one.append('0'*(n-len(bin(i)[2:]))+bin(i)[2:])   else:       zero_one.append(bin(i)[2:])   print(zero_one)",True
@pawanchoure1289,2021-01-01T16:42:49Z,1,Very nice sir ji Happy New year 🔥❤️🎉🙏🏻👍🏻😀,True
@pragyachourishi1757,2021-01-01T16:37:04Z,2,You are fantabulous..You exactly know what a learner need from time to time...:) Superb,True
@a_wise_person,2021-01-01T16:31:52Z,1,Please make a video on data structures and algorithm,True
@prasanthdevarapalli,2021-01-01T16:20:49Z,6,"Hi Krish, great initiative. Could you please add the following (if possible) from the next video: 1. Starting from naive approach and then improving the algorithm. 2. Time and space complexity analysis",True
@sagniks1584,2021-01-01T16:01:28Z,1,We need more videos like this sir.,True
@udtateer9411,2021-01-01T16:00:20Z,1,Bhai sahab ye kis line me aa gaye aap 😂😂,True
@AmitSingh-wi8iv,2021-01-01T15:55:35Z,1,Thank you sir 🙏 for sharing everything. Happy new year sir,True
@jeetshah8513,2021-01-01T15:52:50Z,0,Really bad solution.,True
@SaurabhKumar-wm8vj,2021-01-01T15:48:49Z,1,Much needed series 🙏,True
@yashwanth9549,2021-01-01T15:48:04Z,1,This is what I am waiting for......🔥👍,True
@abhishekd1012,2021-01-01T15:47:24Z,1,thanks for bringing this series,True
@lavanyabellamkonda7399,2021-01-01T15:46:57Z,2,Good initiative anna..👌,True
@randomdude79404,2021-01-01T15:40:52Z,4,How important is competitive programming in data science ?  Do we need to have such such comprehensive skills and where would it fit in within the data science journey if we did need to know this competitive programming.,True
@luvdhamija7982,2021-01-01T15:40:04Z,3,"An Easy Approach to this problem : a=[] val=int(input()) for i in range(2**val):     n=str(bin(i).replace(""0b"", """"))     if(len(n)!=val):         n='0'*(val-len(n))+n     a.append(n) print(a)  I hope it helps..",True
@manishsharma2211,2021-01-01T15:40:03Z,2,"Sir, I have forked the repo and have pulled a request . Please Merge it if helpful :)",True
@Avisikta_Majumdar,2021-01-01T15:37:05Z,4,"Thank you so much sir for this playlist . I have done this in another way :-  Code---> n=int(input(""Enter n:-"")) no=2**n l=[] for i in range(no): 	cnvt= bin(i).replace(""0b"","""") 	s=""0""*(n-len(cnvt)) 	s+=cnvt 	l.append(str(s)) print(l)",True
@equanimousinvictus2889,2021-01-01T15:33:09Z,6,"Dear Sir,  Please do add the the process of getting to the particular logic for the code in a more explicit manner. That will be more helpful. Rest, its awesome",True
@sreehari423,2021-01-01T15:28:58Z,0,Thank you so much sir ❤️❤️❤️,True
@rangapavankumar79,2021-01-01T15:27:32Z,2,I prefer cpp than python in cp,True
@sarangkharpate5780,2021-01-01T15:24:59Z,0,Was waiting for this. Awesome,True
@nocode659,2021-01-01T15:24:20Z,3,For cp many say c++,True
@anandhiselvi3174,2021-01-01T15:23:33Z,0,Please do video on svm kernels,True
@chaitanyamundle3713,2021-01-01T15:20:41Z,1,A very very important series🙌. Please continue this series as per difficulty levels.,True
@subhampal8915,2021-01-01T15:14:44Z,2,Happy new year sir. Please put one video daily.,True
@sathishkumarvp3686,2021-01-01T15:08:21Z,18,"good initiative... Suggestion :  share the problem statement, we will think and next day you reveal the steps to solve.",True
@sandiproy4977,2021-01-01T15:07:51Z,1,Great sir 👍,True
@sunildhakad5219,2021-01-01T15:04:23Z,4,"Sir, i don't have ATM, I'm unable to join the channel by Google pay or phone pay. Anything can be done here?",True
@satyamrout1400,2021-01-01T15:00:42Z,22,It will be really awsm that pls continue this series it will be fun,True
@YourGirlPratiksha,2021-01-01T15:00:28Z,9,Much needed series 🥺 please drop atleast one video on this everyday. Thanks in advance 🙈,True
@NeuralHackswithVasanth,2021-01-01T14:59:57Z,2,First view first comment 3rd day in the week sir,True
