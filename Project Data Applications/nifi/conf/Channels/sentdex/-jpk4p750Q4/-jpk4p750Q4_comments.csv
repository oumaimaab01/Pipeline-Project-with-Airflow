author,updated_at,like_count,text,public
@sachi097,2017-05-20T07:31:23Z,0,"did you make Part 11 of this video series. if yes than can you please provide me a link for it. please do mention ""NO"" if you had not made the next part.",True
@arturmuellerromanov4438,2017-04-16T11:44:11Z,0,In Python3 you don't even need to use map(). Just do:        df['Column 1 + 2'] = df['Column 1'] + df['Column 2']            for a simple calculation,True
@Achooification,2016-06-14T18:34:01Z,0,"Yet again, you totally nailed it.  I'm floored by your ability to identify headache points - I really should just watch all your videos before I continue coding. But I won't, because I'm a glutton for punishment or something.    Well done.    I still don't have a paypal account :P",True
@oliverli9630,2016-06-04T16:53:12Z,0,"I like you. Your tutorials saved a lot of my time from heavy googling for each and everything I need. But it'd be even more wonderful if you could solve one mystery on python's help file :) Or, have you made a separate series about 'lambda'?  The page is here: http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.applymap.html  What is this expression saying (especially the string part - why is a math-like expression that can be operated upon written in a string)? df = df.applymap(lambda x: '%.2f' % x)  PS: If you don't have 'lambda' series, it's cool to make one, since I don't think I'll ever find this answer, and you'll be the only guy who provides it :)",True
@wwritz,2015-10-21T00:30:40Z,0,Excellent series.  Enjoy your teaching style.,True
@donha475,2015-10-14T07:48:44Z,0,"Thanks Sentdex from New Zealand. Have watched many of your vids and never disappoint. The last two years I have made huge strides with python in my spare time and just now saved our team of 8 people a huge amount of time on our public health project using pandas - (cleaned up a 11000 row 100 column excel spreadsheet with missing data and made a new useful column of ""time since initiation with the service"". This last part was very complex but only took 5-6 hours when it could have taken a week or been totally unachievable (we are all just medical students so in general have minimal data munging skills). Had fun doing it too!  All thanks to people like you in the python community.",True
@dayworkhard,2015-08-19T12:59:52Z,1,"F.Y.I. You can also use Lambda alike functions. e.g.   df['new'] = map(lambda x: x + 1, df['Close'])   This is very convenient.",True
@markovisnovsky8795,2015-02-06T21:54:04Z,2,Great tutorial. Keep doing in what you do. You're helping many people around. Thanks from Slovakia,True
@martinl2603,2014-10-31T14:49:48Z,0,"You're mad because you said something not logic like your sentence""most people only help if you show that you've made honest attempts at first solving your problem yourself"" which does not make sense at all. By the way I've contacting them since 2 days but they do not pay any attention. Next time do not defend people you do not know well. Cheers",True
@martinl2603,2014-10-31T14:31:41Z,0,"It is very initial topic should be considered and introduced simply without any highlighting form me or from others. Really we should suffer the pain because of software!!!!!!!!! We are customers ""do you know that?"" Who said that ""most people only help if you show that you've made honest attempts at first solving your problem yourself"". Your talk means that cars' companies supposes keep waiting untill the customers suffering pain to provide a good service for them. Keep in your mind that time is money and if customers do not like your software, they will not waste their time and wait until you will observed how much pain he/ she suffered. Customer will directly search other software.",True
@samirsarsamss,2014-10-31T13:57:52Z,0,"Thanks for the reply. Three days are enough to let people see how effort I have spent. Bear in your mind that when I receive any question, I unswer directly without any kind of prediction. It is good to help without judjment. Thanks",True
@martinl2603,2014-10-31T12:38:18Z,0,"Thanks for the tutorial,but until now have not seen any clear information form any tutorial that explain simply how to import csv file into scikit-learn ""shell""- we just need direct things: 1- import csv file. 2- determine the class that we want to predict 3-apply a learning algorithm on this dataset (please not iris data because it is very old, we need a data that is located in the csv file). If there is any tutorial covers all previous stuff, please send me an email: martinlion80@gmail.com. Thanks",True
