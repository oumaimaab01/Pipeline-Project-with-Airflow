author,updated_at,like_count,text,public
@deepspace,2018-02-16T14:43:54Z,19,"Nice. Since lists are mutable, update_obd_values modifies the lists it accepts in place, therefore it doesn't need to return them, hence you don't need to reassign, hence you don't need to use the evil global variables :)",True
@ma.beatrizm.espinosa5119,2022-02-11T09:09:10Z,0,"some error for latest Dash, 'Output' is not defined",True
@probhakarsarkar2430,2021-09-15T10:41:06Z,0,"why the title refreshes, I mean it makes sense, but I just want one fixed title, how to do that?",True
@Luke7389,2021-05-02T12:05:43Z,0,Bugs have been fixed!,True
@Grepoan,2021-01-13T21:25:18Z,7,"Similarly to the previous video, dash v0.37 removed `Event` from the package. As a result, the callback has to be changed to:  @app.callback(     Output('graphs','children'),     [Input('vehicle-data-name', 'value'),     Input('graph-update', 'n_intervals')] )  BUT  the function definition must also be changed to  def update_graph(data_names, intervals):",True
@Grepoan,2021-01-13T19:11:38Z,0,"I always thought that ""deque"" was ""D-Q"" because it's a ""doubled ended queue"". I've never heard it pronounced outloud though",True
@nicolasagustinmartinez9310,2020-08-22T04:15:04Z,0,"Your tutorials are awesome! I would like to share the code i made (actually is more like copy &paste with modifications) to gather data from my database (firebase) and make a realtime visualization of the changes! Im really new at this, and im sure there are better ways to do what i did:  import dash import dash_core_components as dcc import dash_html_components as html import time  from firebase import firebase from collections import deque import plotly.graph_objs as go import random  firebase = firebase.FirebaseApplication(""https://(your proyect name here).firebaseio.com/"", None)  # <--  set your firebase database adress        #example:  firebase.FirebaseApplication(""https://motortest1.firebaseio.com/"", None)  Data_Gather = firebase.get('/', 'Provincia-de-Buenos-Aires')  max_length = 50 times = deque(maxlen=max_length) LP_Estacion1_Motor1_Current = deque(maxlen=max_length) LP_Estacion1_Motor2_Current = deque(maxlen=max_length) LP_Estacion1_Motor3_Current = deque(maxlen=max_length)  data_dict = { ""Corriente Motor 1"": LP_Estacion1_Motor1_Current, ""Corriente Motor 2"": LP_Estacion1_Motor2_Current, ""Corriente Motor 3"": LP_Estacion1_Motor3_Current, }   def update_obd_values(times, LP_Estacion1_Motor1_Current, LP_Estacion1_Motor2_Current, LP_Estacion1_Motor3_Current):     Data_Gather = firebase.get('/', 'Provincia-de-Buenos-Aires')     La_Plata = Data_Gather['Central-La-Plata']     LP_Estacion1 = La_Plata['Estacion-1']      Motor1 = LP_Estacion1['Motor-1']     Corriente1 = Motor1['Corriente']     Motor2 = LP_Estacion1['Motor-2']     Corriente2 = Motor2['Corriente']     Motor3 = LP_Estacion1['Motor-3']     Corriente3 = Motor3['Corriente']       times.append(time.time())     if len(times) == 1:         #starting relevant values         LP_Estacion1_Motor1_Current.append(0)         LP_Estacion1_Motor2_Current.append(0)         LP_Estacion1_Motor3_Current.append(0)      else:         LP_Estacion1_Motor1_Current.append(Corriente1)         LP_Estacion1_Motor2_Current.append(Corriente2)         LP_Estacion1_Motor3_Current.append(Corriente3)               return times, LP_Estacion1_Motor1_Current, LP_Estacion1_Motor2_Current, LP_Estacion1_Motor3_Current  times, LP_Estacion1_Motor1_Current, LP_Estacion1_Motor2_Current, LP_Estacion1_Motor3_Current = update_obd_values(times, LP_Estacion1_Motor1_Current, LP_Estacion1_Motor2_Current, LP_Estacion1_Motor3_Current)  external_css = [""https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/css/materialize.min.css""] external_js = ['https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js'] app = dash.Dash('Motor-data',                 external_scripts=external_js,                 external_stylesheets=external_css)  app.layout = html.Div([     html.Div([         html.H2('Central La Plata',                 style={'float': 'left',                        }),         ]),     dcc.Dropdown(id='Central-La-Plata',                  options=[{'label': s, 'value': s}                           for s in data_dict.keys()],                  value=['Corriente Motor 1','Corriente Motor 2', 'Corriente Motor 3'],                  multi=True                  ),     html.Div(children=html.Div(id='graphs'), className='row'),     dcc.Interval(         id='graph-update',         interval=750,         n_intervals=0),      ], className=""container"",style={'width':'98%','margin-left':10,'margin-right':10,'max-width':50000})  @app.callback(     dash.dependencies.Output('graphs','children'),     [dash.dependencies.Input('Central-La-Plata', 'value'),      dash.dependencies.Input('graph-update', 'n_intervals')],     ) def update_graph(data_names, n):     graphs = []     update_obd_values(times, LP_Estacion1_Motor1_Current, LP_Estacion1_Motor2_Current, LP_Estacion1_Motor3_Current)     if len(data_names)>2:         class_choice = 'col s12 m6 l4'     elif len(data_names) == 2:         class_choice = 'col s12 m6 l6'     else:         class_choice = 'col s12'      for data_name in data_names:          data = go.Scatter(             x=list(times),             y=list(data_dict[data_name]),             name='Scatter',             fill=""tozeroy"",             fillcolor=""#6897bb""             )          graphs.append(html.Div(dcc.Graph(             id=data_name,             animate=True,             figure={'data': [data],'layout' : go.Layout(xaxis=dict(range=[min(times),max(times)]),                                                         yaxis=dict(range=[0 , 30]), #max(data_dict[data_name])*1.1]),                                                         margin={'l':50,'r':1,'t':45,'b':1},                                                         title='{}'.format(data_name))}             ), className=class_choice))      return graphs  if __name__ == '__main__':     app.run_server(debug=True)  Hope someone find it usefull!",True
@suzysnowboards,2020-06-24T16:02:51Z,0,"Hello! great video, can you please post how you would go about doing this if you DID use your OBD sensors? Cheers , I am trying to figure out the data structure needed",True
@pawankumar-xv9lu,2020-05-24T08:39:02Z,0,"Hey brother, hope you are good.  How I can plot the sensor data from arduino into dash python",True
@shardula-ai4ourkids169,2020-05-03T10:46:34Z,0,Thank-you Sentdex. Thank-you Maximilian Grübe. You have done a neat work. Very satiated to see good coding guidelines as well. Hope to put this code to good use.,True
@shardula-ai4ourkids169,2020-05-03T10:46:34Z,0,Thank-you Sentdex. Thank-you Maximilian Grübe. You are doing good. Hope to put this code to good use.,True
@hfe1833,2020-04-30T09:27:32Z,0,"i think i found the right channel for my project, this what im looking for matplotlib+dash",True
@yashasbharadwaj1273,2020-04-25T00:27:12Z,0,Great work dude!,True
@kennethqian6114,2020-04-12T20:16:27Z,0,"Thanks for the videos man!  I've used RShiny in the past, and these tutorial videos offer an excellent introduction to Python Dash.",True
@maximiliangrube1407,2020-01-10T10:34:57Z,28,"For those facing issues with ""Event"" removal in Dash. It also seems like they changed syntax for external stylesheets and scripts. Try the following:   import dash import dash_core_components as dcc import dash_html_components as html import time  from collections import deque import plotly.graph_objs as go import random  max_length = 50 times = deque(maxlen=max_length) oil_temps = deque(maxlen=max_length) intake_temps = deque(maxlen=max_length) coolant_temps = deque(maxlen=max_length) rpms = deque(maxlen=max_length) speeds = deque(maxlen=max_length) throttle_pos = deque(maxlen=max_length)  data_dict = {""Oil Temperature"":oil_temps, ""Intake Temperature"": intake_temps, ""Coolant Temperature"": coolant_temps, ""RPM"":rpms, ""Speed"":speeds, ""Throttle Position"":throttle_pos}  def update_obd_values(times, oil_temps, intake_temps, coolant_temps, rpms, speeds, throttle_pos):      times.append(time.time())     if len(times) == 1:         #starting relevant values         oil_temps.append(random.randrange(180,230))         intake_temps.append(random.randrange(95,115))         coolant_temps.append(random.randrange(170,220))         rpms.append(random.randrange(1000,9500))         speeds.append(random.randrange(30,140))         throttle_pos.append(random.randrange(10,90))     else:         for data_of_interest in [oil_temps, intake_temps, coolant_temps, rpms, speeds, throttle_pos]:             data_of_interest.append(data_of_interest[-1]+data_of_interest[-1]*random.uniform(-0.0001,0.0001))      return times, oil_temps, intake_temps, coolant_temps, rpms, speeds, throttle_pos  times, oil_temps, intake_temps, coolant_temps, rpms, speeds, throttle_pos = update_obd_values(times, oil_temps, intake_temps, coolant_temps, rpms, speeds, throttle_pos)  external_css = [""https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/css/materialize.min.css""] external_js = ['https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js'] app = dash.Dash('vehicle-data',                 external_scripts=external_js,                 external_stylesheets=external_css)  app.layout = html.Div([     html.Div([         html.H2('Vehicle Data',                 style={'float': 'left',                        }),         ]),     dcc.Dropdown(id='vehicle-data-name',                  options=[{'label': s, 'value': s}                           for s in data_dict.keys()],                  value=['Coolant Temperature','Oil Temperature','Intake Temperature'],                  multi=True                  ),     html.Div(children=html.Div(id='graphs'), className='row'),     dcc.Interval(         id='graph-update',         interval=1000,         n_intervals=0),      ], className=""container"",style={'width':'98%','margin-left':10,'margin-right':10,'max-width':50000})  @app.callback(     dash.dependencies.Output('graphs','children'),     [dash.dependencies.Input('vehicle-data-name', 'value'),      dash.dependencies.Input('graph-update', 'n_intervals')],     ) def update_graph(data_names, n):     graphs = []     update_obd_values(times, oil_temps, intake_temps, coolant_temps, rpms, speeds, throttle_pos)     if len(data_names)>2:         class_choice = 'col s12 m6 l4'     elif len(data_names) == 2:         class_choice = 'col s12 m6 l6'     else:         class_choice = 'col s12'      for data_name in data_names:          data = go.Scatter(             x=list(times),             y=list(data_dict[data_name]),             name='Scatter',             fill=""tozeroy"",             fillcolor=""#6897bb""             )          graphs.append(html.Div(dcc.Graph(             id=data_name,             animate=True,             figure={'data': [data],'layout' : go.Layout(xaxis=dict(range=[min(times),max(times)]),                                                         yaxis=dict(range=[min(data_dict[data_name]),max(data_dict[data_name])]),                                                         margin={'l':50,'r':1,'t':45,'b':1},                                                         title='{}'.format(data_name))}             ), className=class_choice))      return graphs  if __name__ == '__main__':     app.run_server(debug=True)",True
@binnytandon3522,2019-09-26T22:40:31Z,0,"Hi there Can someone help me with this error, please!   I am getting an error for the last line  if __name__ == '__main__':     app.run_server(debug=True)   And the error is this:   ======================== RESTART: D:\dashboardmain.py ======================== Traceback (most recent call last):   File ""D:\dashboardmain.py"", line 133, in <module>     app.run_server(debug='True')   File ""C:\Users\HP\AppData\Local\Programs\Python\Python37\lib\site-packages\dash\dash.py"", line 1058, in run_server     **flask_run_options)   File ""C:\Users\HP\AppData\Local\Programs\Python\Python37\lib\site-packages\flask\app.py"", line 985, in run     cli.show_server_banner(self.env, self.debug, self.name, False)   File ""C:\Users\HP\AppData\Local\Programs\Python\Python37\lib\site-packages\flask\cli.py"", line 670, in show_server_banner     click.echo(message)   File ""C:\Users\HP\AppData\Local\Programs\Python\Python37\lib\site-packages\click\utils.py"", line 218, in echo     file = _default_text_stdout()   File ""C:\Users\HP\AppData\Local\Programs\Python\Python37\lib\site-packages\click\_compat.py"", line 675, in func     rv = wrapper_func()   File ""C:\Users\HP\AppData\Local\Programs\Python\Python37\lib\site-packages\click\_compat.py"", line 436, in get_text_stdout     rv = _get_windows_console_stream(sys.stdout, encoding, errors)   File ""C:\Users\HP\AppData\Local\Programs\Python\Python37\lib\site-packages\click\_winconsole.py"", line 295, in _get_windows_console_stream     func = _stream_factories.get(f.fileno()) io.UnsupportedOperation: fileno",True
@tyrantus6,2019-08-08T13:30:13Z,0,how to solve css and js problems: https://dash.plot.ly/external-resources,True
@nihalka7042,2019-08-02T11:39:52Z,5,"Hi,  Can you please make a video on creating dashboard from taking the input from excel data.  Thanks",True
@pranavdheer5971,2019-07-27T22:09:36Z,1,"+sentdex wanted to inform that the external CSS and js is getting overridden by the dash CSS and JS components. Here are two workarounds for this. 1. app.css.config.serve_locally=False     app.scripts.config.serve_locally=False Add this to your code, this works fine for CSS but  due to some reason doesn't work for external JS  2. Update your dash >0.2.0  app = dash.Dash(__name__,                 external_scripts=external_js,                 external_stylesheets=external_css)   Also noted another bug with Dash  Dash saves the external CSS in the SYSTEM CACHE instead of browser cache thus changing external CSS or trying to remove it, could be cumbersome and requires removing SYSTEM CACHE. To be fair this is more of a react problem  Hope they fix it soon :p",True
@cristianenriquez8828,2019-06-05T02:07:08Z,1,@sentdex this is actually really usefull but i got bugs when i change the values in the dropdown and a error from Materialize: A local version of https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/css/materialize.min.css is not available.,True
@SasanNajar,2019-06-03T04:36:49Z,0,"This can fix the 'Events' issue (no issue for me and graphs are updating):   ...     dcc.Interval(         id='graph-update',         interval=100,         n_intervals=0),     ], className=""container"",style={'width':'98%','margin-left':10,'margin-right':10,'max-width':50000})   @app.callback(     Output('graphs','children'),     [Input('vehicle-data-name', 'value'), Input('graph-update', 'n_intervals')],     )  def update_graph(data_names, n):  ...",True
@106edef,2019-05-14T20:59:05Z,0,"all the tutorials are very helpfull, but i have a problem with the css that you are using (materializecss), i can't see properly the checkboxes and radio items from the dash_core_components, do you know how to solve it?",True
@A-M-F-A,2019-05-07T09:10:21Z,9,What about the Event system alternative? Since it has been removed,True
@VishalMishra-jb8hs,2019-04-05T16:33:40Z,0,"getting an error regarding including JS CDN whic is as follows :- "" UserWarning:  A local version of https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js is not available"". somebody please help me out.",True
@magicmilly9870,2019-03-17T20:52:59Z,1,Really enjoy your codealong tutorials and find them very helpful. Could you please update your website with how to deal with the removal of 'Event' from dash.dependencies?,True
@raunitsingh2100,2019-03-04T06:20:28Z,4,"Hey, I am having a little trouble here, since 'Events' has been removed from Dash, I have used multiple inputs like this : @app.callback(     dash.dependencies.Output('graphs','children'),     [dash.dependencies.Input('vehicle-data-name', 'value'),      dash.dependencies.Input('graph-update', 'interval')     ]) Now, since I have two inputs, I will have to send two arguments to our 'update_graph' function:  def update_graph(data_names, n):     graphs = []     update_obd_values(times, oil_temps, intake_temps, coolant_temps, rpms, speeds, throttle_pos) ..... The issue that I am facing is that the graphs are not being updated. Please look into this asap.",True
@yajuvendra15,2019-02-18T14:40:46Z,0,"seriously man, thats some stuff, loved the tutorial",True
@TheBluCypher,2019-02-04T04:08:48Z,0,"Unable to use dash.dependencies.Event as it apparently no longer exists as an attribute of dash.dependencies. Is there any substitute? I went through the Dash documentation on calls and they appear to only have Input, Output and State as existing dependencies.",True
@Khushpich,2019-02-03T16:07:54Z,0,Shame that the API changed and the code doesn't run anymore.,True
@mockingbird3809,2018-12-21T06:56:37Z,0,"I am Having this Error On My Terminal:  ""A local version of https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/css/materialize.min.css is not available"" Please Help Me Out",True
@Johnskiqu,2018-08-19T14:38:45Z,0,"hi there, love your tutorial, the code you provided doesn't update or generate new plots after having 4 plots in the page, can you let me know why? thank you",True
@mneev35,2018-08-16T09:20:00Z,0,Hey Did anyone manage to fix the bug that he has at the end where if you don't clear them in order it messes everything up?,True
@michiokaku101,2018-08-01T06:26:21Z,0,why it doesnt show the graphs? have no errors but still no graph is seen!,True
@theycallmemorphine,2018-07-13T15:17:36Z,0,"@sentdex But why is it not working on Chrome? It shows something on Safari btw, that's also unusual   I did the same as you",True
@divyeshpatel1987,2018-06-16T08:13:52Z,0,"0 down vote favorite I have created client socket file i receive data from modbus server. i have flask dashboard html file.  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) The data received on below mentioned verial.  while True:     n = [int(i) for i in s.recv(2054).decode('utf-8').split('\n')]     m = unicode(n)     print(str(n[2]))     time.sleep(0.1)  how to display this verial n[0] data into flask dashboard html file and also compare n[1] value this tag of titel.",True
@dernicolas6281,2018-05-22T08:26:11Z,0,"Great tutorial series! Just for completeness: on your python programming website the final (all together now) code isn't working. The ""deque"" part should be before the data dictionary.. as it's done in the video.",True
@youngminpark2397,2018-04-23T23:44:02Z,0,"Hi, sentdex. From your entire code for this episode. I couldn't run this code. But when I locate these codes(times = deque(maxlen=max_length)) before data_dict = {""Oil Temperature"":oil_temps,....}, I could run.",True
@devstash830,2018-03-20T02:59:55Z,0,in these function def update_graph(data_names) where data_names came from?,True
@hermdude,2018-03-12T07:36:40Z,2,"Hi Harrison, thanks for your tutorial series on Dash, it looks like a great contender to the Shiny server in R, thus very intrigued with what Dash can do for data visualisation. I have to point out a mistake though in the final code in your tutorial site: your `data_dict` should be the after `deque` initialisation. Otherwise it works well!",True
@yinghao91,2018-02-24T06:04:23Z,0,"Hi Sentdex, Thank you very much for your videos. I notice that your x-axis tick labels are missing in this app. Any idea how can we put it back in?",True
@GooGun,2018-02-23T20:56:04Z,0,can you make an A.I play Minecraft?!?!?!,True
@SerottaPDX,2018-02-23T20:31:13Z,0,FUCK YES! I Love your videos!,True
@muabyt7333,2018-02-23T16:49:01Z,0,"Hey Sentdex! Could you do a mini series about NumerAI? Its kinda like Quantopian, but with more machine learning. It would be awesome. 1 or 2 episodes would be already perfect",True
@etmoimeme,2018-02-22T21:36:38Z,0,"Hi, nice tutorial! How would you get real data? Like a serial interface, or in your case, a canbus interface (I used beaglebone black with wireshark to have a vehicle sniffer some times ago). Some kind of Arduino as sensors to computer interface maybe?",True
@AnalystRising,2018-02-22T15:11:30Z,0,"Hi, I think your tutorials are really great. Would you help me out and subscribe to my channel? I would really appreciate it",True
@jasworld9672,2018-02-22T09:44:52Z,2,You should invest your money and buy a Better camera ... And may be a studio in future.,True
@deepakranganathan9644,2018-02-20T17:35:18Z,0,which is better? dash or bokeh?,True
@thorodinson7467,2018-02-20T02:55:42Z,2,Could you make some videos on Raspberry pi bluedot and gpio stuff? Your content and pace is excellent.,True
@paulnelson1623,2018-02-19T17:36:08Z,1,"Thanks for the tutorial, sentdex. Like others have mentioned, the code provided on pythonprogramming.net has the data_dict in the wrong order as it is calling variables that haven't been instantiated yet. Copying and pasting the code as is will result in errors. Cheers",True
@pasanmanula6758,2018-02-18T17:18:24Z,0,It would be nice if you can show us how can we implement this system with a mysql database.,True
@24deepakjoy,2018-02-18T16:04:47Z,0,"Very interesting, waiting for the next video on this series.",True
@LaurentNittler,2018-02-17T23:46:07Z,0,"Nice video tutorial about dash. It gave me the idea to represent my multidimensional data  in an easy way. But I still struggle to load the data (json format) from a file, loaded via the dcc component. Also I wonder how I can arrange the graph in an asymmetrical 2x2 array allowing to simultaneously zooming in all graphs. I would appreciate if somebody could give me a hint for those issues. Greetings",True
@panzach,2018-02-17T19:22:21Z,1,Nice stuff! In the code you provide in pythonprogramming_net the data_dict should be defined after you have defined what the oil_temps etc are.,True
@hackingatubuntu7437,2018-02-17T14:23:47Z,1,Hello sentdex can you please make a program with python which Searches a website for the lowest price product,True
@other2718,2018-02-17T12:19:22Z,0,"+sentdex When tax time comes, the federal government figures out how much it made in GDP and then pays taxes to sentdex.",True
@24deepakjoy,2018-02-17T12:17:48Z,0,"Superb Stuff, loved it. Would like to see more on Dash. Request to u if u can bring up a tutorial on integrating Dash with Flask framework, Thanks!",True
@jpedrocurvelo,2018-02-16T23:43:15Z,1,Nice video! Can you make one explaining how to integrate Dash and Django? Thanks for the help!,True
@other2718,2018-02-16T23:16:28Z,0,"+sentdex When sentdex trades securities, he buys the bid and sells the ask.",True
@JoshKassman,2018-02-16T22:04:21Z,3,"At 19:00, I noticed that you are iterating through the css list when adding the js scripts. This might be causing some of the problems you faced",True
@mouhib6136,2018-02-16T21:26:16Z,4,4 more videos and you'll have 1000 videos <3 Thank you for your great content.,True
@HellTriX,2018-02-16T21:11:02Z,1,"+sentdex I would be very interested in how I could use this to provide visualization of my data to display on something like my Joomla/Django CMS. I was starting to work on an ajax style page for this, but with Dash I wouldn't have to write my own custom visualizer.",True
@mihazajec88,2018-02-16T20:16:35Z,1,"Nice, could it be enbedded into Django ?",True
@kevinl7139,2018-02-16T18:40:42Z,0,Keep it coming!,True
@TheStevieb143,2018-02-16T17:22:56Z,0,Where did you get the vehicle data from,True
@HandFedMole,2018-02-16T16:43:04Z,6,"Open source, flexible data dashboarding is seriously under served in the data science community. Currently you have to be pretty much a web developer to build a scalable enterprise app, which is not reasonable if you're also asked to be a data analyst, industry analyst, and business person...   Lots of us are torturing R Shiny to get the job halfway (or not even halfway) done. I am psyched for this library and I hope it continues to be supported.",True
@dangerghost1619,2018-02-16T15:05:28Z,0,"Please, help me",True
@dangerghost1619,2018-02-16T15:04:15Z,0,slamAlikum Sir I have a code to edit I want to turn otu a subscription,True
@beckettman42,2018-02-16T15:02:01Z,0,This should prove useful.  I'm in school (again) for industrial automation and engineers in factories love pretty and up-to-date graphs and charts of the stuff in their workspace.    My big plan on watching these videos is to grab data from a PLC (Programmable Logic Controller) and make some pretty trend graphs.  Hopefully that will help me land a new job.  :)  Thanks sentdex.,True
@martinl2603,2018-02-16T14:51:05Z,0,"Don't know how to contact you, as you don't reply even the emails. Please let me know the best way to communicate to you (sometimes I have work for you)",True
@Dino-bp2tz,2018-02-16T14:37:22Z,0,"Have you considered doing a basic PoW blockchain tut? BTW love the machine learning series, have been thoroughly enjoying it",True
@Liteship,2018-02-16T14:14:26Z,0,good stuff. can you use this data for predictive maintenance of your car with machine learning?,True
