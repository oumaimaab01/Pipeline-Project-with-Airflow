author,updated_at,like_count,text,public
@kingsega6258,2021-01-07T03:32:16Z,0,for some reason i got a nameerror :(,True
@GoredGored,2020-10-02T19:44:54Z,0,"Hi sentdex, My initial instinct was to use pandas so I copied the whole list/text from the pdf directly to my notebook and saved it in a string variable., after that I used the following code: russel_3000=[] for item in russel3000.split('\n'):     if 2 <= len(item.split(' ')[-1]) <=4:         russel_3000.append(item.split(' ')[-1]) print(russel_3000) Do you advise automating instead of doing what I did. For the record I parsed it as you have shown as well. Thanks",True
@karwendelman,2017-01-15T22:24:59Z,1,"Excellent series of videos! Just found this and subscribed. Unfortunately, I didn't see this video until after I had already gone through the trouble of writing my own Python script to create a dictionary of tickers. It's just as well, since the URL of the constituent list has changed. It's now here: https://www.ftserussell.com/membership-russell-3000  I basically just save the PDF and then use the PyPDF2 library to do the heavy lifting for me: ``` import PyPDF2 import os  f = os.path.join('C:\\', 'path', 'to', 'file', 'ru3000_membershiplist_20160627.pdf')  pdf = PyPDF2.PdfFileReader(f) constituents = dict() for page_number in range(0, pdf.numPages-1):     page = pdf.getPage(page_number).extractText()     lines = page.split('\n')     for pgidx in range(0,len(lines)-6,2):         if lines[pgidx]=='Company':             continue         company = lines[pgidx].strip()         ticker = lines[pgidx+1].strip()         constituents[company] = ticker ```  Hope this helps, if someone still needs the constituent list.  Cheers, Matt",True
@RandomAlexus,2016-08-04T17:36:35Z,0,Your videos rock.,True
@ChunLoeSee,2016-04-09T16:26:11Z,0,"Hi,  What if the list was reversed. Say the tickers were first and then the company name after?",True
@jaselc,2015-10-13T15:01:22Z,0,"Hi Sentdex I'm having a little trouble in this tutorial in that when checking the array of Russell 3000 symbols against our earlier defined criteria (PEG ratio, P/B ratio etc) there are some companies which do not have a PEG5 ratio - take 'ABY' as example which shows PEG5 of N/A on yahoo finance.   This is causing my yahoo_key_stats function to go the the 'except' block and return following message ""failed in the main loop could not convert string to float: N/A"".   I am guessing there is a quick fix/bit of logic which can account for instances of stocks presenting 'N/A' and still output the result for other tickers in the array but am not too sure what it is - your help would be much appreciated :)  Thanks!",True
@eryckwu3369,2014-06-21T15:16:47Z,0,"In my case, i have to put ticker = splitLine[-2],weird.. I got it fixed now. Thanks, but I would still like you to address the blank line issue. How come it does not affect python reading the file? Did python just skip the blank line in the text file??",True
@eryckwu3369,2014-06-21T15:00:03Z,0,"hello again, I copied your script, and copied and pasted the PDF(russell 3000) into the text file, and cleaned it up. However, i did not get the same result as you did.Â I think the last object in each line is a ""space"" instead of the ticker..so when i say ticker = eachline [-1], it printed out space, and there are some blank lines in the text file, should i take that into consideration as well?",True
@Excelexcellent,2013-10-25T06:37:47Z,0,FYI: I found pdfquery which is based on pdfminer.  The table is well formated so pdfquery should work.,True
@sentdex,2013-10-24T23:44:09Z,0,"That's a good question. I have always just needed it for a 1 time thing, but, if you wanted to use it for a way to keep an updated list of the Russell 3000 that seems useful. I will look into it and maybe put out a video.  ",True
@Excelexcellent,2013-10-24T22:20:50Z,0,How would you use the pdf directly by downloading and extracting it via py?  Amazing topic!  Thanks for this playlist.,True
