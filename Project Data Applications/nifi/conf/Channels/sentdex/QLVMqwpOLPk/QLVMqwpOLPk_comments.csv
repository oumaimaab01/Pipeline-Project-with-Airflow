author,updated_at,like_count,text,public
@TheAmvzz,2024-04-24T14:48:41Z,0,Arent you causing leakage by using naive cross validation? The split  for such data should always be based on timestamps,True
@fabiozuliani5504,2023-11-27T17:17:18Z,0,I write your same code but my accuracy is 78% why?,True
@harshitsharma3885,2023-08-04T17:52:39Z,0,Is the date column not wrong because there would be no action on days when the market is closed i.e saturdays and sundays.,True
@itsbxntley2970,2023-03-02T11:42:21Z,0,Im so glad there's chatgpt now to explain chunks of code now and clarify quickly,True
@devnull711,2023-01-15T21:34:19Z,0,"very nice video and series, I like that it's in the form of many short videos. PS: I paused the video to understand the loop part before you explained it. I am an older developer but new to Python :)",True
@varunsingh545,2023-01-06T17:23:56Z,0,SMARTEST PEOPLE TALK IN THE SIMPLEST LANGUAGE,True
@varunsingh545,2023-01-06T17:23:17Z,0,I DON'T GET ANYTHING.....IDK IF MY UNDERSTANDING IS POOR OR YOUR EXPLANATION ;),True
@yt-1161,2022-11-15T17:56:54Z,0,"why do you assign X[ : -forecast] back to X. Now it doesnt work, because X and y will have differnt lengths. You shouldve named it something else ""X_now"" or so",True
@stanleychen6710,2022-09-29T13:13:26Z,0,"I cant read in cross_validation from sklearn, can anyone help?",True
@mohammedcementwala5657,2022-08-29T07:28:29Z,4,"@sentdex  Maybe at 1:25, the order of assigning values to X_lately and X should be in reverse because when you say X = X[ : -forecast_out ], the new X doesn't have the features which have corresponding NaN values.  so maybe  it should be X_lately = X[  -forecast_out : ] X = X[ : - forecast_out]",True
@dhruvalpatel3447,2022-07-11T15:52:35Z,0,"This works perfectly well. But this predicts adj close price for the previous 30 days, but I want to forecast for the next 30 days. What should I change in the code to get a price for the next 30 days?",True
@DM-py7pj,2022-07-09T20:12:05Z,0,"Might be semantics but how is this a classifier? Isn't it a linear regression problem? The ""label"" is a predicted quantity not a class/label.",True
@falconer8518,2022-03-28T13:06:05Z,0,So that X and Y have the same size  y=y[:-forecast... :]  Else error when use split test train,True
@jeremyheng8573,2022-01-12T12:57:26Z,0,Very good tutorial,True
@mohammadrezarahmani1745,2021-11-06T22:36:40Z,1,I also have this error  cannot import name 'cross_validation' from 'sklearn' (E:\python\lib\site-packages\sklearn\__init__.py),True
@mohammadrezarahmani1745,2021-11-06T22:34:30Z,0,"hi dear friend as I run this code I get the error  AttributeError: 'numpy.int64' object has no attribute 'timestamp' do you have any suggestions on how to fix this?",True
@yashsethia9247,2021-08-11T12:20:04Z,0,"If all we are doing in Linear Regression is trying to find a straight line that minimises the squared mean error, how is the predicted value non-linear ?",True
@yolandazhang6347,2021-08-02T14:31:44Z,0,"I don't know the reason why when I run the same codes to predict the gold futures price, I got all the same number. It's so weird, does anyone know what happened?",True
@binarybugs3264,2021-05-12T17:52:11Z,0,"Error: unsupported operand type(s) for -: 'str' and 'int'  I am new to this , help",True
@SatyamKumar-gd1lz,2021-05-10T14:18:41Z,0,Sometimes it seems like he teaches like eminem.  ;)  But still very helpful stuff,True
@stevenclive8910,2021-03-20T06:56:55Z,0,can someone explain what the .name function is doing?,True
@granthawkins88,2021-03-11T12:18:17Z,1,"All of your videos are great, I can't believe this is free!",True
@samharrison7791,2021-02-25T18:40:07Z,0,how the plot understand that date is x-axis?,True
@davidscully8263,2021-02-21T09:46:02Z,0,"For anyone doing this now, the stlye import isn't needed from matplotlib, its not part of the pyplot folder we're already importing;  plt.style.use('ggplot')",True
@Mr_MRK,2021-02-10T12:50:23Z,0,"okay, guess what, I have to wait sometime because I used quandl many times in a short time :D",True
@abhijitmondal5820,2021-01-29T14:56:08Z,0,"when u do:  X = X[:-forecast_out]  and in the very next line do: X_lately = X[-forecast_out:].......i don't think it will do what u intended to do.....i mean after changing X ur using X to change X_lately.  i think u should have done this:  # part of X for which label is given X_previous = X[:-forecast_out]  # part of which X in not available (or to be predicted yet) X_lately = X[-forecast_out:]",True
@dwisetyoaji5007,2021-01-27T08:46:38Z,0,"can someone explain to me the purpose of X_lately = X[-forecast_out:] X = X[:-forecast_out:]",True
@trismonocandrakrisna5723,2021-01-23T21:44:01Z,0,"I modify the loop as follows,  for i in forecast_set:     next_date = datetime.datetime.fromtimestamp(next_unix)     if next_date.weekday() == 5:         next_date = next_date + datetime.timedelta(days=2)         next_unix += one_day*3     else:         next_unix += one_day     df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)] + [I]  because Saturday and Sunday the stock is closed and will be open again on Monday",True
@olamigokephilip9402,2021-01-10T17:49:47Z,0,"For persons confused about date, time, timestamp, epoch etc.. Here's is a cleaner way to go about it.  # Adding new predicted data to existing record_end  for index, data in enumerate(forecast_set):     next_date = last_date + datetime.timedelta ( days=(index + 1) )     df.loc [next_date] = [ np.nan for _ in range ( len( df.columns ) -1 ) ] + [ data ]",True
@saqibperwaiz4043,2020-12-08T17:50:14Z,0,Even using the code written in the description of the video lengths of x and y are not coming out to be same. Can anyone suggest some method to get it working?,True
@martindebeer1566,2020-10-27T00:33:55Z,0,Why is my output showing 35 and yours is showing 30?,True
@karakol86,2020-10-10T00:54:25Z,0,Nothing plotted for me. The for loop works and I created an empty list to see then all the values and I only get one value. I donâ€™t think it is looping all the way through  the dataset. New to ML. Any help would be appreciated,True
@skillmonks.intern235,2020-09-16T14:02:26Z,0,Major Skills You Need to Master Machine Learning and Deep Learning. Read Full Blog Article https://blog.skillmonks.com/deep-tech/major-skills-you-need-to-master-machine-learning-and-deep-learning/,True
@netranjitborgohain9360,2020-08-29T15:27:14Z,0,Didn't understand the for loop and the timestamp. Somebody please help me here.,True
@oguzynx,2020-08-18T06:46:07Z,0,So we shift 30 days up the label data. So doesn't that mean that we train it with todays values with 30 days after values ? Shouldn't we just train it with todays real parameters and real adj. close value ? So we will have better trained model ?,True
@manojdureja1069,2020-08-12T08:06:03Z,1,"Thanks sentdex for your videos. These are helping in implementing many algorithms. But, I would like to point out one thing:  In this video, one of fundamental reason why accuracy is so high is the use of linear regression on price data. This is not a right way forward if you want to actually trade. Essentially, ""accuracy"" here represents the correlation between prices and lagged prices (lag = 30 days). Correlation tracks deviation from mean.   Example: If a stock moves from say 400 to 1000 over 5 years. Say, mean is 700. Now, you take a data point for some day say 900, you predict (will be close to 900 obviously, very low probability of predicting below 700). Then, this prediction is counted as a very good prediction in the calculation of ""accuracy"" . Clearly, this does not add any value.  Correct way is to use returns of the stock and try and predict those.",True
@shivaalapati2898,2020-07-29T11:26:24Z,0,"""Length of values does not match the length of the index ""  when  I am executing the code df[next_date]=[np.nan for _ in range(len(df.columns)-1)]+[i] the only change I have made is I worked on a copy of the original data frame. Pls help",True
@setiawanaji3686,2020-07-14T09:06:31Z,1,"yes, little confusing :)",True
@sinaiolivares6242,2020-07-07T20:48:55Z,0,Any idea why i get a gap within the data and the forecast in the graph? the last day of my data is 2018-02-05 and when i plot it the forecast shows just a bit after 2018-05...,True
@preciousomodara8477,2020-07-07T12:50:38Z,0,"Instead of 30 days, mine is 35. And I keep on getting negative values.",True
@user-dt3em8rl4t,2020-07-01T18:19:22Z,7,"in first 4 mins when you specified: X_lately = X[-forecast_out_data:] X = X[:-forecast_out_data] you changed shape(number of rows) in X its for 30 rows smaller, but you let the y stay the same so when i use: X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2) i get error because X and y must be the same size, idk how you didnt get error does someone know what im suposed to do with y, samo as with X or?",True
@nikhilkhemchandani5991,2020-06-26T13:45:48Z,0,"are the forecasted values, labels for that 1% data??",True
@vmikhail1,2020-06-22T18:07:52Z,0,"!!!!Guys facing trouble with timestamp!!!!  You have to import the data set directly from quandl and  do not read it from an excel. And if you want to do so, make sure you are not using index=False in ""df.to_excel"" statement. As quandl retrieves the dataset to dataframe with Date as index!  you will be missing the date-index and wondering how int type (auto indexing in pandas) dtype produces timestamp obj!  Hope this helps  (Too late to post , but hope some one finds it useful)",True
@ojussinghal2501,2020-06-22T04:39:06Z,0,READ THE DESCRIPTION EVERYONE!,True
@Patrick-ig3cn,2020-06-20T17:53:07Z,2,"For those that have a ValueError y not equal to X, you shouldn't df.dropna before defining X and y",True
@garychen6367,2020-05-31T17:53:00Z,1,"Hi Sentdex, thanks for the excellent tutorial.  I have two questions about the feature processing,  1) when do we need to standardize or normalize the value features before training? I know that standardizing or normalizing the value features can affect the performance of some ML-algorithm, whether we should do it seems depends on what kind of ML-algorithm we adopted (i.e., it is better to standardizing value features when using ANN, but may not when using DT-related algorithm).  2) if we do need to standardize the value features, should we do it before encoding the categorical features or after? (I used to do a stupid way: first split the value and categorical features, then standardize the former ones and encode the latter ones, then concatenate them, is there a better way to do it?).  Again, thank you for this gorgeous tutorial",True
@dhruvatreya,2020-05-22T04:42:24Z,0,Hi,True
@yin97825,2020-05-19T21:46:59Z,0,"why are x_lately = x[:-forecast_out] x = x[-forecast_out:]  placed behind preprocessing? If forecast_out isn't preprocessed/squashed into a smaller range, that slicing wouldn't work would it? Can someone please explain, thanks!",True
@deojeetsarkar2006,2020-05-16T14:54:59Z,0,"Dear Sentdex, Please remake this video, lots of errors are occuring due to timestamp. And this main part of regression was way above the head. Thank you.",True
@AbhishekSingh-fj2so,2020-05-09T11:14:08Z,2,your videos are awsm but i ve to watch them thrice to understand completely lol.,True
@nishalp1747,2020-05-07T15:16:02Z,1,When I run it at 2:22 I get a ValueError can someone help.,True
@peterkipropkurui9075,2020-05-01T23:41:42Z,3,"Someone help - In my case, the line for ""Forecast""  is below that of ""Adj. Close"" hence the two do not touch",True
@marisagonzalez679,2020-04-29T10:34:05Z,0,"Learning so much with your tutorials! I am actually following from your website as your text comes also really handy and explanatory. Thank you! Regarding this tutorial, I have a question, if someone could clarify it to me I'd be really grateful...  Can someone explain to me what does this mean, i.e. what are these two lines actually doing?  X_lately = X[-forecast_out:] X = X[:-forecast_out]  Thank you in advance for your help!",True
@roccodivincenzo1858,2020-04-20T05:38:00Z,0,"Another great videos again! I have a dumb question though :D the data from Quandl cover the prices of GOOGLE until 2016-04-08 but at the end of all you predict 30 days of prices up to 2016-03-26!! If you wanted to predict 30 days of prices, I was expecting data up to 2016-05-08. Why is that? At this point predicting would be senseless since we already have data up to that point.  Maybe I must have skipped something you said, but really can't understand why you do not predict data(30 days) starting from 2016-04-08.",True
@KK-zx5xi,2020-04-18T17:16:18Z,1,"Note : Those who are getting hard time to understand his tutorials, check out his site on the topic. He has explained all the codes in details there.",True
@hvtarun7030,2020-04-18T04:02:11Z,1,"ValueError: Found input variables with inconsistent numbers of samples: [3354, 3389]  anyone else getting this error while running this code ??",True
@alfadhelboudaia1935,2020-04-15T17:12:41Z,1,"I got errors using :  from sklearn import preprocessing, cross_validation, svm But it goes right with the coding below: from sklearn.model_selection import cross_validate",True
@shudhanshukumar3083,2020-04-08T10:38:06Z,0,"x=np.array(df.drop([""label""],1)) y=np.array(df[""label""]) current they both have equal number of rows but after x=x[:-forecast.out] x and y don thave same number of rows and thats giving me as error in train_test_split() i have imported from sklearn.model_selection import cross_val_score, train_test_split  i couldnt find cross_validation plz help me",True
@rajatsharma6137,2020-04-01T09:42:39Z,1,you are very knowledgeable man!...You have a great understanding of machine learning and stuff....but you are one of the worst teachers I have seen..no attempt to explain what is happening...just talking to your own self..it is extremely unsettling to see your videos from knowledge gaining perspective...NOT RECOMMENDED FOR BEGINNERS ..anyways it is motivating to see your coding skills !,True
@maestro097,2020-03-27T20:05:07Z,10,"If you're getting the data from your local directory instead of getting it directly from Quandl, you should set 'parse_dates=True'  while reading it from the csv file. It should be as follows:   data = quandl.get('WIKI/GOOGL') data.to_csv('googl.csv') df = pd.read_csv('googl.csv', index_col='Date', parse_dates=True')   This will solve the issue.",True
@bipinmaharjan4090,2020-03-18T13:17:47Z,0,"What the f**k is happening here????? I am about to lose my mind. I don't understand labels, features, forecast col, forecast out. What am I missing can someone help me???",True
@AbrahamWilson,2020-03-10T07:37:52Z,0,"I know this is pretty late to ask questions, but how did matplotlib automatically decide that the years should be the x-axis.",True
@architgoyal2729,2020-03-03T16:04:39Z,0,The number of Indian guys in the comment is too damn high.,True
@rigeleisenheim8860,2020-02-01T15:15:38Z,0,you didn't assign anything for df['Forecast']. how did you plot it?,True
@kolinchang5506,2020-01-31T19:29:06Z,1,"@sentdex can you please explain how your DF still contains a time, since you pick it up using df.iloc[-1]. I have a time column, but before preprocessing/using model_selection.train_test_split(X, y, test_size=0.22, random_state=20), i need to lose the time column, or i get an error. Or how does your last_date get values?",True
@ankushsingh3354,2020-01-29T21:01:34Z,7,"How shape of x[:-forecast_out] is same as Y ,I am getting an error because both are not in same shape and cannot be fitted .",True
@pivasmilos,2020-01-22T20:11:09Z,0,"I think that you have a semantic error in your plotting where you first plot the real time values of 'Adj. Close' (the red line) and then values which are x-day in future forecast. So you have an x-day long discontinuity.  Also, wouldn't it be better to save those tailing rows of df with NaN labels? And then do this:  df_latelyÂ =Â df[df['label'].isnull()]  # From there you extract the X_lately: df_latelyÂ =Â df_lately.drop(['label'],Â 1) X_latelyÂ =Â np.array(df_lately)  # regression on X_lately ...  # And then, later you can use it to plot the forecast_set: df_lately.loc[:,('Forecast')]Â =Â forecast_set df_forecastÂ =Â df_lately['Forecast'].copy() deltaTÂ =Â df_forecast.index[-1]Â -Â df_forecast.index[0] # since some days are missing, this is larger than forecast_out df_forecast.indexÂ =Â df_forecast.indexÂ +Â deltaT  df['Adj.Â Close'].plot() df_forecast.plot()",True
@EndersupremE,2020-01-17T21:03:11Z,3,"I've been testing with this algorithm on various stocks. It looks like, even if it does have high accuracy, it just repeats the last 10-day pattern. It doesnt predict for future 10 days.",True
@rezasadeghi2520,2020-01-16T10:26:51Z,1,"hi @sentdex :) I have a question: if we are interested in next 30-day price from the current data ( forward).... as we stop the x_lately to -30 days ago (backward)? with this code we only get to maximum ""today/current"" price and not a prediction of 30 days from today! how do we change the code to fix this challenge ? thank you so much in advance. you are a legend!",True
@vigneshsivasubramanian9193,2020-01-11T04:56:58Z,0,please someone tell me what exactly df.iloc[-1].name does,True
@evgen422,2019-12-18T10:30:27Z,0,"Unfortunately, the output of this classifier is the same as input (forecast_set = X_lately[Adj. Close]), thats why the predicted graph 10:09 is the same as the last 30 days of the real one.",True
@evgen422,2019-12-16T13:13:28Z,0,I checked Google stocks in 2016 and it doesnt look like what u have predicted,True
@MrFaizanh,2019-12-13T13:41:21Z,1,"I have copied the exact same code but i'm coming across two issues. 1) Is that my data is of 35 days not 30 days. I've used the code in the similar fashion x= np.array(df.drop(['label'],1)) x=preprocessing.scale(x) x= x[:-forecast_out] x_lately= x[-forecast_out:]  I don't know the reason why. Secondly the code works the graph is displayed with the X-label the y label and has the plotting of the data as shown in your video but the forecast is not plotted on the graph. Can somebody please help me out. It will save me a lot of time. Thanks",True
@sambase123,2019-12-08T20:04:23Z,1,Any one who got confuse here . for i in forecast_set:     next_date = datetime.datetime.fromtimestamp(next_unix)     next_unix += 86400      df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)]+[i] ..He is basically filling the future values which we got from predict function ie forecast_set.. which we can see in graph(blue line). As we dont need or we can say we dont have other features values of this predicted values so we are filling that values with np.nan.,True
@ardonnie,2019-11-24T01:18:08Z,0,"I've been trying to use this for weeks now, I'm convinced the only reason the accuracy is so high is because you are training it to predict its own values. When I display the real data and projected data side by side, they are identical and there is no real projection past the real data.",True
@markk364,2019-11-18T20:42:04Z,0,"You need to check you code SentDex For those of us who use an alternative symbol and time-range (I am using HomeDepot for an 89 day period), the x_lately and X[forecast_out] code is incorrectly shortening the X shape, while leaving the y shape intact.  @_lately = X[-forecast_out:] @=X[:-forecast_out] First, I checked the X.shape and y.shape AFTER commenting those two lines - and my shapes for X and y are consistent.  Second, when I run these lines, I note the delta between X.shape and y.shape is the precise number of days that I am predicting, i.e. the number of days reprsented by the ""forecast_out"" code. print(X.shape)) out: (704,4) print(y.shape)) out: (793, ) the difference is 89.....   forecast_out=int(math.ceil(0.1*len(df)))   print('No of Days Forecast Out:',forecast_out)  = 89",True
@markk364,2019-11-18T20:38:11Z,0,"As mentioned in prior video, predicting stock prices with linear regression is goofy - mostly bc prices do not follow a normal distribution, so this entire LinReg series s/b viewed as coding tutorial  - but it would be laughed at by finance professionals.  Normal distribution cannot be used to model stock prices because it has a negative side, and stock prices cannot fall below zero.  Stocks grow at a  compound rate, not a linear rate,.... it is the rate-of-return that are  assumed to be normally distributed - and when the returns are continuously compounded, a lognormal distribution results, not a linear distribution.",True
@injeel_ahmed,2019-11-12T09:59:07Z,0,Unable to import cross_validation from sklearn,True
@SirSelfunk,2019-11-05T16:11:57Z,0,But how can I predict the stock price for some days AFTER the last entry? Because in this example you remove some values from last days and try to predict them indead.,True
@andys-channel,2019-11-04T10:33:09Z,2,"I'm a little confused.  I was following along until you started to use X_lately.  If X_lately becomes the last (forecast_out) days, and then X becomes upto (forecast_out) days, you've reduced X samples, which will now differ to size of y samples.  You made the point earlier that the X and y samples should be the same size? Also if I understood the aim of this anyway, when you shifted to create 'label' you lost the last (forecast_out) entries as it needed to populate 'label' (tail shows this happening).  When predicting, don't you want to reset the dataframe so those lost X entries from shifting are what you're trying to predict (and plot) against? (what it trained against?)",True
@Neha-ks2mc,2019-10-12T10:59:27Z,0,Why are we using shift function only on the output variable keeping other input rows in same position? It is changing the Adj. close for other rows. Can you please explain it?,True
@nicobako573,2019-09-26T15:49:22Z,1,"You know that pandas has wonderful date-time functionality... Just convert the whole ""date"" column to date-time using: df[""date""] = pd.to_datetime(df[""date""])",True
@IT--rz3br,2019-09-23T18:57:47Z,0,can someone tell me why i am getting error using cross_validation? I read somewhere taht it no longer present in the new version of scikit learn. So it thats the case then what can i use instead?,True
@jairad2654,2019-09-16T21:27:22Z,3,"To everyone having problems with the data not predicting but rather repeating the last 30 days, the solution is to go to the the line that has .shift, and delete the negative sign in front of forecast_out. Then come down to df['Adj. Close'] and replace Adj.Close with label Cheers!",True
@eastwoodsamuel4,2019-09-11T11:22:54Z,0,"X = X[:-forecast_out] X_lately = X[-forecast_out:] I think X_lately must be found before X=X[:-forecast]",True
@careymain3036,2019-09-06T19:29:42Z,0,"I am getting issue found variable with inconsistent numbers of samples [1,310]  how can i resolve?",True
@dhananjaykansal8097,2019-09-01T20:50:01Z,0,Guys I'm getting this following error. Can anyone help 'ValueError: Cannot add integral value to Timestamp without freq.  df['Forecast'] = np.nan  last_date = df.iloc[-1].name last_unix = last_date.timestamp() one_day = 84600 next_unix = last_date + one_day  for i in forecast_set:     next_date = datetime.datetime.fromtimestamp(next_unix)     next_unix += one_day     df.loc[next_date] = [np.nan for _ in range(len(df.columns) - 1)] + [i]  df['Adj. Close'].plot() df['Forecast'].plot() plt.legend(loc=4) plt.xlabel('Date') plt.ylabel('Price') plt.show(),True
@huseyincansimsek9675,2019-08-22T13:56:08Z,0,Use comment line .This  may increase understandability.,True
@huseyincansimsek9675,2019-08-22T13:53:14Z,0,"I am taking an error.I used same dataframe at video.But I encountered an error.This error is 'ValueError: Found input variables with inconsistent numbers of samples: [3424, 2739]'.I suppose length of datas aren't appopriate.How can i arrange this data order?",True
@shinobi77,2019-08-13T21:34:56Z,0,"can you make prediction when you don't have features? if you want to predict the tomorrows prices, you just have 'date' and all the rest is empty.",True
@xavdest5481,2019-08-11T08:32:15Z,3,Putting X = X[:-forecast_out] actually broke my program. I take that line out and it runs. For some reason that line throws the numbers off so that there isn't consistent numbers of samples.,True
@Onur_Can8,2019-08-07T09:59:49Z,0,thank you for shared!,True
@gurkiratsingh9788,2019-07-29T18:07:00Z,0,"Please, anyone, help me in understanding the use of forecast_* variable and why using - sign before them  Thnx in advance",True
@Jayaug1998,2019-07-26T19:44:48Z,0,Can someone explain why we wrote  df[â€˜Forecastâ€™] =np.nan  How did the value go into it and why the nan?,True
@ajflorido,2019-07-22T16:26:26Z,0,did anyone check if that forecast was accurate?,True
@alan6506305,2019-07-11T13:36:19Z,0,"very good explanation on the for loop with the .tail illustration, thanks",True
@andreww406,2019-07-06T16:13:15Z,0,"hi!  ValueError: Found input variables with inconsistent numbers of samples: [35, 3389] I have this error",True
@Monnil46,2019-06-10T22:54:29Z,2,"Hey sentdex, great tutorial!  I just few logics to clarify regarding .fit() and .score() So, .fit(x,y) basically just draws a best fit line regarding the data points of x and y? And then once that is drawn we input any unknown x value and then we find the point in y axis, which is our prediction.  What happens in .score(x,y)? Do we plot a best fit line again regarding this x and y and then find the coeff of determination ? Please tell me where I am wrong because I am really confused how .fit() and .score() actually works",True
@kevinsherman5992,2019-06-09T23:49:28Z,0,"I keep getting the following error... any tips?   Traceback (most recent call last):   File ""C:/Users/thekm/AppData/Local/Programs/Python/Python37-32/regression intro.py"", line 34, in <module>     X_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size = 0.2)   File ""C:\Users\thekm\AppData\Local\Programs\Python\Python37-32\lib\site-packages\sklearn\model_selection\_split.py"", line 2096, in train_test_split     arrays = indexable(*arrays)   File ""C:\Users\thekm\AppData\Local\Programs\Python\Python37-32\lib\site-packages\sklearn\utils\validation.py"", line 230, in indexable     check_consistent_length(*result)   File ""C:\Users\thekm\AppData\Local\Programs\Python\Python37-32\lib\site-packages\sklearn\utils\validation.py"", line 205, in check_consistent_length     "" samples: %r"" % [int(l) for l in lengths]) ValueError: Found input variables with inconsistent numbers of samples: [3354, 3389]",True
@fr_schmidlin,2019-05-19T22:57:51Z,2,Did you notice that your forecast just nearly repeated the pattern of the last 30 days of the set?,True
@rkop737,2019-04-30T09:00:39Z,0,"To be honest, you are also cheating with df['label'], you are shifting it back. No wonder it gives you reasonable result.",True
@hueyliu9527,2019-04-25T04:37:18Z,0,What if I would like to add some financial indicators like dividend to forecast out the stock prices is it possible? How should I include it if possible?,True
@sherifmoussa4827,2019-04-15T16:30:21Z,1,"great work  I don't understand. what is ""preprocessing.scale(x)"" about? why we didn't write 'preprocessing.scale(df)' ?",True
@gowthamkumar6232,2019-04-08T01:53:10Z,9,"2019: pandas has many methods to extract sequential dates last_date = df.iloc[-1].name  dti = pd.date_range(last_date, periods=forecast_out+1, freq='D') index = 1 for i in forecast_set:     df.loc[dti[index]] = [np.nan for _ in range(len(df.columns)-1)] + [i]     index +=1 df.Adj_Close.plot() df.Forecast.plot() plt.legend(loc=4) plt.xlabel('Date') plt.ylabel('Price') plt.show()",True
@phamcuong3822,2019-04-01T08:18:15Z,4,"for example: we got 100 days of data, so the forecast_out = 10 so X includes first 90 days, X_lately last 10 days, and  y = df['label'] includes the last 90 days, so: We are training the model to predict the Adjusted Close for 10 days later, aren't we? Firstly I thought the model predict the next day's Adj. Close.",True
@HeavyMedal,2019-03-30T12:26:36Z,0,"hello guys, if you need free cloud server, you can click to below link and signup for free with my referal code and then you will get 100$ free credit to use in next 2 months in DigitalOcean, it is beneficial for both of us, you and me, thanks in advance :) @t",True
@shashibisht6878,2019-03-23T22:02:49Z,0,The data in which I am working on is yearly data and I dont know how to do the prediction in python. Please help :(,True
@subratode7086,2019-03-17T16:03:14Z,0,its showing that'timestamp'requires a 'datetime.datetime' object but getting'float',True
@fundatamdogan,2019-03-14T17:01:23Z,3,"when I write  X_train, X_test, y_train, y_test = model_selection.train_test_split(X, y,test_size=0.2) I get value ValueError: Found input variables with inconsistent numbers of samples: [462, 520] by the way I am using different data",True
@rohini.i.n.rohini.i.n.3068,2019-03-13T10:42:30Z,0,hello sir u are saying we can predict for future but how to predict for particular date if the user enter particular what operation should be carried out please say i a doing my project on these,True
@rohini.i.n.rohini.i.n.3068,2019-03-13T09:35:11Z,2,i am getting error  last_unix=last_date.timestamp()  AttributeError: 'numpy.int64' object has no attribute 'timestamp',True
@sarthakrungta7669,2019-03-03T05:24:28Z,0,"Guys, if you are having a problem understanding this video... check out this article... it will clear everything up: https://enlight.nyc/projects/stock-market-prediction/",True
@Tech_Doctor788,2019-02-28T17:33:51Z,0,Plz can u share link to download the dataset,True
@rrjishan,2019-02-14T14:52:59Z,10,why my accuracy value coming negative ?,True
@naveezalagarsamy9757,2019-02-14T13:50:25Z,0,Great tutorial man,True
@xiaoweidu4667,2019-02-07T06:22:50Z,1,"Too many mistakes, looks like he understands neither finance nor programming! Totally waste of time here!",True
@blacksiddis,2019-01-31T16:58:56Z,0,You got any videos on how to do rolling forecasts with scikit-learn?,True
@ngrobert5054,2019-01-24T07:14:51Z,0,"Hi Sentdex , I download Python 3.7.2 it have library problems how we resolve it  ImportError in importing from sklearn: cannot import name check_build",True
@shuhangzhan7249,2019-01-23T07:22:12Z,2,x_lately should be defined before the original x is changed ( x = x[:-forecast_out] ),True
@joojoo1020,2019-01-22T06:14:09Z,0,I do not fully understand what   last_date = df.iloc[-1].name last_unix = last_date.timestamp() does . I get Error : AttributeError: 'int' object has no attribute 'timestamp',True
@marylusenie3970,2019-01-21T01:38:33Z,0,"df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)] + [i]  my data is on yearly basis. when i typed this line i get this error ""  can't assign to function call"" pls any one with idea, how to fix this?",True
@debabratatah4887,2019-01-20T17:13:51Z,0,hey buddy can I use KNN for earthquake prediction except CNN?,True
@LEO-qw7xi,2019-01-09T17:58:52Z,0,"wish i was so smart, i could use that for lottery . all what i need is just one win, i have row with numbers 1,0,1,1,1,0,1,0,0,1,1,1,1 who is even longer if i look in history. is there any whey in excel what can help me find next number according of previous data, maybe there is some macro who can read  data and when it ends continue independently to make numbers according of previous data. Or you know better whey how i can get solution of this problem. hope you can help me.",True
@georgkreuzmayr2186,2019-01-09T13:11:36Z,3,"I have one question considering the timestamp. Because our Data is just collected every day from Monday to Friday. The timestamp for our forecast though is telling us that on Sunday we got a different Adj. Close (Forecast) value than on Saturday, which is not possible. I think you should exclude the weekend from the Timestamp.  Edit: I like your videos a lot! You are doing a great job! Thank you very much!!",True
@nackyding,2019-01-08T15:57:42Z,1,"This shit is VERY unorganized. Maybe should think about planning and design  instead of ""trying"" to code on the fly. This shit is silly.",True
@AmineOnline,2019-01-05T12:49:19Z,0,Meci,True
@JousefM,2018-12-31T20:49:56Z,0,I opened a repository for everyone who wants to go through the code step-by-step with some small explanations :)  https://github.com/jousefm/Machine-Learning-Sentdex  Twitter: https://twitter.com/Jousefm2 Instagram: https://www.instagram.com/jousefmrd/ ----- A sub would be great as well! Harrison motivated me to create me own Python series starting soon on my channel :),True
@dearheart2,2018-12-20T22:22:07Z,0,"I know AI is used in the stock marked for forecast. But Frankly, stock prices for me, is not predictable on prices only. If there is a long term stable period, yes, it makes some sense. But as the stock marked is heavily influenced on News, like court cases, announcement of revenues, takeover, product announcements, etc - it would only make sense when the model takes these external data into account. Btw, it would be helpful to show a graph/layout to what you are doing, instead of just numbers :)",True
@Schwalar,2018-12-20T09:14:47Z,0,"I'm a bit confused...  If I raise that 0.01 value to say 0.1 I thought that it was supposed to make a forecast longer into the future..? Instead, it's making the forecast up until the same date, but from further back in the past. Hope you get what I mean.  Any thoughts on this?  Love the playlist!",True
@k.alipardhan6957,2018-12-13T21:52:15Z,8,"code:   import pandas as pd import numpy as np import math ,datetime from sklearn import preprocessing, cross_validation , svm from sklearn.linear_model import LinearRegression  import quandl  import matplotlib.pyplot as plt from matplotlib import style   style.use('ggplot')  # cant indent as a formating device... i hate python   df = quandl.get('WIKI/GOOGL') df = df[['Adj. Open','Adj. High','Adj. Low','Adj. Close','Adj. Volume']] df['HL_PCT'] = (df['Adj. High'] - df['Adj. Close']) / df['Adj. Close'] * 100.0 df['PCT_change'] = (df['Adj. Close'] - df['Adj. Open']) / df['Adj. Open'] * 100.0  df = df[['Adj. Close','HL_PCT','PCT_change','Adj. Volume']] forecast_col = 'Adj. Close' df.fillna(-99999, inplace=True) forecast_out = int(math.ceil(0.01*len(df))) df['label'] = df[forecast_col].shift(-forecast_out)  #  x = np.array(df.drop(['label'],1)) x = preprocessing.scale(x) x_lately = x[-forecast_out:] x = x[:-forecast_out]  df.dropna(inplace=True) y = np.array(df['label'])  x_train, x_test, y_train, y_test = cross_validation.train_test_split (x , y, test_size=0.2) clf = LinearRegression(n_jobs=-1) #multithreading  clf.fit(x_train, y_train) accuracy = clf.score(x_test,y_test)    forecast_set = clf.predict(x_lately)  print(accuracy) print(forecast_set, accuracy)  df['Forecast'] = np.nan  last_date = df.iloc[-1].name last_unix = last_date.timestamp() one_day = 86400 next_unix = last_unix + one_day  for i in forecast_set:     next_date = datetime.datetime.fromtimestamp(next_unix)     next_unix += one_day     df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)] + [i]      df['Adj. Close'].plot() df['Forecast'].plot() plt.legend(loc=4) plt.xlabel(""Date"") plt.ylabel(""Price"") plt.show()",True
@aes9217,2018-12-11T05:08:55Z,27,"one line ""for"" totally deadlocked me... c programmer here",True
@arjunm.r8641,2018-11-28T13:34:48Z,0,Anybody please explain data flow diagram for prediction model?any one please give me a reply,True
@charlesdarwin7572,2018-11-24T16:55:37Z,0,My prediction doesn't predict the future it just  predicts the existing prices,True
@hansmeier340,2018-11-22T07:24:37Z,0,"Dear Python beginners. If you are confused by this video, don't be sad. It's the video's fault.",True
@TheGamerGuy201,2018-11-11T14:50:17Z,0,Didnt understand anything after 7 minutes...i think that using stock prediction model is making the ML parts way too complicated then they actually are...,True
@yxt8959,2018-11-09T19:56:59Z,0,"Hi, why just preprocess X not y?",True
@lizhi101289,2018-11-09T10:08:12Z,0,"Spend one afternoon understand the prediction in this video, my understanding is that it does predict future price but is super inaccurate. The reason being that we are using Adj. Close, HL_PCT, PCT_change, Adj. Volume, to predict next 30 days Adj. Close, and we are using LinearRegression. The predict value will be highly related to current Adj. Close, and plot are almost similar between latest 30 day plot and future 30 day plot.",True
@majtales,2018-10-29T02:12:01Z,0,"will ""df.loc[nex_date] "" only change the format of last 30 indexes from 'year-month-day' to 'year-month-day 1:00:00' or it happens to all rows?",True
@satheeshkrishnankannaiyan5577,2018-10-25T16:05:02Z,0,"Hi Everyone, Have anyone encountered this error?  X_train, X_test, y_train, y_test = model_selection.train_test_split(X,y, test_size=0.2) ValueError Found input variables with inconsistent numbers of samples: [5, 441]  Need your help..",True
@gfigc11,2018-10-22T02:17:05Z,0,"Please help me with this error. I can't understand how to remove it. ValueError                                Traceback (most recent call last) <ipython-input-1-6937785a0d15> in <module>      68     next_date = datetime.datetime.fromtimestamp(next_unix)      69     next_unix += one_day ---> 70     df.loc[next_date]=  [np.nan for _ in range (len(df.columns)-1)]+i      71       72 df['Last'].plot()  ~\Anaconda3\lib\site-packages\pandas\core\indexing.py in __setitem__(self, key, value)     187             key = com._apply_if_callable(key, self.obj)     188         indexer = self._get_setitem_indexer(key) --> 189         self._setitem_with_indexer(indexer, value)     190      191     def _validate_key(self, key, axis):  ~\Anaconda3\lib\site-packages\pandas\core\indexing.py in _setitem_with_indexer(self, indexer, value)     443                         if is_list_like_indexer(value):     444                             if len(value) != len(self.obj.columns): --> 445                                 raise ValueError(""cannot set a row with ""     446                                                  ""mismatched columns"")     447   ValueError: cannot set a row with mismatched columns",True
@jaydeepdholakia,2018-10-16T07:45:40Z,0,"Hey HI in the code below:   last_date = df.iloc[-1].name last_unix = last_date.timestamp() one_day = 86400 net_unix = last_unix + one_day  on the ""last_unix = last_date.timestamp()"" I am getting error: 'numpy.int64' object has no attribute 'timestamp' I am using Python 3.6.5. Need help please.",True
@sanaed7740,2018-10-08T18:00:07Z,0,"I'm confused about something. After we set the X and X_lately, what is the use of df.dropna since we don't use the df anymore but X and X_lately instead? And also the length of X is in this case smaller than the length of Y. Isn't that a problem?",True
@ark9983,2018-09-26T05:30:05Z,2,"While this tutorial is very informative and intriguing, I would still like to point out that using OLS on auto-correlated time series data is an extremely bad idea. You'll find that for a stock with rather low volatility, over 95% of the future value can simply be explained by the current close price. If you were to check the clf.coef_, the coefficient of Adj. close will be basically 1 with sky high t value, which in turn means that the model fit basically has no predictive power whatsoever.",True
@dishantrathi9145,2018-09-20T07:17:34Z,0,"Whats the problem, not showing the prediction line(Blue) on the graph and also dates are missing on X-Axis. Python 3, Jupyter Notebook :  https://github.com/dishantrathi/Analysis-And-Prediction-Of-Stock-Prices/blob/master/Linear_Regression_BajajFin%20Graph(fix).ipynb",True
@changumangu4660,2018-09-15T13:30:54Z,0,Please correct me if Im wrong  We are predicting the label values not not directly the adj_close . These forecast values are those values of label that were Nan  Label itself is the adj_price 30 days in the future thats why we cant see some future date . forecast value at 26th feb 2016 is the label values of 26th feb 2016 which is the adj_close price of 26th march.,True
@masoodshaik1248,2018-09-13T07:39:31Z,0,"UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.   % get_backend())",True
@helpinghandalways,2018-09-11T05:10:30Z,0,Sir plz make a math video on machine learning with it's formula.... .thanks a lot u sir,True
@arpita0608,2018-08-29T12:36:30Z,0,I want to do same using c language.help i am a beginner,True
@pragungandotra4744,2018-08-13T12:27:35Z,0,can you please explain df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)] + [i] if how can i(integer value) be added to NAN,True
@shoebmoin10,2018-08-09T09:27:19Z,0,You are making a simple concept very complicated with all the extra stuff,True
@sasho303,2018-08-03T01:02:11Z,1,"Sentdex - thank you for this video. I am getting a little confused on the last_unix = last_date.timestamp(). Could you explain what you are doing here because I am getting an error saying ""'numpy.int64' object has no attribute 'timestamp'""",True
@debanjandey64,2018-08-02T19:50:50Z,0,"Hello sir,  In the step :   X = np.array(df.drop(['label'],1)) X = preprocessing.scale(X) X_lately = X[-forc_out:] X = X[:-forc_out] df.dropna(inplace=True) y = np.array(df['label']) y = np.array(df['label'])  I got this error :  ValueError: Found input variables with inconsistent numbers of samples: [868, 877]   {My dataset is different}  Which got corrected by  y = np.array(df['label'][:-forc_out])  Am I going wrong?",True
@Daniel-to5jd,2018-07-28T21:32:34Z,0,"I am learning machine learning and about finances, two dead birds with a single shot, fuck yeah, thanks sentdex",True
@daitavan297,2018-07-25T13:44:48Z,0,Here how we can compare to the actual data and do backtesting. Thanks,True
@mcgil8891,2018-07-24T08:41:27Z,2,'Timestamp' object is not callable.   HELP pleaseeeâ€¦â€¦. I've tried everything.,True
@aishgopalia5966,2018-07-16T15:36:08Z,1,"I am not able to run my file it says  Traceback (most recent call last):   File ""C:/Users/Aish/AppData/Local/Programs/Python/Python37-32/ML3.py"", line 37, in <module>     x_train, x_test, y_train, y_test = cross_validation.train_test_split(x,y,test_size=0.2)  and then at last ValueError: Found input variables with inconsistent numbers of samples:  [3423, 1]",True
@sudhanshukumar-yu7fj,2018-07-11T17:50:12Z,22,"bhai! too difficult to understand your videos, you must first explain what u really want to do!!!",True
@davidpark2403,2018-07-11T16:53:07Z,0,"By Redefining the Forecast column as nan, he used the new attribute as a looping mechanism for displaying the ""future"" predicted values stored in forecast_set. I understood the logic fairly but I can't comply with the technical jargon regarding the dates at the interlude. Can anyone  give me a brief explanation about its premises...",True
@almirneto1294,2018-07-08T18:34:48Z,1,"X = np.array(df.drop(['label'], 1)) X = preprocessing.scale(X) X_lately = X[-forecast_out:] X = X[:-forecast_out]  df.dropna(inplace=True)  y = np.array(df['label'])  X_train, X_test, y_train, y_test = cross_validation.train_test_split(X, y, test_size=0.2) clf = LinearRegression(n_jobs=-1) clf.fit(X_train, y_train) confidence = clf.score(X_test, y_test) print(confidence)  return this error:  Found input variables with inconsistent numbers of samples: [3354, 3389]  i change y for y = y[:-forecast_out] and works, am i right about this? if yes the site code is wrong! https://pastebin.com/af9yssWJ (the traceback)",True
@devanshsingh2659,2018-07-07T04:32:51Z,0,Hey what changes should be made to make temperature prediction system using linear regression?,True
@lxxmi_,2018-06-28T14:02:43Z,0,"what to do when you are out of quadl requests :(  I ran my code lot of times to check what every line means and now i'm stuck , is there any way to download that dataset offline and access it?",True
@shreyashmehta7885,2018-06-25T07:12:39Z,3,for i in forecast_set:     next_date=datetime.datetime.fromtimestamp(next_unix)     next_unix+=one_day    df.loc[next_date]=[np.nan for _ in range(len(df.columns)-1)]+[i]   please explain me this piece of code again??,True
@patrickzhang6392,2018-06-25T05:47:16Z,1,"I get this error whenever I tried to run the code ever since we introduced plot.  This application failed to start because it could not find or load the Qt platform plugin ""windows"" in """".  Available platform plugins are: direct2d, minimal, offscreen, windows.  Reinstalling the application may fix this problem.   I did a clean install of Anaconda and changed the PATH var but it still did not fix the issue.",True
@VicPunai,2018-06-19T22:37:12Z,2,You're literally the most useful and understandable ML teacher on Youtube holy crap,True
@tafribaaz_ashwani,2018-06-16T20:59:03Z,1,"hi, I have a little doubt. When I ran this whole code on my pc with the same data, my accuracy was not fluctuating like it was in the video. I was always getting the same accuracy of 99.987 something. On the other hand, while Sentdex was running the same program, his accuracy was different every time. Why is that?",True
@RohitRameshStrikesAgain,2018-06-12T05:02:34Z,0,"Can someone please take a look into it? This is the error I get when I run it.  Traceback (most recent call last):   File ""2.py"", line 5, in <module>     df = quandl.get('WIKI/GOOGL')   File ""/usr/local/lib/python2.7/dist-packages/quandl/get.py"", line 48, in get     data = Dataset(dataset_args['code']).data(params=kwargs, handle_column_not_found=True)   File ""/usr/local/lib/python2.7/dist-packages/quandl/model/dataset.py"", line 47, in data     return Data.all(**updated_options)   File ""/usr/local/lib/python2.7/dist-packages/quandl/operations/list.py"", line 14, in all     r = Connection.request('get', path, **options)   File ""/usr/local/lib/python2.7/dist-packages/quandl/connection.py"", line 36, in request     return cls.execute_request(http_verb, abs_url, **options)   File ""/usr/local/lib/python2.7/dist-packages/quandl/connection.py"", line 44, in execute_request     cls.handle_api_error(response)   File ""/usr/local/lib/python2.7/dist-packages/quandl/connection.py"", line 61, in handle_api_error     error_body = cls.parse(resp)   File ""/usr/local/lib/python2.7/dist-packages/quandl/connection.py"", line 57, in parse     raise QuandlError(http_status=response.status_code, http_body=response.text) quandl.errors.quandl_error.QuandlError: (Status 403) Something went wrong. Please try again. If you continue to have problems, please contact us at connect@quandl.com.",True
@joshuaronisjr,2018-06-04T11:44:54Z,0,"thank you, awesome series!",True
@joshuaronisjr,2018-06-04T11:44:28Z,0,@Minjun Kim It doesn't even matter... I like it better this way because then I can actually compare my predicted values against the actual closing prices. Whats the point of predicting one month into the future for a learning exercise when you can never even test wether or not you were correct? This is awesome!,True
@MOHDMUJTABA1,2018-05-30T10:25:34Z,0,what does this line doing? data['label']=data[forecast_col].shift(-forecast_out);,True
@HarshitSingh-tg9yv,2018-05-21T11:31:04Z,0,In the line;  last_unix = last_date.timestamp() there's an Attribute error: 'str' object has no attribute 'timestamp' someone help out please !,True
@rasheedb4,2018-05-08T10:26:34Z,0,"For anyone using a dev environment with no GUI: use ""plt.savefig('filename.png')"" instead of plt.show()",True
@ansiruddin6719,2018-04-11T21:25:05Z,0,i dont understand how the  Forecast column get populated with forecasted or predicted data?,True
@mayankrathore4700,2018-04-08T16:18:32Z,0,I'm getting Adj.close as a key error (2 occurances)   can you help.  df.tail is printing alright though,True
@aadargupta,2018-04-01T06:39:37Z,0,My graph says plt does not exist,True
@robertaradi9994,2018-03-27T15:20:41Z,1,"I don't understand a single word about that nasty date stuff. Other than that, great video! :)",True
@pentekimi,2018-03-24T16:49:29Z,0,basically daylight saving means we have two days in a year not consisting of 24 hours it's just something that could break this code,True
@wthered,2018-03-24T14:29:48Z,0,Is there any github repo so we can copy/paste the code?,True
@getertube1863,2018-03-20T12:13:48Z,0,"this is good tutorial. I want to read it in pdf. any one please tell me, How I get pdf file of this tutorial.",True
@ofekturgeman7649,2018-03-17T10:50:10Z,0,"I'm sorry but your code looks awful Please, just read PEP8 and overall sont call your variables in shortend names or arbitrary names.",True
@MarkoNiinimaki,2018-03-16T08:53:40Z,0,"Wouldn't it be easier (and more clear, code-wise) to iterate over forecast_set by i, then use another data frame, put the date as its first column, then copy Adj. Close and Forecast from df?",True
@yashmishra2671,2018-03-11T16:13:53Z,1,"Hi All, Please help me with the below error.  Error: last_unix = last_date.timestamp AttributeError: 'numpy.int64' object has no attribute 'timestamp'",True
@BrianKeeganMusic,2018-03-11T03:02:35Z,0,"I'm not understanding this really in the scope of machine learning theory. Where are the input, output, and hidden layers? Is there an activation function? I don't quite get it.",True
@sathishsridhar8611,2018-03-05T07:40:03Z,0,df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)] + [i] appends the forecast_set values to the new data which is create when not present or getting replaced but i want the values of the forecast set to be appended with the pre exsisting dates only how to do that ? Anyone please ?,True
@mihirranade3445,2018-03-04T12:47:18Z,0,"Guys! I am making a fantasy football predictor as my project. I want to predict total_points scored by a player in the coming game week. How can I do this using Linear Regression?  Example : Consider a player - Lukaku. Suppose for Lukaku, I have data for 28 game weeks and I want to find out how many points would Lukaku score for 29th game week(consider factors like goals scored, assists, minutes played, etc).  I had thought about implementing Linear Regression for which I can train the model for 28 game weeks but then I dont know how or what should be my input for the 29th week so as to predict points for that week.",True
@GoldPhoenix99,2018-03-01T18:16:00Z,0,"Unix typically refers to an operating system.  What am I supposed to be gleaning from the ""last_unix"" naming?  I've looked a bit online and can't find anything.",True
@ronifintech9434,2018-02-18T06:06:19Z,0,"Hi,  Thanks for the series! Question... wouldn't it make more sense to run 'preprocessing.scale' on X_train instead of X? Theoretically, we don't know x_test when we train the model, right?",True
@arsnakehert,2018-02-14T11:36:57Z,1,"I am *_impressed_* at how good this is at predicting, I just ran the prediction for 30 days that already passed and compared the curve to the actual one shown in Google, and it's exactly the same curve, the only problem is it got skewed in such a way that it predicted the exact same time span as the last known date until now, but as if it were the last known date until half a month ago, I'm not even sure how that's possible",True
@amitvishwakarma2625,2018-02-10T11:48:06Z,0,'numpy.int64' object has no attribute 'timestamp,True
@AmmarTaicho,2018-02-09T17:25:18Z,0,"Maaaan, this company is great. i did this code in 2018 and the price of the stock exceeds  1000 XD",True
@abhisheksawant5870,2018-01-20T06:59:51Z,0,"I have a suggestion instead of writing for loop we can save a subset of df before dropping NAs predicting_set = df[-forecast_out:] then we can create forecast column in predicting_set  as  predicting_set['forecast'] = forecast_set  and assign our forecasted values to that column set other column as nan and append df and predicting _set df = df.append(predicting_set)  summary: predicting_set = df[-forecast_out:] #before dropping na predicting_set['forecast'] = forecast_set predicting_set[['Adj. Close', 'HL_PCT', 'PCT_change', 'Adj. Volume', 'label']] = np.nan df = df.append(predicting_set)",True
@vidhayakji5532,2018-01-17T10:07:12Z,8,"it shows an error"" ValueError: Found input variables with inconsistent numbers of samples: [3333, 3337]"" need a bit of urgent help please.",True
@benjaminjaton3597,2018-01-15T22:34:11Z,1,"If anyone is interested, here is a version of this algorithm with a few changes: https://github.com/benji/sentdex-regression-forecasting-and-predicting",True
@benjaminjaton3597,2018-01-15T05:46:47Z,0,"Just a note: the algorithm assumes that there is 1 data point per day, but there are holes in the dataset. For example, there are no data for 2004-08-28.",True
@nanthilrodriguez,2018-01-13T20:35:28Z,0,Mutation... Mutation EVERYWHERE,True
@sangamesh__ak7990,2018-01-10T07:26:32Z,0,"Any method to predict  future price , so that I can compare the predicted price with the Google stock in price",True
@sangamesh__ak7990,2018-01-10T07:25:27Z,1,How to predict the future price,True
@shaunsawyer8298,2018-01-07T20:04:18Z,0,"I worked through this example, I believe doing everything properly, and it seems as though for a given day i, the predicted closing price for day i+30 will be very close to the price for day i, which I suppose makes sense.  Also, training an SVR model instead using a linear kernel seemed to be giving the same level of accuracy, so I'm not sure where the issue lies in the video.   A final point, when making predictions using a model where the data was preprocessed before hand, we should also be preprocessing any new data to be classified with the SAME parameters. That is, we need to keep track of the mean and variance of the data the model was trained on, and then transform any new data with that particular mean and variance. You can do this using sklearn.preprocessing.StandardScaler as follows:  scaler = StandardScaler() scaler.fit(X)  # will store the mean and variance as attributes X_normalized = scaler.transform(X) # train your model with X_normalized # hack hack hack ... # Some new data X_predict appears! X_predict_normalized = scaler.transform(X_predict)  # and now feed this into the trained model",True
@noneyabi8815,2018-01-02T04:27:48Z,0,"When you have a min can you please post the right code in the comments please,  I have been working on it all day and can't get it to work.",True
@noneyabi8815,2018-01-02T04:01:55Z,7,Hey did you ever get this to work I'm trying to figure it out and can't forecasting only to the current date.,True
@AlecuCristian,2017-12-21T10:28:47Z,2,"Hello, thank you for the teaching, this was a great learning. I still believe there is a mistake in the concept, I did the following test: 1. Save the original/unprocessed data that we use for input 2. Remove the last days from the original data (assume you don't have them few days ago) 3. Run your algorithm to ""Re-predict"" the last days 4. put the prediction on graphic together with the original ""Real"" data to compare The ""re-prediction"" of the last days looks quite unrealistic, please could you validate my testing and give us an opinion? I put here the code I use (check inside to see what is actually ""predicting""):  import pandas as pd import quandl import numpy as np import math import datetime from sklearn import preprocessing, cross_validation, svm from sklearn.linear_model import LinearRegression    import matplotlib.pyplot as plt  from matplotlib import style import pickle  style.use('ggplot')  df = quandl.get('WIKI/GOOGL')  # get historic of a stock  df[""HL_PCT""] = ((df[""Adj. High""] - df[""Adj. Close""]) / df[""Adj. Close""]) * 100     # High / Close Percentage df[""PCT_change""] = ((df[""Adj. Close""] - df[""Adj. Open""]) / df[""Adj. Open""]) * 100  # Close/Open Precentage df=df[[""Adj. Close"",""HL_PCT"",""PCT_change"",""Adj. Volume""]]  forecast_col = ""Adj. Close"";        # the real value  df.fillna(-99999, inplace = True) forecast_out = int(math.ceil(0.01*len(df)))  df0 = df[[""Adj. Close"",""HL_PCT"",""PCT_change"",""Adj. Volume""]]  # keep a copy of original data df = df[:-forecast_out]                                       # remove the last days                       df[""label""] = df[forecast_col].shift(-forecast_out)  # Value in the future (1% of the whole period) ~ 34 days                                                      # so we are training the machine to predict 34 days in the future print (forecast_out, df.tail(50))  x = np.array(df.drop(['label'], 1))  # columns without label  y = np.array(df['label'])            # array from column label  x = preprocessing.scale(x)           # scaling x_lately = x[-forecast_out:]         # remove rows without training data x = x[:-forecast_out] df.dropna(inplace=True)              # remove rows without training data y = np.array(df['label'])    clf = LinearRegression()              clf.fit(x, y)                        # machine learn self train to model the known behave forecast_set = clf.predict(x_lately) # run for last days (untrained input)   df['Forecast'] = np.nan d = df0.index.values dates = d[-forecast_out:]            # these are the days you assume is predicting  # ??????????????????????????????????????????????????????????????????????????????????????????? # dates = d[-forecast_out*2:]        # these are the days that is actually predicting (uncomment to see) # ???????????????????????????????????????????????????????????????????????????????????????????  for i in range(len(forecast_set)):     df.loc[dates[i]] = [np.nan for _ in range(len(df.columns)-1)] + [forecast_set[i]]  print(df.tail(50), forecast_set)      df0[""Adj. Close""].plot() df['Forecast'].plot() plt.legend(loc=4) plt.xlabel(""Date"") plt.ylabel(""Price"") plt.show()  y = 0  #breakpoint here",True
@VikkiDestroyer,2017-12-10T14:35:50Z,0,When i did  last_date = df2.iloc[-1].name last_unix  = last_date.timestamp() I got the ''numpy.int64' object has no attribute 'timestamp'' error. can anyone  help ??,True
@SauravAgrawalBIT,2017-11-30T17:26:18Z,96,"Everything goes fine for sometime but then he introduces date , time ,timestamp and unix .",True
@rohanvb6589,2017-11-26T09:35:35Z,0,"This is where I reached my limit of 50 calls on Quandl per day.  Add `quandl.ApiConfig.api_key = ""YOUR_KEY_HERE""` to your code after registering and head on over to https://www.quandl.com/account/api to get your key.",True
@sunxiaoyun235,2017-11-20T07:59:25Z,1,"another way to handle date time in x-axis, Python 2.7  from datetime import date, timedelta ... ... ... for i in forcast_set:  last_date += timedelta(days=1)  df.loc[last_date] = [np.nan for _ in range(len(df.columns) - 1)] + [i]",True
@boumelhaadam3681,2017-11-18T21:19:05Z,0,"Hey thanks for the helpful tutoriel i have a question please  , how can we zoom in and out in the ploting of the data in order to have a more precise look at the forecast",True
@titus1045,2017-11-16T13:43:39Z,0,"@sentdex Hi, I really enjoy your videos! I don't really understand why this is machine learning though. Aren't we just using regular linear regression? What is our programm learning? Thanks, keep up the good work! :)",True
@electricmike1161,2017-11-13T21:15:03Z,0,"Just got through this video and got a prediction graph for GOOGL.  My generated graph, from 9/26/17 to 10/24/17, looks EXACTLY like the 3 month chart. The only different is the date. The generated graph patterns occur 10 days later than what the market data shows.  Is this part of the imperfect accuracy? Or does this come from the data we're using?  I'm seeing that the generated prediction chart doesnt predict up to today's date, or passed it.  You mentioned that we aren't actually using the dates of the real data, so are the dates just off?  I'd be happy to send screen caps.",True
@bretgodwin2483,2017-11-11T17:43:41Z,0,you should use jupyter as it is a great teaching tool and then you can easily graph your results which make it much easier for people to visualize,True
@asimmalik1487,2017-11-05T14:06:49Z,0,"can someone help me graph is not showing forecasting.  here is my code if some thing wrong plz help me sentdex import quandl, math, datetime import numpy as np from sklearn import preprocessing, svm,  model_selection from sklearn.linear_model import LinearRegression import matplotlib.pyplot as plt from matplotlib import style style.use('ggplot') df = quandl.get('WIKI/GOOGL') df = df[['Adj. Open','Adj. High','Adj. Low','Adj. Close','Adj. Volume']] df['HL_PCT'] = (df['Adj. High'] - df['Adj. Close']) / df['Adj. Close'] * 100.0 df['PCT_change'] = (df['Adj. Close'] - df['Adj. Open']) / df['Adj. Close'] * 100.0 df = df[['Adj. Close','HL_PCT','PCT_change','Adj. Volume']] forecast_col = 'Adj. Close' df.fillna(-9999, inplace=True) forecast_out = int(math.ceil(0.01*len(df))) print(forecast_out) df['label'] = df[forecast_col].shift(-forecast_out)  X = np.array(df.drop(['label'], 1)) X = preprocessing.scale(X) X = X[:-forecast_out] X_lately = X[-forecast_out:] df.dropna(inplace=True) y = np.array((df['label'])) y = np.array(df['label'])  X_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=0.2) clf = LinearRegression(n_jobs=-1) clf.fit(X_train, y_train) accuracy = clf.score(X_test, y_test) forecast_set = clf.predict(X_lately) print(forecast_set, accuracy, forecast_out) df['Forecast'] = np.nan last_date = df.iloc[-1].name last_unix = last_date.timestamp() one_day = 86400 next_unix = last_unix + one_day  for i in forecast_set:     next_date = datetime.datetime.fromtimestamp(next_unix)     next_unix += one_day     df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)] + [i]     df['Adj. Close'].plot()     df['Forecast'].plot()     plt.legend(loc=4)     plt.xlabel('Date')     plt.ylabel('Price')     plt.show()",True
@NamanGupta1997,2017-11-02T13:41:16Z,0,"When you are plotting the graph , shouldn't we plot df['label'] and df['Forecast'] together as these are the forecast set instead of df['Adj. Close'] and df['Forecast']",True
@AvtarSingh-ml3yx,2017-10-30T16:29:34Z,0,"I've already installed scikit library but tried a lot to install scipy, it's not happening. Moreover in this program we're not even importing scipy, scikit still its giving this error.  Traceback (most recent call last):   File ""D:/S O F T W A R E S/Tecnical Stuff/AI, ML, DL/Linear_Regresion_01.py"", line 4, in <module>     from sklearn import preprocessing, cross_validation   File ""C:\Users\SINISTERRAPIST\AppData\Local\Programs\Python\Python35\lib\site-packages\sklearn\__init__.py"", line 134, in <module>     from .base import clone   File ""C:\Users\SINISTERRAPIST\AppData\Local\Programs\Python\Python35\lib\site-packages\sklearn\base.py"", line 11, in <module>     from scipy import sparse ImportError: No module named 'scipy'",True
@memansi0007,2017-10-17T12:25:13Z,0,Can anyone please tell me how the graph is picking up dates? We just mention dates in xlabel and we are not fectching any date from dataframe index.,True
@maximilianbetz7380,2017-10-09T18:54:03Z,0,"I don't quite get why the predicted values are not lined up. You are using Linear Regression, which should produce a best fit line. Shouldn't all the predicted values be on this best fit line?",True
@percyygaming,2017-10-07T04:35:41Z,0,What's difference between loc and iloc ?,True
@rajeevranjan5358,2017-09-25T23:55:30Z,0,how to add more data on pre-trained regression model ?,True
@ottogutierrez,2017-09-23T20:05:50Z,1,"hey @sentdex, I don't understand why you have two lines of code which are the same back to back. I'm talking about the following line: y=np.array(df['label']) Thanks!",True
@dudebro4421,2017-09-21T22:05:17Z,0,"does anyone know how to fix this error??   ValueError: Found input variables with inconsistent numbers of samples: [33736, 33738]",True
@nikhilkamath7851,2017-09-05T16:57:25Z,0,Hello there! X_lately= X[-forecast_out:] last forecast columns till the end. Can any one there explain to me why we are predicting the forecast of last 33 rows while we already have it in label. Aren't we suppose to go out of the boundry of the data set +by the forecast . Can anyone simly explain me this? OR is it so that I am giving last 33 days and getting +33days of post boundary value and ignoring the label of last but 33.I hope this is correct,True
@konarktheconspirator,2017-09-05T14:31:00Z,0,'Timestamp' object has no attribute 'timestamp' error in python',True
@rossfrankenfield8591,2017-09-02T21:10:35Z,0,hey there. does anybody know how to manipulate sentdexs code to show the graph in a day to day and not every other year,True
@rollieize,2017-08-28T12:13:53Z,0,Loving this series by the way!,True
@machinelearningcentre334,2017-08-24T19:51:19Z,0,Graph plot portion was not clear...How to get it.,True
@throwaway6655,2017-08-18T01:33:45Z,0,"sentdex, when will this be addressed in the series?",True
@dude2260,2017-08-09T12:26:39Z,1,for me df.iloc[-1].name is co ming as string so not able to use . timestamp () what to do,True
@DarkLyrist,2017-08-06T09:33:17Z,7,"I know its a bit late, but this program is NOT a prediction of stock price one month in the figure. Because you are feeding ""future"" prices as label into algorithm, the machine learning algorithm pretty much found out that you just shift the prices 0.01*len into the past lol",True
@daniz001,2017-08-02T06:41:56Z,0,it should be import quandl not Quandl.  import Quandl gives an error,True
@janiobachmann5029,2017-07-27T22:39:09Z,1,"Hello Everyone, Can someone explain me why ifthis is a forecast my data is shown in the past prices section. For instance, If I am trying to predict based on price fluctuations taking the last 1% of my data (Last 33 rows). Why when I print(df.tail()) I get the last 5 values of my Forecast in a date that is already established in my dataframe. When I get the dataframe through quandl I get my data on the current date which is July 27, 2017. However, my last 5 rows in the forecast column appear from July 8, 2017 - July 12, 2017. If this is forecast why does it appear in past dates rather than in future dates. Thanks for the help I just want to clarify this and to check if I am right or wrong. Have a good day everyone.",True
@bhtruongify,2017-07-24T01:45:32Z,7,"I was getting an ""AttributeError: 'numpy.int64' object has no attribute 'timestamp', but this was because I was using quandl code ""WIKI/PRICES"", which doesn't index the rows by the dates.  To get around this make sure you have these lines: df = quandl.get_table('WIKI/PRICES', ticker='GOOGL') df.set_index('date', inplace=True)",True
@choychokheng1944,2017-07-21T14:05:43Z,0,I am coming out this error using ananconda python: last_unix = last_date.timestamp()  AttributeError: 'numpy.int64' object has no attribute 'timestamp' So how can I solve it? Thank You,True
@rishabhgpt3,2017-07-20T14:19:52Z,3,my 2 cents : you didn't take account of day when stock market is closed :) so for some people output may show few extra days and latest dates missing,True
@KCEmenike,2017-07-16T08:57:35Z,2,Please I'm finding a bit of difficulty in understanding this line df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)] + [i]  Any help please?,True
@Indraw705,2017-07-15T16:47:29Z,0,why this code is not working on NSE data I tried NSE:YESBANK  but did not worked,True
@revanttiwari4669,2017-07-15T09:44:28Z,5,for i in forecast_set:     next_date = datetime.datetime.fromtimestamp(next_unix)     next_unix += 86400     df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)]+[i] i am having a hard time understanding this ...please help,True
@AvengerIl,2017-07-11T15:40:54Z,0,"That last line is a bit scary at first, perhaps better to write as: df.loc[next_date] = [np.nan,np.nan,np.nan,np.nan,np.nan,i];",True
@rbk9758,2017-07-09T10:52:48Z,0,can you give some information about wind forecasting using tensorflow,True
@puneethb6175,2017-07-02T11:39:04Z,0,"Could someone give me like a broad summary of what is happening here? Specifically starting from X[:-forecast_out]. Like I feel like I have a general idea of what is happening but itd be great if someone were to confirm what I'm thinking. Also, I feel like a summary could be great for future viewers who may be confused as well. Thank you for your help :D",True
@bellasun3820,2017-07-01T05:22:46Z,0,"hi sentdex: as I used type(next_date), it shows inext_date) is float .  shouldn't timestamp be a string? so I'm very confused. forward for your replying.",True
@skythianz,2017-06-24T09:20:42Z,0,which IDE is he using ?? How is it printing the output as hits the enter ? how can we do this in anaconda ?,True
@datascientist9289,2017-06-22T19:44:09Z,0,Why is he importing pandas anyway? he hasnt used it so far,True
@t.b.m.5718,2017-06-19T01:12:43Z,0,"Turns out you might need a Qundl account to access WIKI/GOOGL data, I was running into problems when i wasn't logged in which is concerning considering that the IDE console knows whether or not your are logged in to qundle :o",True
@dynamicbdg2123,2017-06-13T02:59:47Z,0,"i am trying import from csv file not from quandl.get(""WIKI/GOOGL""), i got problem 'numpy.int64' object has no attribute 'timestamp'. On last_unix = last_date.timestamp()................Can you help me?",True
@iyrfify,2017-06-09T06:13:20Z,0,Did anyone have forecast values dip significantly from the previous label values? Example:  My data was labeled until 4/21/17 and the label (price after 30ish days) was 1004. The first forecast values my prediction gave (forecast value for 4/22) was 894. Does anyone know why there is this dip?,True
@achintyatiwari7723,2017-06-07T21:39:51Z,5,"working code>>   ====================================================================================================== import pandas as pd import numpy as np import quandl import math, datetime from sklearn import preprocessing,cross_validation,svm,linear_model import matplotlib.pyplot as plt from matplotlib import style style.use('ggplot') quandl.ApiConfig.api_key = 'xbPnXMAxKyEVqwzW9TWv' df  = quandl.get_table('WIKI/PRICES') print(df.head()) df['HL_PCT'] =(df['adj_high']-df['adj_close'])/df['adj_close'] * 100.0 df['PCT_change'] =(df['adj_close']-df['adj_open']) / df['adj_open'] * 100.0 df = df[['adj_close','HL_PCT','PCT_change','adj_volume']] forecast_col = df['adj_close'] forecast_out = int(math.ceil(0.001*len(forecast_col))) df['label'] = forecast_col.shift(-forecast_out) df.dropna(inplace=True)  X=np.array(df.drop(['label'],1))#,'adj_close'],1))  X=preprocessing.scale(X) #print(""X after preprocessing.scale "",X) X_lately = X[-forecast_out:] #print(""X_lately"",X_lately) X=X[:-forecast_out]  #print(df) #print(""X"",X) Y=np.array(df['label']) #Y=preprocessing.scale(Y) Y=Y[:-forecast_out] #print(""Y "",Y)  x_train,x_test,y_train,y_test=cross_validation.train_test_split(X,Y, test_size=0.2) clf=linear_model.LinearRegression(n_jobs=-1) clf=clf.fit(x_train,y_train) accuracy=clf.score(x_test,y_test)  forecast_set=clf.predict(X_lately) #forecast_set_whole=clf.predict(X) print(accuracy,forecast_set)#,forecast_set_whole) forecast_set=np.array(forecast_set) df['Forecast'] = np.nan  last_date=df.iloc[-1].name last_unix=last_date#.timestamp() one_day=1 next_unix=last_unix+one_day  for i in forecast_set:  next_date = next_unix#datetime.datetime.fromtimestamp(next_unix)  next_unix+=one_day  df.loc[next_date]=[np.nan for _ in range(len(df.columns)-1)]+[i]  print(df.label[:-forecast_out]) print(forecast_set) df['adj_close'].plot() df['Forecast'].plot() plt.legend(loc=4) plt.xlabel('Date') plt.ylabel('Price') plt.show()  ====================================================================================================    UNCOMMENT TIMESTAMP PART IF DATA IS INDEXED WITH DATE(IN MY CASE CASE IT WAS INDEXED WITH NUMBERS) ==================================================================================================== NOTE:>> IT IS NOT PREDICTION IN FUTURE, IT IS JUST PREDICTION WITH THE HELP OF A READY-MADE MODEL TRAINED ON GIVEN DATASET TO PREDICT Y VALUES OF A DATASET WHOSE X VALUES ARE ALREADY KNOWN ==================================================================================================== HOPE IT HELPS.",True
@fahimmdrafiq3429,2017-06-02T16:04:11Z,6,"To all the people who are confused here , He is predicting prices of 1 month into the future . Which is why there is a gap in the graph as he didn't add the last month values from which he is making the next month prediction from ('next month' is the ""Forecast"" column here). It can be easily fixed by adding the X_lately values to the missing values in the gap.",True
@funduino8322,2017-05-30T12:34:25Z,0,"in X = X[:-forcast] why did we exclude the last entries? from my understanding we are predicting the value of a given set of features based on previous reading which is achieved through df['labels'] = df[forcast_col].shift[-forcast] for  example if forcast was 30 then the reading depends on previous 30 days, so it's the first 29 days that don't have values assigned to them and therefore need to be excluded?",True
@funduino8322,2017-05-30T12:26:53Z,0,what does dropna() does to the data array?,True
@dorsolomon7251,2017-05-29T20:00:45Z,1,haha not your greatest creation but still very useful,True
@adarshkashyap5961,2017-05-26T20:43:44Z,0,"accuracy = clf.score(y_true, y_pred, normalize=True, sample_weight=None) this is the right expression , how can you use x_test,y_test. both r differnet dataset?? please rectify this",True
@ashiandavnisfunadventures1524,2017-05-17T04:24:03Z,11,"Man, some time you just move so fast.. :(",True
@ehsanchowdhury5581,2017-05-15T18:27:31Z,0,"Hi Sentdex, glad to find ur tutorial. Can you or anyone please help me in the following error? read it in the comments, but nothing has solved my case. I am using python 3.5 and anaconda  code snipet: last_date = df.iloc[-1].name last_unix = last_date.timestamp() #error here one_day = 86400 next_unix = last_unix + one_day   output: AttributeError                            Traceback (most recent call last) <ipython-input-33-4a1a193ea81d> in <module>()       1 last_date = df.iloc[-1].name ----> 2 last_unix = last_date.timestamp()       3 one_day = 86400       4 next_unix = last_unix + one_day  AttributeError: 'numpy.int64' object has no attribute 'timestamp'",True
@TheAlchemist1089,2017-05-13T18:16:08Z,1,There's an error in your program:Invalid Syntax :|,True
@fonsecapersus9214,2017-05-12T22:00:12Z,0,Is it okay that I'm not understanding 90% of the code?,True
@huanyumao5530,2017-05-11T10:13:44Z,2,"Sorry, i am not truely understand the codes as below. X=np.array(df.drop(['Labels'],1)) print X X=preprocessing.scale(X) #Standardize a dataset along any axis X=X[:-forecast_out]    #? X_lately=X[-forecast_out:]  #?  what is the purpose of the  X=X[:-forecast_out]   and X_lately=X[-forecast_out:]  ?",True
@xanekena8675,2017-05-10T14:23:07Z,0,"Great Tutorial Sir....  I have confusion with apply this forecasting to my data. the data only has two columns; days and numbers. ex:  days                 numbers Monday               4256 Tuesday              5370 Wednesday        5630 Thursday            6758 Friday                  5749 Saturday             4563 Sunday               7869 Monday              7860 Tuesday             3452 Wednesday       3451 Thursday           3856 Friday                 3857 Saturday            2384 Sunday              2746  Based on the available data I want predict the next numbers in the next days. The numbers are always 4 digits and from 0-9. For training and testing, do I use numbers column only or should I both column... I kind a confuse how which column to Train and test.  Thanks for your help!",True
@SudarshanKaranthuppunda,2017-05-06T02:37:47Z,0,"Hi Thanks for the tutorial I m new to machine learning  i want to build a model which will predict the price for the future  Example I have a dataset containing  plumber work  Say experience_level , date, rating,  price/hour  I want to predict the price/hour for the next date base on experience level and average rating  can you please help me regarding this.",True
@QAMResearch,2017-04-26T09:23:14Z,0,df = quandl.get('WIKI/GOOGL') gives a big error. Wonder why??,True
@gianlucarusso1994,2017-04-20T17:07:59Z,3,"Hi , I have an error message in my code saying ""Found input variables with inconsistent numbers of samples: [9980, 9990]""  since , as shown in the tutorial we have to ""delete"" the last forecast_out values of X , but this means also that X and y are not going to have the same length anymore . Can someone explain me how to get rid of this problem ?",True
@lhpapercut,2017-04-10T17:22:33Z,0,"Hi, I did a minor change in the code to compare the forecast data against the real data:  I created this guy:  X_real = np.array(df['Adj. Close'][-forecast_out:])  then changed the for to:  for i in range(len(forecast_set)):     next_date = datetime.datetime.fromtimestamp(next_unix)     next_unix += 86400     df.loc[next_date] =                             [X_real[i]]+[np.nan for _ in range(1,len(df.columns)-1)]+[forecast_set[i]]  Just to plot both forecast and real. The shape is pretty good, almost identical, but there is a bias going on, forecast is always a little bit above the real data by 6. What might be the problem??",True
@elixirautomation,2017-04-08T23:39:34Z,3,Solution to time stamping problem: https://github.com/Abhilash04/Python_CSE/blob/master/Stock_Price_Prediction.py,True
@sayantansarkar3594,2017-04-08T17:10:58Z,0,"I am getting an error while running the first part of the code: ValueError: Found input variables with inconsistent numbers of samples: [3118, 3150] Can someone help me out?",True
@julle8089,2017-03-23T07:30:32Z,0,"I do not understand what linear regression has to do with ""machine learning"". Regression is for me only a statistical approach, how is it connected to machine learning ???",True
@brar5353,2017-03-15T04:19:59Z,1,Sorry if this is a stupid question but can you please explain again why did you do X = X[:-forecast_out],True
@xiandongqi7997,2017-03-09T15:15:28Z,0,last_unix = last_date.timestamp()  AttributeError: 'Timestamp' object has no attribute 'timestamp'  it is not working. can you please help?,True
@mrinalmathur8185,2017-02-28T13:55:52Z,0,last_unix = last_date.timestamp()  AttributeError: 'Timestamp' object has no attribute 'timestamp'  it is not working. can you please help?,True
@petermain1211,2017-02-27T13:37:50Z,0,My plotted forecast data seems to be showing 'real data' has a minus 32 days been used instead of a plus 32 days??? i'd love to continue with tutorial but hung up on this!!,True
@user-ft5pl7oc2y,2017-02-26T11:47:08Z,4,why are there 2 identical statement? y = np.array(df['label']),True
@yaweichen9773,2017-02-17T03:18:35Z,0,"print(forecast_set, accuracy, forecast_out), the accuracy is not correct. It is not the predict accuracy, it is the one from accuracy = clf.score(X_test, y_test)",True
@dailyamazingfacts2412,2017-02-15T06:48:32Z,1,"hi, i don't know why but after adding the X and X_lately values I am not getting the equal length of X and y... what could be the problem??? please anyone help me out .. and when i remove that and execute again I get the equal values than !!!",True
@onuragmaji,2017-02-12T07:58:17Z,0,"I got this error Traceback (most recent call last):   File ""C:/Python27/reg2.py"", line 41, in <module>     last_unix = last_date.timestamp() AttributeError: 'Timestamp' object has no attribute 'timestamp'",True
@soumyadas4755,2017-02-01T00:04:34Z,0,"+sentdex : I dont understand why on running the code : clf=svm.SVR()  clf.fit(X_train,y_train)  accuracy=clf.score(X_test,y_test) print(accuracy) # -0.0113307828442  the accuracy is negative!!  X = np.array(df_1.drop(['label'],1))  #to select all cols except label y = np.array(df_1['label'])  #I commented this part since, it changes the dimension of row for X, hence samples of X doesn't matches with labels y samples dimensionally #X = preprocessing.scale(X)#don't use high frequency training #X=X[:-forecast_out+1]   #y = np.array(df_1['label'])",True
@tylerlittlefield8785,2017-01-31T00:51:18Z,1,"Seems a lot of people are experiencing an issue where the plot does not display any future dates. I may or may not have fixed this issue. The part where we shift forecast_col by -forecast_out is missing the 'periods' argument for the shift function.  Try this: df['label'] = df[forecast_col].shift(periods=forecast_out)  And let me know if I'm on to something. When I print the tail of the df, I am seeing 32 days into the future (i.e. running the code today produces forecast values up until march 3rd of 2017).  Edit: Nevermind, it appears that all this is doing is taking the previous 32 Adj. Close values and pasting it to the future 32 days.",True
@asneogy,2017-01-29T10:33:36Z,3,"Hey Harrison! I felt this is easier (python 2.7), and avoids the problems people are having with timestamps:  last_date= df.index.max() next_unix= last_date + datetime.timedelta(days=1)  for i in forecast_set:         next_date= next_unix     df.ix[next_date]= [np.nan for _ in range(len(df.columns)-1)] +[i]     next_unix += datetime.timedelta(days= 1)",True
@rodrigosilvanader,2017-01-24T07:16:08Z,2,"ThankÂ´s for the videos, they help a lot. IÂ´m wondering if there is a mistake in this video: when you plot the Forecast values, they are plotted as they were a continuation of the ""Adj Close"" values, while in fact they should be plotted ""forecast_out"" days ahead. IÂ´m saying this because ""Adj Close"" represent the values today, while ""Label"" represent the future values. Am I wrong?",True
@nicholaswilliams6352,2017-01-18T08:37:42Z,0,Ive found you can access dataframe dates pretty easily by using df.ix[] syntax and using timedelta to generate the new dates.,True
@RocknClassics,2017-01-15T05:46:02Z,0,"By the way, the day you published the video, the stock price was 771, then grew to 787 and then fell to 705 in the next couple of weeks. So, anyone using this model and buying a put option would made a good profit.",True
@RocknClassics,2017-01-15T05:39:11Z,0,"Hi , many thanks for the videos. I've done the exercise and somehow the quandl brought me prices from 2004. Any hint about this? Best!",True
@karmafuel,2017-01-11T01:48:13Z,0,"Nice Work, this is fun!   For those of you with slow systems: ... df = df [['Adj. Close', 'HL_PCT', 'PCT_Change', 'Adj. Volume']] forecast_col = 'Adj. Close' df.fillna(-99999, inplace=True) df.to_csv(""googlestock.csv"") ... then make a new .py file with:  all of the modules and  df.read_csv('googlestock.csv"") and follow along from that point on.  And later to ease the date issues:  df['Date'] = df['Date'].apply(datetime.datetime.strptime,args=(""%Y-%m-%d"",)) df.set_index(df['Date'], inplace=True) ... some of code ... df['Forecast'] = np.nan last_date = df.iloc[-1].name last_unix = last_date.timestamp()  one_day = 864000 next_unix = last_unix + one_day for i in forecast_set:     next_unix += one_day     next_date=next_unix     df.loc[next_date]= [np.nan for _ in range(len(df.columns)-1)]  + [i]  I hope that is helpful!",True
@andresmunoz6395,2017-01-03T07:28:17Z,0,Do u have a gitHub account ?,True
@bala68169,2017-01-02T06:43:36Z,0,hi I want to predict weather every one hour using history weather data using python could you help me in this,True
@movie_archive811,2016-12-29T06:53:03Z,0,"The code is great. However, there seems to be a lack of economic sense: adjusted close is not what we usually want to predict. If we use this method to predict the daily return, it would have an accuracy of 0.0033976780251.",True
@theycallmemorphine,2016-12-22T06:39:32Z,1,"Hi Sentdex,  I'm having trouble with.. . .           last_unix = last_date.Timestamp() I'm on Python 2.7, I have arrived at a solution by doing.. . .         last_unix = time.mktime(dt.datetime.strptime(str(last_date), ""%Y-%m-%d %H:%M:%S"").timetuple()) This worked but.. Is there any other simple method???",True
@aravindv3927,2016-12-17T18:17:31Z,6,last_unix = last_date.timestamp() AttributeError: 'Timestamp' object has no attribute 'timestamp',True
@rahulbhattacharyya7673,2016-12-04T21:45:21Z,0,Hi I can't understand this line of code df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)]+[i] Can you explain it?,True
@NotQuiteMelvin,2016-12-02T22:01:51Z,0,My forecast_set is giving me values around 2.2 instead of 700s and I have no idea why  Edit: Turns out it was because I was scaling y,True
@dinzoharris6294,2016-11-29T01:23:06Z,1,Why is forecast_out put as a negative in X_lately? Wouldn't it have to be a positive to predict into the future,True
@vineetkaushik5044,2016-11-11T13:55:12Z,0,are these examples on stock prediction the actual way someone would go about building a trading platform?,True
@johnhanlon1531,2016-11-10T01:25:04Z,0,"For those of you receiving an error with the below code while running Python 3.5, consider how you are importing your data.   last_date = df.iloc[-1].name last_unix = last_date.timestamp()  one_day = 86400 next_unix = last_unix + one_day  For example, the quandl api pull reads from Old to New.  df = quandl.get('WIKI/GOOGL', authtoken=auth_key)  Whereas, if you have downloaded the dataset and are importing from a csv, the download will be structured from New to Old.  df = pd.read_csv('{}{}'.format(f_path, security))",True
@kathirs1,2016-11-01T02:17:44Z,0,"I am getting an error with length X and y...Can somebody help me to fix this ??   Same code as yours...  X = np.array(df.drop(['label'],1))   X = preprocessing.scale(X)  # print(len(X))   # len X :  X = X[:-forecast_out]   X_lately = X[-forecast_out:]  y = np.array(df['label'])  df.dropna(inplace=True)  print(len(X),len(y))                        #length is not the same here !!!!",True
@yuanfang2352,2016-10-28T21:13:18Z,0,"This application failed to start because it could not find or load the Qt platform plugin ""windows"". Anybody who encountered this problem has resolved it? I'm using Anaconda3 BTW",True
@lingobol,2016-10-22T06:57:12Z,9,"Dear Sir,  Thanks for the wonderful tutorial. I have a doubt.  My understanding of what is being done:   Features are of a date suppose K and label is of the date K+30  So while predicting when we are using features of date say 1 October, aren't we predicting label(price) of 31st October ??   So we are actually not predicting for next 30 days but 30 days after the next 30 days.   Please clarify.",True
@Canuckish,2016-10-14T02:10:23Z,0,Sorry to ask another so quickly but do you have the py2.7 fix for the unix time stamp section? I am having difficulty returning a unix result when try to use the workaround   last_date = datetime.datetime(df.iloc[-1].name) last_unix = last_date.timedelta(seconds = one_day),True
@Canuckish,2016-10-13T18:03:01Z,0,"Is there anyway you can post the final script you're using - I made the corrections noted both in the video and in the comments below, and am still getting an error on the cross_validation stage saying the rows aren't lining up...",True
@pn42069,2016-10-12T13:25:44Z,0,"What exactly do we use the classifier for? In the clf.fit(), is the ""fit"" thing to find the best fitting line for the given dataset or something? If not what does it do?",True
@deveshaggrawal9367,2016-10-10T18:37:21Z,0,"And why did matplotlib plotted the graph agains graph without specifying it, you only labeled it date but did not specified it. What about that?",True
@deveshaggrawal9367,2016-10-10T18:35:50Z,0,"there is a discontinuous space bet Adj. Close and forecast if i plot them differently, but if i plug the values of forecast_set in the Adj. Close column then there is no discontinuous. Can you explain why and how to tackle it.",True
@jibranelbazi,2016-09-29T15:06:37Z,2,"There is something seriously wrong with the logic of this algorithm I think. OR I am completely on the wrong track.   The algorithm ""forecasts"" such a good indication of the stock price that it knows when the market dropped with the Brexit. Seems very fishy.   I do really like your video's and I am learning a lot, but I do feel something is not right here.",True
@animechannel3000,2016-09-21T07:44:04Z,10,error AttributeError: 'Timestamp' object has no attribute 'timestamp' i change to last_unix = time.mktime(last_date.timetuple()) error SyntaxError: invalid syntax i'm use python version 2.7.6,True
@scottmandel,2016-09-08T19:12:56Z,0,"Where does n_jobs=-1 come from in the line, clf = LinearRegression(n_jobs=-1)? Python is giving me the following error... TypeError: __init__() got an unexpected keyword argument 'n_jobs'.  I am using Python 2.7 and all modules are up to date.",True
@owenspottiswoode5936,2016-09-06T18:44:28Z,0,"Hi Harrison, thanks for the fantastic series. Quick Q if I may: you're making predictions in this vid using data that has been scaled, but what do you do if you're using raw, live data to make a prediction? You can't scale a single sample, and surely if the classifier is trained on scaled data you'll get some funky predictions if you feed it unprocessed stuff. Is there a way to scale a single sample relative to the classifier (particularly if you're loading from a pickle)? Thanks again!",True
@paulkwok2233,2016-09-03T13:44:03Z,0,Can I use the CLF to predict more than 30 days forecast. I think the example here is not forecast the price for future. (there is a little bit confusing),True
@PhantomKenTen,2016-08-24T00:17:30Z,8,clf.predict(X_lately) works fine; however he prediction doesn't start from the current data. There is a gab on the graph. Do you know the reason for that?,True
@minjun87,2016-08-17T21:36:55Z,45,"Sentdex, sorry to say this but, it is not a prediction to the one month future. At the last step, when you plot them, you made a mistake. df['Adj. Close'] runs from the first row to the ""-30"" row of the original dataframe. It is 30 days shorter than the original dataframe because of df.dropna(inplace=True) right before you define 'y' in order to make the X len and y len the same. And the ""forecast set"" should run from the very next date of the last date of the original dataframe and 30 days from that date.   What you plot is: shorter dataframe's Adj. Close + df[Forecast_set] What you should have plotted is: original dataframe's Adj. Close + df[Forecast_set] Because what you have predicted is the whole new next 30 days.  Please check with it and give me some feedback on this. I appreciate it.",True
@RaoufGnda,2016-08-01T19:25:27Z,2,can I get help to solve this error!  AttributeError: 'Timestamp' object has no attribute 'timestamp',True
@aimihat,2016-07-20T20:51:25Z,3,"Hey, I have a quick question :) I am a bit confused about what linear regression actually is.. Linear, line, .. Is it not supposed to be a line being the closest estimate? Then how is it possible that it estimates that many variations (as we see in the plot). It's not a rough approx at all!   Thanks in advance if anyone can clarify this ;) PS: You're the best",True
@TheSaivinod,2016-06-29T14:10:21Z,1,"hey,i am using python 2.7 and when i use  last_unix=last_date.timestamp() it is giving me an error  like  'AttributeError: 'Timestamp' object has no attribute 'timestamp'",True
@tinadavis6150,2016-06-27T16:01:10Z,3,"y'all prob know this but if your substituting files from your computer you gots to index the date ---- df = pd.read_csv('C:\\Python\\table(1).csv', index_col='Date', parse_dates=True) ----else trouble ensues  ,, also changed --- last_date =  df.iloc[0].name ----  &   --- last_unix = time.mktime(last_date.timetuple())",True
@santhoshdasari9558,2016-06-15T12:18:38Z,1,Okay. But you forgot to account for week ends which are declared as holidays and also other national holidays.,True
@akishadilshani3816,2016-06-08T06:25:37Z,0,Thank you very much for the wonderful tutorial series.  I have a problem about the equation when applying it to my data set .I'm building a system to predict water quality in a river by inputting data from several points. I have data about rainfall and data from points which is contamination from point to point. All together I have 5 data coloums including the rainfall. Please help me to solve this.,True
@lradhakrishnarao902,2016-06-01T13:58:52Z,0,"I am using Python 3.5, still the timestamp is not working, and therefore, I used this method: last_unix = time.mktime(datetime.datetime.strptime(last_date,""%d%m%y"").timetuple())  But in the plot, I am not getting dates properly, instead, it is showing the labels of Price.",True
@danhunt5016,2016-05-28T16:07:25Z,14,"For anyone in python 2.7, you can use: last_unix = time.mktime(last_date.timetuple())",True
@garethgriffiths6846,2016-05-19T17:27:08Z,0,"Ok yes I understand. However, for a score of circa 96%, try doing clf.predict(X[0]). The label is 66.29, yet we get a prediction of 42.59. How is this large difference possible for such a high score?",True
@NarwhalAndBacon,2016-05-19T09:33:44Z,0,"When I compare the content of ""forecast_set"" to the actual stock prices (that is y[-forecast_out:], I notice an average 40$ difference. It seems a bit odd since we have a 95% accuracy, right?",True
@garethgriffiths6846,2016-05-19T09:31:11Z,2,"Ok, this code has a bug.  X = np.array(df.drop(['label'], 1)) does not do what you intend as you are keeping 'Adj. Close' If you do this instead: X = np.array(df[['Adj. Volume','HL_PCT','PCT_change']]) You then have the features you are after (run both scripts and look at len(X)) The score then drops to low 30%, no longer circa 96% Furthermore, when you chart the prediction, your indexing is wrong We'd all be millionaires if that google prediction was correct",True
@trench6118,2016-05-16T23:15:09Z,0,"Hello - I had a question about incorporating the Day of Month (1 - 31) and the Weekday (Mon-Sun) into machine learning and how I would shape the data. At a glance, it is apparent that values in my data are lower towards the end of the month and Mondays have the highest values in general. I would like to use this historical data and test for these relationships and predict future values.  Since I am interested in future values based on the date, I assume that that the date would be my label. For features I would have my value column,  but maybe I would need 5 separate columns for the values per weekday? Or maybe even (5 weekdays * 31 days) of columns if I want to look at the weekday and the day of month? I hope that my description is clear.",True
@weiyiliao7267,2016-05-13T05:52:54Z,0,"Could you please show me how to set the end_date of Quandl.get to get the exactly same data as you do. Cause we run the Quandl.get in different dates, the data we get could be slightly different which leads the result different. I try the end_data in Quandl.get, but it doesn't work.",True
@soonheng1577,2016-05-10T01:04:46Z,0,"+sentdex  I might be missing something, but Is there a specific reason you do Y = np.array(['label']) twice?",True
@Opifex_,2016-05-06T14:53:44Z,0,"Why are the forecast dates in the past, while we're predicting the future? I counted it, and my last forecast day is 12 days behind the present day. Your last forecast day is 18 days before uploading this video. That doesn't really make sense to me?",True
@nrh013,2016-05-05T03:08:48Z,5,"+sentdex  Just another important observation. Correct me if I'm wrong but I think the script doesn't answer the ""problem"" that you intended to answer. When you shift by ""forecast_out"" days, you are NOT predicting the price FOR THE NEXT number of ""forecast_out"" days, but instead you are predicting the price at T + number of forecast_out days.  So basically, if forecast_out = 5, the code as it is says that if I want to predict the price tomorrow, then I should look at the features 5 days ago.  The plot should have the ""label"" (not the ""Adj. Close"") and the forecast.",True
@AtulyaUrankar,2016-05-04T18:22:41Z,0,"Hi, wanted to know if like octave/Matlab, there's any way to obtain the slope and intercept for the linear regression model?  Since the plot is date (which isn't a feature) v/s price, there's no way for us to visualise the linearity of the model. Hence :)  Awesome tutorials! Python is waaay easier to navigate than Matlab",True
@nrh013,2016-05-03T02:07:26Z,0,"Hi, i'm using python 2.7 and i'm getting an error when i run last_unix = last_date.timestamp() AttributeError: 'Timestamp' object has no attribute 'timestamp'  How can I adjust this to my version of Python?  Excellent videos Sentdex!!",True
@loganbass9715,2016-04-28T01:39:20Z,0,"Is anyone else getting this error? If so, could someone point me in the right direction to fix?  C:\Python34\python.exe C:/Users/Logan/PycharmProjects/sentdexML/Regression_Intro.py 30 C:\Users\Logan\AppData\Roaming\Python\Python34\site-packages\sklearn\preprocessing\data.py:167: UserWarning: Numerical issues were encountered when centering the data and might not be solved. Dataset may contain too large values. You may need to prescale your features.   warnings.warn(""Numerical issues were encountered "" Traceback (most recent call last):   File ""C:/Users/Logan/PycharmProjects/sentdexML/Regression_Intro.py"", line 33, in <module>     X_train, X_test, y_train, y_test = cross_validation.train_test_split(X, y, test_size=0.2)   File ""C:\Users\Logan\AppData\Roaming\Python\Python34\site-packages\sklearn\cross_validation.py"", line 1906, in train_test_split     arrays = indexable(*arrays)   File ""C:\Users\Logan\AppData\Roaming\Python\Python34\site-packages\sklearn\utils\validation.py"", line 201, in indexable     check_consistent_length(*result)   File ""C:\Users\Logan\AppData\Roaming\Python\Python34\site-packages\sklearn\utils\validation.py"", line 176, in check_consistent_length     ""%s"" % str(uniques)) ValueError: Found arrays with inconsistent numbers of samples: [2870 2900]  Process finished with exit code 1",True
@sentdex,2016-04-20T13:31:38Z,101,"When we defined our X's here, I made a mistake flipping two lines. You *should* have the block of X definitions looking like:  X = np.array(df.drop(['label'],1))  X = preprocessing.scale(X)  X_lately = X[-forecast_out:]  X = X[:-forecast_out:]  I flipped the final X with X_lately, effectively shifting our forecast out to the point of predicting today's price. Make sure your code looks like the code above!",True
@happydays3300,2016-04-20T01:24:58Z,0,"This might be a stupid question! i might have not of listened probably! but instead of using the maths function for the forcast label into the future, could i just use the code (    df['labels']  = df['Close'].shift(-30)      ) that way i could have full control of how many days I want into the future without guessing the percentage of the maths function??? not sure but great video",True
@muhammedeltabakh852,2016-04-18T12:58:37Z,0,I'm getting this error when using time stamp  Timestamp object has no attribute 'timestamp'  I'm using python 2.7 and I'm guessing that this is the problem what should I do if I want to run this on python 2,True
@okeziee5034,2016-04-17T19:22:11Z,0,"@sentdex part of your video is cropped out, particularly the left margin with 2-3 letters off screen. Other than that, thanks for the great content!!",True
@hutmmothzxy,2016-04-14T21:50:46Z,1,"Hey Semtdex, I got a problem running the code.  When I run print(forecast_set,accuracy,forecast_out)  this set of numbers showed up and I don't know whats wrong.  [ -7299232.48792324 -12555777.80264825  -7821954.70250441   -7037267.32992824  -6719123.22142589  -4613831.28169456   -6197751.44901774  -9345383.34101614 -11347143.50926619  -12259525.69525383 -20577252.85285547 -19930169.8203471  -15854693.12570282  -16560791.35370125 -13553403.67967275 -12830406.49321641   -9148517.35041173  -9834586.34748286  -7018963.84148088   -6419029.76811728  -7272129.79723339  -7000043.61051195   -5141860.41507616  -5557051.16027098  -6163685.84977419   -5511078.01581284  -5432013.13866962  -6401032.52930239   -6449644.70929084  -9062263.53930188] 0.965494036345 30  I tried to download the code you posted on the website. It still showed the same thing.  Could you please tell me what is going on? Thanks a lot",True
@MMichiganSalveRegina,2016-04-14T17:54:11Z,4,Is there a 'last_unix = last_date.timestamp()' equivalent for python 2.7? timestamp() is not recognized.   Thanks,True
@janekmuric,2016-04-14T13:40:07Z,0,"Hey, sentdex I was just wondering if you could use a minute in a future tutorial to explain the code line by line since i have never used numpy arrays or pandas dataframes  so explaining how they work (like your basics series) would make life easier on people that don't know numpy/pandas. I know this is not supposed to be basic, but I think it would boost my understanding by quite a bit.  Anyways keep up the great work!",True
@mikberegov,2016-04-14T10:17:42Z,34,Jupyter notebook would make it a little bit easier to comprehend,True
@killerzboyhd1235,2016-04-14T09:26:20Z,0,are you mcjuggernuggets?,True
@legel93,2016-04-14T00:14:11Z,2,"YES, I was waiting for the upload haha :)",True
