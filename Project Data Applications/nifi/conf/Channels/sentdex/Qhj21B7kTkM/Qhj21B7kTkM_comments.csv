author,updated_at,like_count,text,public
@tcgvsocg1458,2021-03-18T08:32:59Z,0,"Can you do a video to make or explain the first level or ""metal slug"" or ""street of rage "" in python",True
@My3vilMe,2020-01-31T11:51:33Z,0,"There is a mistake in the written part of this tutorial in the last code snippet. There is a parenthesis missing at the end of the second print because of the additional str() method, which isn't in the video.",True
@Dgrayfit,2019-07-19T12:52:16Z,0,"I think another way to think about operation overloading is to draw from concepts of a 'space' in linear algebra. From what I remember, when a new space or something like a sub-space is created, your space is empty at first, but then you need to define what types of operations exist in that space.",True
@dogugerger2965,2018-12-21T05:41:05Z,0,"you are fucking legend, thanks for the great content I'm gonna donate now",True
@iNuchalHead,2018-04-01T04:07:35Z,0,"Any reason why you don't say ""other_blob == RED/GREEN/BLUE"" in the BlueBlob class, i.e., using your defined color tuple variables?   Also, nice Osmos clone ;)",True
@turboromy,2017-09-10T03:05:31Z,1,"What does ""blue_blobs[0] + red_blobs[0]"" at 8:44 mean by itself ???  Is it to make 2 blobs collide ?  Can anyone explain a bit more please.... some id + some id don't sound like a valid command to me.",True
@Lotramus,2017-08-10T18:26:05Z,0,You were soo cute in this episode!,True
@mamazu1995,2016-12-06T10:21:36Z,2,"Great video, you explained the basic very well. Two things I find need to be mentioned. First of all: you can add / subtract and so on different objects. One thing that you need to keep in mind though is that a + b is basically a.__add__(b) the addition is not commutative. The other thing is that like you showed in the video the addition doesn't have any return value so for example bloby = red_blob + blue_blob. Then bloby is None. If you want to have a return value, create a new object.",True
@kaiocesar8578,2016-12-06T03:24:37Z,4,Blobjects ROFL,True
@cmatthew91,2016-12-05T22:18:29Z,0,"awesome video, very useful and clear!",True
@fennecfox2366,2016-12-05T17:38:10Z,4,This is like watching a Bob Ross video.   Thanks!,True
@roshanmehta2293,2016-12-05T16:19:19Z,1,and as always thank you for changing my life,True
@JohnDupuyCOMO,2016-12-05T15:16:29Z,17,"Basically, without resorting to C, one can create your own datatypes using operator overloading. I've done this myself when I had a project that needed ordered-named-lists (like a dictionary, but the keys need not be unique.) Wish your videos had been around when I was learning how. Some extra info for others: the example he used is good for blue_blob + red_blob. But red_blob + blue_blob will fail; that is because the __add__ operator is referenced by the first object, with the second object as the parameter. One could need to define __add__ in the RedBlob class for __add_ to become ""commutative"" (i.e. getting it to work in both directions.) Or, one could add a default __add__ to the Blob parent class; then overload again for unique properties based on color.  ...it is easy to go down some twisty rabbit holes with these techniques... :)",True
,2016-12-05T14:55:02Z,0,winds me up all that code means nothing if you don't show the result of it! it looks like all that code just makes lil squares hmmmm strange.,True
@m13m,2016-12-05T14:34:47Z,1,like C++,True
