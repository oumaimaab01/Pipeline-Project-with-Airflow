author,updated_at,like_count,text,public
@luiscunha844,2019-10-12T21:08:41Z,0,do with new pythoooooooon !,True
@arnoclaes9693,2015-05-01T11:14:51Z,0,"While overlaying the volume with the boxplots, my volume has like 1 month more on the left.   import time import datetime import numpy as np import matplotlib.pyplot as plt import matplotlib.ticker as mticker import matplotlib.dates as mdates from matplotlib.finance import candlestick import matplotlib  matplotlib.rcParams.update({'font.size': 9})  eachStock = 'GOOG',   def movingaverage(values, window):     weights = np.repeat(1.0, window) / window     smas = np.convolve(values, weights, 'valid')     return smas   def graphData(stock, MA1, MA2):     try:         stockFile = stock + '.txt'         date, closep, highp, lowp, openp, volume = np.loadtxt(stockFile, delimiter=',', unpack=True,                                                               converters={0: mdates.strpdate2num('%Y%m%d')})          x = 0         y = len(date)         candleAr = []         while x < y:             appenLine = date[x], openp[x], closep[x], highp[x], lowp[x], volume[x]             candleAr.append(appenLine)             x += 1          Av1 = movingaverage(closep, MA1)         Av2 = movingaverage(closep, MA2)          SP = len(date[MA2 - 1:])          label1 = str(MA1) + 'SMA'         label2 = str(MA2) + 'SMA'          fig = plt.figure(facecolor='#07000d')           ax0 = plt.subplot2grid((5,4), (0,0), rowspan=1, colspan=4, axisbg ='#07000d')         ax0.spines['bottom'].set_color(""#5998ff"")         ax0.spines['top'].set_color(""#5998ff"")         ax0.spines['left'].set_color(""#5998ff"")         ax0.spines['right'].set_color(""#5998ff"")         ax0.tick_params(axis='x', colors='w')         ax0.tick_params(axis='y', colors='w')         ax0.yaxis.label.set_color(""w"")         plt.gca().yaxis.set_major_locator(mticker.MaxNLocator(prune='lower'))         plt.ylabel('RSI')            ax1 = plt.subplot2grid((5, 4), (1, 0), rowspan=4, colspan=4, axisbg='#07000d')         candlestick(ax1, candleAr[-SP:], width=0.75, colorup='#9eff15', colordown='#ff1717')          ax1.plot(date[-SP:], Av1[-SP:], '#5998ff', label=label1, linewidth=1.5)         ax1.plot(date[-SP:], Av2[-SP:], '#e1edf9', label=label2, linewidth=1.5)            ax1.xaxis.set_major_locator(mticker.MaxNLocator(10))         ax1.xaxis.set_major_formatter(mdates.DateFormatter('%Y-%m-%d'))         ax1.yaxis.label.set_color(""w"")         ax1.spines['bottom'].set_color(""#5998ff"")         ax1.spines['top'].set_color(""#5998ff"")         ax1.spines['left'].set_color(""#5998ff"")         ax1.spines['right'].set_color(""#5998ff"")         ax1.tick_params(axis='x', colors='w')         ax1.tick_params(axis='y', colors='w')         ax1.grid(True, color='w')         plt.ylabel('Stock Price')         plt.xlabel('Date')         plt.legend(loc=3, prop={'size': 7}, fancybox=True, )          for label in ax1.xaxis.get_ticklabels():             label.set_rotation(45)           volumeMin = 0          ax1v = ax1.twinx()         ax1v.fill_between(date, volumeMin, volume, facecolor='#00ffe8', alpha=.5)         ax1v.axes.yaxis.set_ticklabels([])         ax1v.spines['bottom'].set_color(""#5998ff"")         ax1v.spines['top'].set_color(""#5998ff"")         ax1v.spines['left'].set_color(""#5998ff"")         ax1v.spines['right'].set_color(""#5998ff"")         ax1v.set_ylim(0, 4*volume.max())         ax1v.tick_params(axis='x', colors='w')         ax1v.tick_params(axis='y', colors='w')         ax1v.grid(False, color='w')          plt.suptitle(stock, color='w')          plt.setp(ax0.get_xticklabels(), visible=True)          plt.subplots_adjust(left=.09, bottom=.18, right=.94, top=.94, wspace=.20, hspace=.0)          plt.show()         fig.savefig('example.png', facecolor=fig.get_facecolor())      except Exception, e:         print 'failed main loop', str(e)   for stock in eachStock:     graphData(stock, 12, 26)     print 'sleeping...'     time.sleep(10)",True
