author,updated_at,like_count,text,public
@anulithamarripeddivijayala6935,2022-09-03T00:00:41Z,0,"So can I do matrix multiplication in this scenario if I use .join()? Iknow you use numpy for it, this is just for my curiosity.",True
@jinanmswi802,2021-10-10T11:56:31Z,1,or anyone knows?,True
@jinanmswi802,2021-10-10T11:56:15Z,1,what application that you use?,True
@khazaddim,2021-05-12T17:01:03Z,0,This works on windows and android but not on Ubuntu 20.04.  Argh!!,True
@eathemory2030,2021-03-18T19:18:45Z,0,god damn I love you man,True
@mrfrozen97-despicable,2020-12-31T17:32:45Z,1,Plz anyone don't repeat dumb thing I did. I named the file multiprocessing.py And then imported multiprocessing.py Xdxdxdxdxdxd.....,True
@hubertbonnisseur-de-la-bat4858,2020-12-11T12:56:12Z,0,"damn, that's slow ! 6 CPU to print 1 to 100 in a second ...",True
@mahmou6,2020-10-28T12:13:20Z,0,"Guys, I've a very noob question. How to double underscore in macOS to type: if __name__ == '__main__':",True
@trexholland5389,2020-07-31T17:34:35Z,0,"My system doesn't show python process, it just shows cmd is utilising all the power. Why is it that the case?",True
@muhammadsarimmehdi,2020-07-31T11:10:50Z,0,"thank you, this video should show up as the very first result when anyone searches for multiprocessing in python tutorial.",True
@ragudude,2020-07-03T04:10:01Z,0,"Why use join at all if you're multiprocessing? Doesn't the join method effectively render the script to run synchronously anyway, thereby defeating the purpose of multiprocessing?",True
@vishalAmbreappbuzz,2020-05-16T15:26:26Z,4,"Followed the tutorial and made the 500 processes with infinite loops in each of them. CPU got max out at around 130; Everything got freezed out, panicked and started to force close the running script which got cancelled after sometime in the meantime I think Windows killed a lot of background operations which for some reason it runs. Now my PC run smoother and better. It seems I made myself a poor mans Ram Cleaner. Not sure what it's consequences are going to be. But PC runs a hell lot faster now",True
@dexdevlon8941,2019-09-27T19:40:53Z,0,Amazing video!,True
@Didanihaaaa,2019-09-24T03:51:51Z,0,"Thanks for your video. I do have a question about multiprocessing. Here I asked it on StackOverflow. https://stackoverflow.com/questions/57529308/solving-a-problem-utilizing-multiprocessing-and-value-in-python I appreciate any help. Solving the same problem using the new approach provided in your video, still, I get no benefits in term of speed.",True
@dsinghr,2019-09-18T07:44:52Z,1,"shouldn't the p.join() be outside of for loop ? That makes more sense, right ? Else, it would be simply sequential processing. Put time.sleep(2) to see the difference",True
@esysss,2019-09-03T12:09:38Z,1,"hey man, is there a way to make this module to work with GPU",True
@KARAB1NAS,2019-08-30T06:50:34Z,0,"If all processes are independent from each other and I want to save their results before the main exits, do I need to use .join? Will all processes be executed without .join before main ends or some will be killed ?",True
@karmaisayin5720,2019-08-24T13:03:54Z,0,"I wasn't able to get the same results when trying 500 processes, because windows defender was stopping them...",True
@Didanihaaaa,2019-07-11T00:15:43Z,0,Thanks for your great video. Here is my question. I do have two functions and want to use two processors to calculate them separately. How can I add the results of each processer once they have done with their works? the functions are time-consuming and I need to use multiprocessing library. I still don't know how to find the output of each processor and how to sum up them? TNX,True
@prashantsingh9483,2019-04-03T17:15:24Z,6,"When I ran the multiprocess loop for 100 iterations, my CPU maxed out. But I went with 500 to follow the tutorial, and the consequences were never to be :forgotten!",True
@random_act,2019-03-01T15:19:02Z,0,brilliant examples and fantastic explanation,True
@zebusaqua4415,2019-02-03T04:50:06Z,0,Had a hell of a error and learned that if you named the file multiprocessing.py it would throw a great error. Good learning exp. Ended up making a new file namesarestupid.py and then that didn't work turns out had to also delete the old multiprocessing.py as the script was trying to call it? Not sure how all this works together but still interesting none the less.,True
@grnhy,2019-01-15T16:13:44Z,0,This doesn't work for me. On the command line it's not printing out 5x spawned. It's just a blank line and nothing happens. Goes back to main directory.,True
@morphman86,2018-10-10T17:02:57Z,35,"For those a bit confused about why we need multiprocessing at all, there are a number of scenarios when you might want that extra power. Or when you want to run more than one process at the same time. For example, say you have made yourself a Youtube backup tool that downloads all your own videos. Yes, there is a tool for that in Python that lets you do that in less than 20 lines of code. It's awesome. BUT it only downloads one video at a time, which is a real hassle, since it takes about 10 seconds to download each video. And if you're a music producer and want to convert it to MP3 or FLAC instead of keeping it as a video (and of course at the highest possible bitrate), it will take up to 30 seconds to convert as well. So now you're sitting there, with 150 songs waiting to download, taking 40 seconds per song.  Or you could use multiprocessing and start 10 processes at a time, cutting your waiting time down from 1 hour 40 minutes to just 10 minutes.  Or if you have a very time-consuming task that uses a lot of calculations, like rendering video, and have access to a lot of computer cores, like a stack of Raspberry Pi's, you can connect them all in a ""supercluster"" (or a supercomputer) using multiprocessing, letting all cores of all computers act like they were part of one single computer and render one frame each at a time. This is what major film studios do when they render their projects (but with proper and purpose built computers, not microcomputers, principle is the same though).  The example given in the video, web spiders, is another great example. Usually, the program will only look at a single URL at a time, but with multiprocessing, even running at a single core, you can look at several links at a time.",True
@ripperx444,2018-08-24T00:11:23Z,1,Args is a tuple and for a tuple with 1 positional value I guess python expects a comma,True
@iliqnew,2018-07-22T23:26:48Z,0,"hi there! i tried the same code but nothing is printed. I don't get any errors either. Here's the coppied code: import multiprocessing  def spawn():       print(""0"")  if __name__ == '__main__':       for i in range(55):             p = multiprocessing.Process(target=spawn)             p.start()",True
@AhmadOrdikhani,2018-05-05T09:34:37Z,0,"I have tried it in linux and after the program is finished,  the processes are still there and if I continue to run the code many time I get an error that says that the max number of opened program/processe is reached. It seems that linux doesn't kill the processes immidiately.  I am writing a collect some data in realtime and do some calculation,  so I need to run two processes concurrently.  Any idea?",True
@thefamousdjx,2018-04-20T06:58:44Z,1,"Hi I'm still learning and struggling to understand how using join is no different from just doing normal loops without processing, since the next process waits for the last one to finish, just like how the next loop starts after the previous one is finished. Thanks",True
@nikyabodigital,2018-02-28T16:33:42Z,0,How to multi process an infinite loop? Like I'm making a Raspberry Pi Project. I'm calling for a function to run on another process. However. It can't pass on the next parameter if it does so because the process created was an infinite loop. How is this done.,True
@stoneskull,2018-01-18T18:20:38Z,0,why does Process want a tuple?,True
@nishanbasnet2140,2017-12-05T12:51:42Z,1,really great videos.. appreciate you man..,True
@therealprince777,2017-11-24T04:35:55Z,0,I'm learning python without a particular path. How can I figure out a path to take.,True
@codruterdei,2017-11-18T14:52:47Z,0,You can use generators to simulate channels (from Go) so you can thread safe communicate through them,True
@peterpeter9230,2017-10-20T07:11:36Z,0,"The Code is not working for me. AttributeError: module multiprocessing has not attribute Process  Edit: A Quick note. DO NOT name your script ""multiprocessing"" as it overrides the library",True
@mdhafizurrahman5858,2017-08-27T07:09:02Z,0,(i) p = multiprocessing.Process(target=spawn(i))         p.start() (ii)   p = multiprocessing.Process(target=spawn(i))         p.start()         p.join() both (i) and (ii) works. Is it the right way to pass argument. The output are same but only difference between the output process is the first one shows output all in one time but the second one one process 3 calls in one moment.,True
@jackmaxwell3134,2017-08-21T11:15:09Z,0,"I feel it strange that only printing ""Spawn' will max out the processor. Even if there are a lot of processes, each process is only doing something like printing ONE word... Someone to comment on this?",True
@srisu8946,2017-07-04T20:29:45Z,0,"also, how do you open up a command window in windows os?",True
@srisu8946,2017-07-04T20:29:16Z,0,could you PLEASE go a bit slower because i'm kind of having a hard time following along?,True
@manishadwani386,2017-06-01T21:17:10Z,0,how's it different from threads,True
@jiequanzhang7988,2017-05-27T01:13:41Z,0,"Hello, Is this the same as multithreading?",True
@MUSEFAN8383,2017-05-11T14:39:08Z,0,"When I run your multiprocessing code without the join, it outputted gaps and a jumble of strings then froze the command prompt.",True
@MrCraber,2017-03-24T15:05:35Z,0,comma because of tuple,True
@thepinkchicken247,2017-03-17T04:44:00Z,0,"I it possible to do something every 24 hours, while waiting you can send a comand through the console/tkinter button to do something else?",True
@thepinkchicken247,2017-03-17T04:42:35Z,0,can't you communicate between processes using pickle?,True
@xichen4297,2017-02-18T17:39:01Z,0,"Even though I comment out the p.join, it still prints in order, any idea?",True
@davidtrame8280,2017-01-03T01:38:35Z,1,"I'm getting an error on both Python 3.4 and Python 3.6.  Does anyone have an idea what is wrong here?  I copied the source code directly from the PythonProgramming.net tutorial and still get this error:  C:\Python36\python.exe C:/Code/Python/Sentdex_Intermediate_Tutorial/multiprocessing.py Traceback (most recent call last):   File ""C:/Code/Python/Sentdex_Intermediate_Tutorial/multiprocessing.py"", line 10, in <module>     p = multiprocessing.Process(target=spawn) AttributeError: module 'multiprocessing' has no attribute 'Process'",True
@eddie2378,2016-12-27T04:05:52Z,3,"8:08 because the function takes a tuple as an argument and adding a ',' makes it a tuple.  For example: type((3))  # <class 'ini'> type((3,))  # <class 'tuple'>",True
@mokogwuchiedu1068,2016-11-21T01:55:26Z,0,A quick observation. I am running python 3 on linux(8 cores). Using your code I couldn't seem to get multiple CPU's to run the processes. I had to ramp up the range to 50000 before multiple CPU's started running different processes.,True
@DavidBudaghyan,2016-11-19T22:50:54Z,2,"@sentdex #8:06 The comma is necessary so that the interpreter understands that it is a one element tuple. If there is no comma, the parentheses are not enough to identify it as a tuple. Thanks for your great videos!",True
@bkh1974,2016-11-18T03:30:07Z,0,"So can multiprocessing only be used on functions? Is their a way to multiprocess your whole script? Let's say a script has 100 different functions, would you have to use the multiprocess command on each function?",True
@dave597,2016-11-17T15:24:08Z,0,"Spawning this many (500) processes is a bad idea due to process overhead cost. Ideally you only want to spawn as many processes as there are logical cores or 1 less than that for system stability. and you could process work using a pool map to feed work into those processes, then it doesnt matter if some take longer to process, and also the results will be ordered.",True
@dave597,2016-11-17T15:18:20Z,0,"the trailing comma is required to explicitly define the single variable as a tuple, as is required by the method arguments, so when Python unpacks this into *args it will unpack the whole variable and not as separate arguments.",True
@DivusMeta,2016-11-17T09:40:25Z,0,Why not use Powershell?,True
@user-hu9eg7ck9b,2016-11-17T04:22:40Z,2,"Process loops over the elements of args, so you need a sequence. Adding the comma makes it a one-element tuple.",True
@relaxsightme,2016-11-15T12:05:12Z,0,well done,True
@graceful_songs,2016-11-15T09:13:47Z,0,"cool, so this is better than messing with the threads my self if I have multithreaded app?",True
@nic5146,2016-11-15T09:06:11Z,0,Can't wait for the next vid! Your doing great and I love this seiries!,True
@riis08,2016-11-15T09:06:11Z,0,"How many processing can we start, any limit? Is it possible that we start process from inside of threading module?",True
@Xblade45,2016-11-15T03:56:32Z,0,How cool is that. I just started using multiprocessing yesterday at work and you post a video about it. Thanks!,True
@JulienPy,2016-11-15T02:01:34Z,1,"Thx a lot for all you've shared, half of what I know in programming comes from your channel. A very generous gesture and rare enthusiasm mix makes you one of the best teachers around ! An idea for a next video on intermediate python serie : create and distribute a python package (installable from pip)?",True
@maxiewawa,2016-11-15T00:49:57Z,0,Is there a way to do this that doesn't use the terminal/command line?,True
@uttamo7,2016-11-14T22:31:04Z,2,Do you use Python IDLE for when you're not doing tutorials? Surely you must use a proper IDE,True
@tiobraulio,2016-11-14T21:28:25Z,0,Awesome!!!!!... waiting for the next video!!!!,True
@princepriority,2016-11-14T20:58:33Z,0,"hey Bro, I understood multiprocessing tutorial and thanks to clear my concept on threads n multiprocessing. can you make one more tutorial with the use of both threads n multiprocessing....... it would be helpful.🙌🙏",True
@AdrianHannah,2016-11-14T19:53:39Z,1,The comma is required because otherwise the interpreter interprets the parentheses as mathematical parentheses and not a tuple construct.,True
@AdamBecker80,2016-11-14T19:18:23Z,1,"There have already been a few comments on the tuple question raised in the video, I thought I would add a little more details about why it works the way it does: It all boils down to how the python language parser works.  The parenthesis can be used for either a tuple or to establish priority in an expression:   Example: y = (1 + 2) * 3  # Result 9 (not a tuple)  In this case, the parens are used for priority in the order of operation.  If (1 + 2) was converted to a tuple then the math would be wrong. We could write a more simple example of y = (1 + 2)   # Result 3 (still not a tuple)  If we want to have it be a tuple instead, then we need to have a way to tell the parser to consider the value within the parens to be a tuple - the easy thing to do is add a trailing coma: y = (1 + 2,) # y is a  tuple containing a single value of 3.  We could also simplify this by writing it as: y = (3,) # same as above  It is also important to note that () is also a tuple (note that there are no coma's in there.)  That is because the parser is able to distinguish the fact that there is no expression within the parens and it can figure out that it's a tuple. y = () # empty tuple",True
@janekmuric,2016-11-14T19:10:20Z,2,"8:20 The reason you need the coma is because it means it's a tuple. Interesting you didn't know this because I learnt it from your video :P  Example: i = 5 type((i)) #<class 'int'>  type((i,)) #<class 'tuple'>",True
@janekmuric,2016-11-14T19:04:44Z,3,"Performance, efficiency and stability-wise, how is this different from threading?",True
@osamansr5281,2016-11-14T18:35:27Z,1,">would u plz explain what ""join"" does ? and is it a blocking function? >>i mean, for example in the loop, the 1st iteration p1 starts then p1. join ,, does it here stop and wait for p1 to finish ? or does it go in the the next iteration directly after join without waiting for the process to end ?!",True
@johnnysim1985,2016-11-14T17:55:27Z,1,For the next Q&A video: Why Windows?,True
@javierdelarubia6315,2016-11-14T17:37:59Z,2,"First off, thank you for your work on this series and for keeping them short. I'm finding difficulties to run some of your examples (timeit and this one so far). For example, in this one, I get a nasty ""TypeError: 'module' object is not callable"" message from both idle and through the console. After trying a few workarounds and searching for further information, I could not make it work nor find a clear solution. Finally, I swapped multiprocessing by threading and it worked. Running python 3.5 on a win7 machine. Any ideas about why this does not work for me? (thanks in advance)",True
@Qornv,2016-11-14T15:55:36Z,0,"Timing could not have been better, was about to read up on this",True
@PhantomKenTen,2016-11-14T15:15:37Z,150,"Args takes a tuple and python recognizes a tuple by the comma. Try this: t = (1,) type(t)=<class 'tuple'> where as t = (1) type(t) = <class 'int'>",True
@Jacklawi,2016-11-14T15:08:21Z,1,"If you didn't put the command, then python would consider those brackets as mathematical brackets (or evaluation brackets).",True
@slapusillydawg,2016-11-14T14:42:47Z,25,"(i,) is the syntax for creating a tuple with a single element, and multiprocessing.Process expects args to be a tuple",True
@biermeester,2016-11-14T14:38:17Z,30,"Args needs a tuple, hence the comma.",True
