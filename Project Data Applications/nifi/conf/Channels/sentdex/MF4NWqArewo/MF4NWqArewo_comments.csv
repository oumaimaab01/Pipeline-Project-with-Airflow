author,updated_at,like_count,text,public
@anirudh6642,2020-06-03T17:36:25Z,0,I would say that using dunder add is an insensitive way of doing it. You are not measuring an aggregation of objects. Things in normal addition do not change the numbers undergoing an addition. 5+3 should always be 8 however many times you do it. Maybe a static method that treats all blobs equally and checks which blob has an appetite for which colour and proceeds to make changes.,True
@mitchellfolbe8729,2020-05-17T16:26:55Z,0,This one stretched my bounds. Tough but good learning. Thanks.,True
@saadusufzai8795,2019-07-28T17:55:01Z,0,can anyone help?? my code is working but throwing exception as the blobs collide idk what is wrong,True
@saadusufzai8795,2019-07-28T17:54:17Z,1,"import pygame from blob import Blob import numpy as np  STARTING_BLUE_BLOBS = 15 STARTING_RED_BLOBS = 15 STARTING_GREEN_BLOBS = 8  WIDTH = 800 HEIGHT = 600 WHITE = (255, 255, 255) BLUE = (0, 0, 255) RED = (255, 0, 0)   game_display = pygame.display.set_mode((WIDTH, HEIGHT)) pygame.display.set_caption(""Blob World"") clock = pygame.time.Clock()   class BlueBlob(Blob):     def __init__(self, x_boundary, y_boundary):         Blob.__init__(self, (0, 0, 255), x_boundary, y_boundary)      def __add__(self, other_blob):         if other_blob.color == (255, 0, 0):             self.size -= other_blob.size             other_blob.size -= self.size          elif other_blob.color == (0, 255, 0):             self.size += other_blob.size             other_blob.size = 0          elif other_blob == (0, 0, 255):             self.size += other_blob.size          else:             raise Exception('Tried to add colors that are not yet defined by you')   class RedBlob(Blob):     def __init__(self, x_boundary, y_boundary):         Blob.__init__(self, (255, 0, 0), x_boundary, y_boundary)   class GreenBlob(Blob):     def __init__(self, x_boundary, y_boundary):         Blob.__init__(self, (0, 255, 0), x_boundary, y_boundary)   def is_touching(b1, b2):     return np.linalg.norm(np.array([b1.x, b1.y]) - np.array([b2.x, b2.y])) < (b1.size + b2.size)   def handle_collisions(blob_list):     blues, reds, greens = blob_list      for blue_id, blue_blob in blues.copy().items():         for other_blobs in blues, reds, greens:             for other_blob_id, other_blob in other_blobs.copy().items():                 if blue_blob == other_blob:                     pass                 else:                     if is_touching(blue_blob, other_blob):                         blue_blob + other_blob                         if other_blob.size <= 0:                             del other_blobs[other_blob_id]                         if blue_blob.size <= 0:                             del blues[blue_id]      return blues, reds, greens   def draw_environment(blob_list):     game_display.fill(WHITE)     blues, reds, greens = handle_collisions(blob_list)     for blob_dict in blob_list:         for blob_id in blob_dict:             blob = blob_dict[blob_id]             pygame.draw.circle(game_display, blob.color, [blob.x, blob.y], blob.size)             blob.move()             blob.check_bounds()      pygame.display.update()     return blues, reds, greens   def main():     blue_blobs = dict(enumerate([BlueBlob(WIDTH, HEIGHT) for i in range(STARTING_BLUE_BLOBS)]))     red_blobs = dict(enumerate([RedBlob(WIDTH, HEIGHT) for i in range(STARTING_RED_BLOBS)]))     green_blobs = dict(enumerate([GreenBlob(WIDTH, HEIGHT) for i in range(STARTING_GREEN_BLOBS)]))      while True:         for event in pygame.event.get():             if event.type == pygame.QUIT:                 pygame.quit()                 quit()         blue_blobs, red_blobs, green_blobs = draw_environment([blue_blobs, red_blobs, green_blobs])         clock.tick(60)   if __name__ == '__main__':     main()",True
@mahmoudhozayen447,2019-02-14T03:00:50Z,0,Why i got this error : (OverflowError: Python int too large to convert to C long)When i have a Large  number  Starting Blobs,True
@rohan1427,2018-09-01T07:40:25Z,0,"screen is just blank and i even checked the logic, it's not showing any errors. HELP!!",True
@Thrawen,2017-10-09T13:13:19Z,1,"At 7:08 when you are checking if the blob is touching itself, wouldnt that also return True, if two blobs touch that have the exact same parameters? shouldnt that be an ""is"" instead of ""==""?",True
@leonardjowers9492,2017-06-26T01:22:34Z,0,"Thank you. I've enjoyed and benefited from your tutorials! When we ""del"" a blue blob, we are still in the loop so we crash if we try to ""del"" it again. Add ""print(""Deleting Blue blob {}"".format(blue_id))"" and see it crash on 2nd ""del"".",True
@shrad6611,2017-06-22T05:02:31Z,0,please upload video for web crawling,True
@ianrees3932,2017-03-27T04:25:50Z,5,"""I need to redo my PyGame tutorial"" You just got me VERY excited.",True
@DeepakGupta-qe2qq,2017-02-10T10:41:32Z,0,You are Crazy man...and my Hero !!!,True
@Azariven,2016-12-31T08:27:08Z,1,looking forward to a tutorial that combine mulitprocess/subprocess with pygame for speed ups,True
@patrickjdarrow,2016-12-27T07:15:28Z,0,"I'm attempting to simulate a R>G>B>R blob environment using your code as a shell. I'm running into issues when trying handle collisions. When all three sets of blobs have interactions, how would I set up my handle_collisions() ?  Keep up the awesome work.",True
@kartoffelsalatistkrass8622,2016-12-16T11:49:14Z,0,"Why don't you use PyCharm? You would get rid of all the errors because of typos, take a lot less time to type in general because of auto completion and also facilitate refactoring.",True
@tear728,2016-12-12T04:37:29Z,4,"Surely there must be a better way to do the handle_collision function. It's time complexity is O(n^3) lol Otherwise, great stuff!",True
@iVandal,2016-12-09T07:29:07Z,0,EDIT: Read comment below for clarification.  On the matter of better ways to do things:) Your detection code will run really slow as more and more blobs are added. You should consider only calculating distance to blobs nearby. Here is an example pesudo-code of how that could work:  https://gist.github.com/Arxcis/aa2693cf4c5f9fd890f3021bff4b613e,True
@chenjing8043,2016-12-07T13:01:01Z,0,你能看得懂中文吗,True
@treelight1707,2016-12-07T07:35:28Z,3,"""We want to know when 2 blobs are touching each other"", that was funny. This series is very helpful btw. Aside from that, I have a serious question: what does it mean when someone specifies a class ClassName(object):  , what does object refer to in this context?",True
@GregHilmes,2016-12-06T21:46:47Z,12,is_touching could be as easy as math.sqrt((b2.x - b1.x)**2 + (b2.y - b1.y)**2) < (b1.size + b2.size). Just use the distance formula and skip numpy.,True
@17Codiferus,2016-12-06T19:28:04Z,0,sphinx/documentation may be a logical place to wrap up OOP/modularity.  ;),True
@sportacus509,2016-12-06T16:16:49Z,3,Where can I find all the special methods,True
@Hasasinful,2016-12-06T15:05:43Z,0,first :D,True
