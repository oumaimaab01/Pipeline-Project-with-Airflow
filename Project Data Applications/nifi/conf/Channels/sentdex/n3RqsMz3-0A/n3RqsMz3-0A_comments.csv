author,updated_at,like_count,text,public
@mertfromhell,2023-10-10T19:59:55Z,0,you dumb :DDDDDD,True
@y.i.7371,2021-07-12T14:49:45Z,0,"Great video so good i love this and that...  Don't put random words and expect me to understand that. KNNALGOS. you might think that is obvious, but you take your knowledge granted, that's why it is obvious for you. I don't know the half of those syntax you noob.",True
@damby6336,2021-01-26T08:59:54Z,0,sir. you should write a book,True
@GoredGored,2020-10-24T13:04:09Z,0,"The one liner can be re-written as  for i in dataset:     for ii in dataset[i]:         plt.scatter(x = ii[0] , y = ii[1],  color=i)  But I tried the same code with sns.scatterplot it returns the following error: If using all scalar values, you must pass an index  Can't figure how to resolve this issue. Anyone come across that? To be clear that has nothing to do with the code being a one liner or not. Anyway, currently can't do the same plot using sns.scatterplot???",True
@sayyoryusupov5495,2020-09-24T13:43:23Z,0,"We could also use plt.scatter(*new_features) instead of plt.scatter(new_features[0], new_features[1]). It saves space and it works for any number of features.",True
@dubey_ji,2020-07-16T11:47:20Z,0,next time please swear :p 8:15,True
@joro8604,2020-06-08T15:59:21Z,1,"Ughh, every time I think I understand 'for' loops and how to index a number in data structure, I find not. The dataset[i] returns k and r. Not what I intuitively would have expected. I would have intuitively expected the index 0, 1 or [1,2],[2,3],[3,1], [6,5],[7,7],[8,6]. So be it. Frustrating. Back to noodling that over.",True
@AatishThilaka,2020-05-29T18:15:23Z,0,Quarantine Timepass <3,True
@intothelight8126,2020-03-31T22:05:57Z,9,"""Ok now i'm gonna write one line loop"" and all non-pythoners are like :SSSS 0.0",True
@T4l0nITA,2020-02-07T17:44:07Z,3,"you can just use np.array(dataset['k'])[:, 0] to go through all the x coordinates (column 0) of the given dataset, and use the same except [:, 1] for y values.",True
@CaptainAdd49,2019-09-21T16:57:26Z,0,"@sentdex Can someone please explain to me the significance of 'ii"" in the for loop? for i in dataset:  for ii in dataset[i]:   plt.scatter(ii[0],ii[1], s=100, color=i)",True
@ahbarahad3203,2019-08-02T14:43:31Z,0,having a hard not being mean to someone who's raising that error :D,True
@omidasadi2264,2019-05-12T14:29:53Z,0,hi and thanks for sharing this learning....... how can we access to these codes?,True
@ravitanwar9537,2019-03-25T08:40:00Z,0,hey sentdex i would also recommend an interview preparation series related to data science and ML . keep coming up wid these videos . cheers!,True
@Hahalol663,2019-03-23T10:35:12Z,1,"""Idiot!"" :D",True
@DimasAnggaFM,2019-02-07T07:44:54Z,0,this is excellent video!!,True
@shubhamborghare873,2018-10-21T13:41:42Z,0,"Dear Sir, Thank you so much for sharing valuable knowledge. Please help me to solve following error ValueError: 'color' kwarg must be an mpl color spec or sequence of color specs. For a sequence of values to be color-mapped, use the 'c' kwarg instead.",True
@brianweymouth6567,2018-09-05T12:29:07Z,1,What do you use to interact with the graph? Thanks! Love your videos.,True
@liangyumin9405,2018-08-16T15:11:36Z,0,if len(data) <= k : warnings.warn('xxx'),True
@ricardocancar6879,2018-08-06T23:30:02Z,0,"but you get the point, indeed.",True
@muhammaduzair7534,2018-08-03T00:58:45Z,0,what is the effect of using  style.use('fivethirtyeight'),True
@jmb4944,2018-07-01T00:42:50Z,0,"I keep getting TypeError: 'list' object is not callable on ""[[plt.scatter(ii[0],ii[1],s=100,color=i) for ii in dataset[i]] for i in dataset];""",True
@vishuvashishtha5197,2018-06-27T13:58:05Z,34,stop scrolling through the comments and listen to the guy,True
@EhsanulHaque069,2017-12-30T14:14:12Z,0,Why am I getting syntax error on the semicolon next to r?,True
@t.h5823,2017-10-27T02:08:10Z,1,"im really enjoying your videos bro...you made my day, that was gonna be a nice warning",True
@tictac5896,2017-08-29T13:28:14Z,0,what is meant by  color =i? how does it work actually,True
@Thepando20,2017-05-23T23:19:41Z,1,"Hi! great video man, thanks :D Question, how do you autocomplete the parentheses and brackets?",True
@1aswingigi,2017-04-22T22:03:56Z,0,"Call me an idiot, but why exactly should k be less than the total number of voting groups ? I get the fact that k should be less than the total number of training examples and also it should ideally be odd and indivisible by the number of voting groups but why should it be greater than the number of voting groups?  Pedro Santos has explained why it shouldn't be the case below. Would love to know you thoughts @sentdex :)",True
@kiranpradhan721,2017-04-08T10:59:37Z,2,I got the import error message  that cannot import name 'counter',True
@PranshuDixit0105,2017-03-03T20:06:25Z,0,"Hey, how do you comment out multiple lines by selecting them? Like at 7:12",True
@niteshkumarn55,2017-02-18T13:26:53Z,3,"Even I am not convinced why len(data)>= k. I really don't get it, I feel it should be the other way round k<=len(data). Please correct me if I am wrong and explain me why in the video it is len(data)>=k. If the explanation is simple with an analogy, that will be great for all the users who has the same question running back of there mind.",True
@ryanshrott9622,2016-12-29T20:36:47Z,0,"Check out my implementation: # -*- coding: utf-8 -*- """""" Created on Thu Dec 29 11:59:25 2016  @author: shrr001 """""" import pandas as pd  import numpy as np from sklearn import preprocessing, cross_validation, neighbors   from math import sqrt  def euclid_distance(p1, p2):     return sqrt(sum((p1 - p2) * (p1 - p2)))        def kNearestClassification(known_data, new_points, k=5):     # Known data contains the classification as well      for i, each_data in enumerate(known_data):         known_point = each_data[:-1]         y = each_data[-1]         dist = euclid_distance(known_point, new_point)         if i == 0:             data_dist = np.concatenate((known_point, np.array([y]), np.array([dist])), axis=0)             data_dist = data_dist.reshape(-1, len(data_dist))         else:             stack = np.concatenate((known_point, np.array([y]), np.array([dist])), axis=0)             stack = stack.reshape(-1, len(stack))             data_dist = np.vstack((data_dist, stack))     data_dist = data_dist[data_dist[:,10].argsort()]          k_nearest = data_dist[:k, :]     k_nearest_classifications = k_nearest[:, -2]          numTwo = 0     numFour = 0     for each_classification in k_nearest_classifications:         if each_classification == 2.:             numTwo += 1         else:             numFour += 1          if numTwo > numFour :         result = 2         conf = numTwo / k * 100     else:         result = 4         conf = numFour / k * 100     return k_nearest, result, conf          df = pd.read_csv('breast-cancer-wisconsin.data.txt')  df.replace('?', -99999, inplace=True) df.drop(['id'], 1, inplace=True)  X = np.array(df.drop(['class'],1), dtype=np.float64) y = np.array(df[['class']], dtype=np.float64)  new_point = np.array([7,6,7,1,1,2,3,2,1])  known_data = np.concatenate((X,y), axis=1)  k_nearest, result, conf = kNearestClassification(known_data, new_point, k=7)",True
@mikeg6988,2016-12-20T20:43:43Z,2,Thank you so much for all these videos!,True
@j.hanleysmith8333,2016-12-06T06:26:28Z,0,"To anyone watching this getting an error with matplotlib, there is a workaround available if you search for it. However, this work around is not necessary on the next tutorial and onward. I spent a good 45 minutes on the problem and gained some knowledge about the matplotlib build and a current glitch. If you are not interested in this info, I would suggest skipping ahead. Cheers!",True
@pedrosantos9376,2016-11-07T01:33:52Z,10,"Hi  @sentdex,   Could you help me understanding why do we have (len(data) >= k) ? We have that k means the number of neighbors and len(data) means the number of classes, k is used to check the  the distance to the k nearest neighbors independent of their classes,  and after that we check the most common class in those k nearest neighbors. Why are you comparing k with the number of classes ? For example: If you have 5 classes, and 1000 points in the dataset, and I want to classify a new point using only the 3 nearest neighbors this would fail, or even the special case 1-NN also would fail. Shouldn't K be compared with the whole number of data point, in my example 1000 ? Like here:  def kNearestNeighbors(data, point, k=3):  if (k > sum(len(v) for v in data.itervalues())):   warnings.warn('K is set to a value greater than the total points!');  Thank you in advance, and your videos are amazing! You're the best",True
@MrBigmit37,2016-10-10T23:28:57Z,0,Thanks for breaking down the formulas.,True
@Dutchtraordinary_Living,2016-10-03T12:14:07Z,14,You always manage to make me laugh while learning coding. Thank you :),True
@EmersonSalmeron,2016-05-29T01:13:29Z,0,"""idiot!"" ðŸ˜‚ðŸ˜‚ðŸ˜‚ðŸ˜‚",True
@SogMosee,2016-05-06T00:54:24Z,0,you're a beast with the python!,True
@vasyapupkin9773,2016-05-05T19:27:58Z,0,hi there! can you make a tutorial on cffi c extensions plz. thanks,True
