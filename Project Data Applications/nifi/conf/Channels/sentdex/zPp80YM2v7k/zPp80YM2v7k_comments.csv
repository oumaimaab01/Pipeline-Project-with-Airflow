author,updated_at,like_count,text,public
@utsavsharma9228,2023-08-03T06:58:37Z,0,I’m not getting 0 in data spread counters. Can someone explain me where I’m missing out? @sentdex?,True
@batuhanklloglu7245,2021-03-01T11:49:08Z,0,"guys i got error ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()  https://stackoverflow.com/questions/10062954/valueerror-the-truth-value-of-an-array-with-more-than-one-element-is-ambiguous to solve this i applied .all() to col; but i cant check the result with respect to the video because i use different dataset( different date values) so if anyone has the same error and after applied that can you check the results and say that this is the correct solution or not.  def buy_sell_hold(*args):     # c for c yi anlamak icin  python list comprehension arastir.     cols = [c for c in args]     requirement = 0.02     for col in cols:         if col.all() > requirement:             return 1         if col.all() < -requirement:             return -1     return 0",True
@arunjohn492,2020-11-13T03:08:47Z,1,('XOM') - is a Comapny Name !!!,True
@dikshu3101,2020-09-11T05:44:03Z,0,Every time result is Same i get 150 1 and 1-0 and showing error in pct change,True
@broy.,2020-08-27T08:46:56Z,0,"AttributeError: 'list' object has no atrribute 'values' should I delete the .tolist() from ""vals = df['{}_target'.format(ticker)].values.tolist()?",True
@lewis1435,2020-08-15T15:46:54Z,0,I’m a little confused could someone explain to me what exactly X and y are?,True
@the_top_10_things,2020-08-03T22:26:12Z,0,"When we pass 7 columns to buy_sell_hold function, how does it compare it with requirement and give output? I am confused as we are getting only one target column. Any help is appreciated!",True
@sanjivmadhavan5705,2020-07-27T06:19:05Z,0,Why should the data spread be even ideally?,True
@petersq5532,2020-07-20T21:39:18Z,0,"def buy_sell_hold(x):     for i in x:         if i > req:                     return 1                     elif i < -req:             return -1     return 0  df['{}_target'.format(ticker)] = list(map( buy_sell_hold,.... -->  --> df['{}_target'.format(ticker)] =df.apply(lambda x:  buy_sell_hold(x) , axis = 1)",True
@dakhilish,2020-07-16T14:01:16Z,2,"When I run the script, I keep hitting an SyntaxError for the line vals = df[f""{ticker}_target""].values.tolist() anyone know why?",True
@prempatil3263,2020-07-15T21:57:33Z,4,"for the line :     ""df_vals = df[[ticker for ticker in tickers]].pct_change()"" TypeError: unsupported operand type(s) for /: 'str' and 'str'  can someone please help me out",True
@yogeshdubey5142,2020-06-22T14:39:36Z,0,str_vals = [str(i) for i in vals]  why  is there an syntax error,True
@trevorhinchliffe2195,2020-06-10T08:38:44Z,0,"Hi thanks for the python videos I’m learning fast .  Do you have any tutorials on identifying trends in stock data ?  I would like to identify during backtesting if a stock is in uptrend downtrend or not in trend, I can identify when a stock drops out of trend but am struggling with how to identify entering a trend  Does this require machine learning or can it be coded ?  Any help would be greatly appreciated .",True
@joneasterbrook1379,2020-05-18T10:06:50Z,4,"from collections import Counter import numpy as np import pandas as pd import pickle   def process_data_for_labels(ticker):     hm_days = 7 #this number is the number of days it checks fr buy sell hold     df = pd.read_csv('sp500_joined_closes.csv',index_col=0)     tickers = df.columns.values.tolist()     df.fillna(0, inplace=True)      for i in range(1, hm_days+1):         df['{}_{}d'.format(ticker,i)] = (df[ticker].shift(-i) - df[ticker]) / df[ticker]      df.fillna(0, inplace=True)     return tickers, df  def buy_sell_hold(*args):     cols = [c for c in args]     requirement = 0.02 # +/- percent a stock will rise or fall     for col in cols:         if col > requirement:             return 1         if col < -requirement:             return -1     return 0  def extract_featureset(ticker):     tickers, df = process_data_for_labels(ticker)      df['{}_target'.format(ticker)] = list(map(buy_sell_hold,                                               df['{}_1d'.format(ticker)],                                               df['{}_2d'.format(ticker)],                                               df['{}_3d'.format(ticker)],                                               df['{}_4d'.format(ticker)],                                               df['{}_5d'.format(ticker)],                                               df['{}_6d'.format(ticker)],                                               df['{}_7d'.format(ticker)],                                               ))      vals = df['{}_target'.format(ticker)].values.tolist()     str_vals = [str(i) for i in vals]     print('Data spread:', Counter(str_vals))      df.fillna(0, inplace=True)     df = df.replace([np.inf, -np.inf], np.nan)     df.dropna(inplace=True)      df_vals = df[[ticker for ticker in tickers]].pct_change()     df_vals = df_vals.replace([np.inf, -np.inf], 0)     df_vals.fillna(0, inplace=True)      X = df_vals.values     y = df['{}_target'.format(ticker)].values      return X, y, df  extract_featureset('XOM')",True
@oskarbukowski9880,2020-03-26T11:51:22Z,0,"Hi,  Do you know what to do with the error like this: ?   'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte   Google isn't able to help me.",True
@rikardoms,2020-03-23T13:52:13Z,1,"Hi, very nice tutorial. I am facing this error:  File ""11.py"", line 33, in extract_featuresets     df['{}_1d'.format(ticker)],   File ""C:\Users\Ricardo\AppData\Local\Programs\Python\Python38-32\lib\site-packages\pandas\core\frame.py"", line 2800, in __getitem__     indexer = self.columns.get_loc(key)   File ""C:\Users\Ricardo\AppData\Local\Programs\Python\Python38-32\lib\site-packages\pandas\core\indexes\base.py"", line 2648, in get_loc     return self._engine.get_loc(self._maybe_cast_indexer(key))   File ""pandas\_libs\index.pyx"", line 111, in pandas._libs.index.IndexEngine.get_loc   File ""pandas\_libs\index.pyx"", line 138, in pandas._libs.index.IndexEngine.get_loc   File ""pandas\_libs\hashtable_class_helper.pxi"", line 1619, in pandas._libs.hashtable.PyObjectHashTable.get_item   File ""pandas\_libs\hashtable_class_helper.pxi"", line 1627, in pandas._libs.hashtable.PyObjectHashTable.get_item",True
@cwj8357,2020-03-09T04:52:02Z,2,"I cannot understand "" df['{}_target'.format(ticker)] = list(map( ~~) ""   df['{}_target'.format(ticker)]  is just a one column,  and list(map(~~)) is iteration of 7 days of stock price.   then, which column does this function compare with 'requirement' ??   target_1d..?? or target_7d..??   I made this table to csv file, and I cannot find which column is the key column..     Anyway,, thx for your good teaching!!",True
@junguan1924,2020-01-01T02:35:26Z,0,"df['Highest_in_7'] = df['Adj Close'].rolling(window=7).max().shift(-7)     df['Lowest_in_7'] = df['Adj Close'].rolling(window=7).min().shift(-7)",True
@richardboreiko,2019-12-27T04:30:30Z,1,I'm getting different results - is the source code available for download? Or maybe an update for Python 3?,True
@xilin1063,2019-12-11T10:51:19Z,0,"I found that df_ticker_target only gives the result when i = 1, maybe we need a df_ticker_target_i to get the rest results,here's my suggestion (it works;but if this makes no sense,plz ignore it): for i in range(1,hm_days):         df['{}_{}target'.format ( ticker,i )] =  list(map ( buy_sell_hold, df['{}_{}d'.format ( ticker, i )] ))",True
@Gavinnnnnnnnnnnnnnn,2019-10-20T15:28:26Z,3,Upper case y is used when the output is matrix. Lower case indicates a scalar value.,True
@ericabao1279,2019-07-09T05:40:34Z,0,"Great Video! But, I still do not understand the function buy_sell_hold(),  Because  in this function,  for col in cols:  when it returns a  value, it always returns the first comparison between the requirement(0.02) and df_ticker_1d.  So why did you bring in df_ticker_2d, df_ticker_3d, ... df_ticker_7d,  It seems unnecessary.  Could you help me with this confusion? Thanks a lot!",True
@bifflohman1,2019-06-16T17:14:09Z,2,I can't believe I have gotten this far!,True
@aritrabasu8794,2019-06-07T18:43:00Z,0,Isn't the labelling function only considering the first argument - in this case the 2% growth from last day?,True
@rudinat1081,2019-05-04T11:05:08Z,0,"I am new to machine learning and I need some help to do an assignment.Could you help, please. Many thanks",True
@aakashdusane,2019-01-28T11:32:28Z,0,In the buy_sell_hold function shouldn't that final return 0 statement be INSIDE the for loop?,True
@janmagnusrkke8815,2019-01-16T12:05:38Z,2,"Thanks for the great tutorial!   I had to use IEX as the stock price source since it is no longer possible to get this from Yahoo. However, these only go back 5 years and it seems only Close is available and not Adjusted Close as used in the tutorial. The code works without errors however i get a rally unbalanced spread (Data Spread:  Counter({'0': 1036, '1': 120, '-1': 98})) using 0.02 as the requirement. I have to go down to almost 0.005 before I get something close to an even spread. Am I doing something wrong or is it just because of the difference in stock price period which is used and the change in price is just that low?",True
@MrDemit9,2019-01-08T15:08:08Z,0,"Use list comprehension to return the string value of range(1,numdays+1)",True
@marcusjun94,2018-11-30T10:27:08Z,1,"Hi, can someone explain the last part of the extract features set? I wish to know the 'WHY'      vals = df['{}_target'.format(ticker)].values.tolist()     str_vals = [str(i) for i in vals]     print('Data Spread:', Counter(str_vals))     df.fillna(0, inplace = True)          df = df.replace([np.inf, -np.inf], np.nan)     df.dropna(inplace = True)          df_vals = df[[ticker for ticker in tickers]].pct_change()     df_vals = df_vals.replace([np.inf, -np.inf], 0)     df_vals.fillna(0, inplace = True)          X = df_vals.values     y = df['{}_target'.format(ticker)].values          return X, y, df  Thanks.",True
@jdasasha,2018-10-12T21:45:56Z,2,"This works:  timeframe is the same as your hm_days.  Uses list comp to create list then you can unpack with *  df['{}_target'.format(ticker)] = list(map(buy_sell_hold, *[df['{}_{}d'.format(ticker, i)] for i in range(1, timeframe+1)]))  Hope that helps",True
@petealwayslovesu,2018-09-25T06:24:37Z,8,"from collections import Counter import numpy as numpy import pandas as pandas import pickle   def process_data_for_labels(ticker):     hm_days = 7     data_frame = pandas.read_csv(""joined_sp500.csv"", index_col=0)     tickers = data_frame.columns.values.tolist()     data_frame.fillna(0, inplace=True)  # percentage change for the past seven days; (the day - past seven days) / the day #     for i in range(1, hm_days+1): #         data_frame[""{}_{}d"".format(ticker, i)] = \ #             (data_frame[ticker].shift(-7) - data_frame[ticker]) / data_frame[ticker]      data_frame[""{}_percent_change"".format(ticker)] = \         (data_frame[ticker] - data_frame[ticker].shift(7)) / data_frame[ticker]      data_frame.fillna(0, inplace=True)     return tickers, data_frame   def buy_sell_hold(*args):     columns = [c for c in args]     requirement = 0.02     for column in columns:         if column > requirement:             return 1         if column < -requirement:             return -1     return 0   def extract_feature_sets(ticker):     tickers, data_frame = process_data_for_labels(ticker)      data_frame[""{}_target"".format(ticker)] = list(map(buy_sell_hold,                                                       data_frame[""{}_percent_change"".format(ticker)]                                                       # data_frame[""{}_1d"".format(ticker)],                                                       # data_frame[""{}_2d"".format(ticker)],                                                       # data_frame[""{}_3d"".format(ticker)],                                                       # data_frame[""{}_4d"".format(ticker)],                                                       # data_frame[""{}_5d"".format(ticker)],                                                       # data_frame[""{}_6d"".format(ticker)],                                                       # data_frame[""{}_7d"".format(ticker)]                                                       ))      # targets     values = data_frame[""{}_target"".format(ticker)].values.tolist()     str_values = [str(i) for i in values]     print(""Data spread: "", Counter(str_values))      data_frame.fillna(0, inplace=True)     data_frame = data_frame.replace([numpy.inf, -numpy.inf], numpy.nan)     data_frame.dropna(inplace=True)      data_frame_values = data_frame[[ticker for ticker in tickers]].pct_change()     data_frame_values = data_frame_values.replace([numpy.inf, -numpy.inf], 0)     data_frame_values.fillna(0, inplace=True)      x = data_frame_values.values     y = data_frame[""{}_target"".format(ticker)].values      # data_frame = data_frame[[""XOM"", ""XOM_target"", ""XOM_1d"", ""XOM_2d"", ""XOM_3d"", ""XOM_4d"", ""XOM_5d"", ""XOM_6d"", ""XOM_7d""]]     data_frame = data_frame[[""XOM"", ""XOM_percent_change"", ""XOM_target""]]     print(data_frame)      return x, y, data_frame   extract_feature_sets(""XOM"")",True
@Zanko2228,2018-07-25T17:23:18Z,1,"Is anyone else getting this error ""UnboundLocalError: local variable 'tickers' referenced before assignment""? I have followed everything but cannot get it to work.",True
@aramhussein504,2018-06-30T10:48:43Z,0,"Hi Sentdex, all,  Below is what i get, I am new to python (runing version 3.65). I would really appreciate if one could assist me on answering on below questions!  Data spread: Counter({'1': 4434, '0': 1}) - is this possible? Buy and hold forever! :)  KeyError: ""['X'] not in index"" - is this a problem caused by the map method? [Finished in 0.9s] - Should i interpert this as the code has done its jobb, even if the i got a KeyError?",True
@EranM,2018-05-25T07:39:06Z,5,"1:53 *[df['{}_{}d'.format(ticker, i)] for i in xrange(1, 8, 1)] saved harrison.",True
@Cardicardi,2018-05-09T13:26:31Z,4,"I really like this series, its fun, informative and effective!  2:20 you can loop that with df['{}_target'.format(ticker)] = list(map(buy_sell_hold,df[[c for c in df.columns if c not in tickers]].values)) or (maybe more clear) df['{}_target'.format(ticker)] = list(map(buy_sell_hold,df[['{}_{}d'.format(ticker,i) for i in range(1,hm_days+1)]].values))  I needed that .value because it would otherwise get that ticker name as first value during the mapping (weird??)",True
@snquest3131,2018-05-01T18:39:10Z,0,"Hi Sir, vas_df= df[[ticker for ticker in tickers]].pct_chnage() # this line is not working properly,   let I pass the ticker as 'BAC', when I ran that line then it gives the split values of BAC i.e. 'B', 'A', 'C'  And also gave attribute error like 'list' has not any argument like pct_change.  Sir. How can I fix that error?",True
@jdmo07,2018-03-15T10:37:18Z,2,"I resolved the mapping column issue by using a lambda row approach instead. So:  def buy_sell_hold(row):     requirement = 0.02     cols = []     for i in range(1,hm_periods+1):         cols.append('{}-{}d'.format(ticker,i))     for col in cols:         if row[col] > requirement:             return 1         if row[col] < -requirement:             return -1     return 0  df['{}_target'.format(ticker)] = df.apply(lambda row:buy_sell_hold(row),axis=1)  Note I changed the hm_days variable to hm_periods for slightly different use case.",True
@ElwyslanMdeOliveira_u,2018-02-24T14:28:39Z,0,"I change my code in this way: #Split the DF from XOM_1d to XOM_7d params = df.loc[:, '{}_1d'.format(ticker):'{}_{}d'.format(ticker, daysAhead)]  #Create columns >> XOM_target_1d to XOM_target_7d and fill then with the Target value for i, columnName in enumerate(params.columns):   df['{}_target_{}d'.format(ticker,i+1)] = list(map(buy_sell_hold, params[columnName]))  Also I modify 'buy_sell_hold_' into this def buy_sell_hold(num):  requiriment = 0.02  if num > requiriment:   return 1  if num < -requiriment:   return -1  return 0  All this to generate a DF which contains this columns ['XOM_1d', 'XOM_2d', 'XOM_3d', 'XOM_4d', 'XOM_5d', 'XOM_6d', 'XOM_7d', 'XOM_target_1d', 'XOM_target_2d', 'XOM_target_3d', 'XOM_target_4d', 'XOM_target_5d', 'XOM_target_6d','XOM_target_7d']  This works for me #SorryTheBadEnglish",True
@djstr0b3,2018-01-26T12:06:49Z,3,"Great video series. Small suggestion; please give some indication of what you are going to do and how it fits into the end goal. You are doing a great job on ""how"", but ""what"" and ""why"" need more emphasis.   Thanks",True
@charliestaich6956,2018-01-16T13:57:57Z,1,"11,111th view!",True
@giladbar-ilan1472,2018-01-14T12:32:29Z,0,"I got an error that NameError: ""name 'ticker' is not defined"" - what am I missing here?",True
@gregdavey4261,2017-12-30T19:45:12Z,1,"I am flumixed. I have checked my code line for line. Everything has worked up to this chapter. I can't see what I am missing. I get this error. It fails at df['{}_2d'.format(ticker)] with the following   Traceback (most recent call last):   File ""stockreader_10.py"", line 71, in <module>     extract_featuresets(""XOM"")   File ""stockreader_10.py"", line 45, in extract_featuresets     df['{}_2d'.format(ticker)],   File ""/Users/Greg/anaconda3/lib/python3.6/site-packages/pandas/core/frame.py"", line 1964, in __getitem__     return self._getitem_column(key)   File ""/Users/Greg/anaconda3/lib/python3.6/site-packages/pandas/core/frame.py"", line 1971, in _getitem_column     return self._get_item_cache(key)   File ""/Users/Greg/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py"", line 1645, in _get_item_cache     values = self._data.get(item)   File ""/Users/Greg/anaconda3/lib/python3.6/site-packages/pandas/core/internals.py"", line 3590, in get     loc = self.items.get_loc(item)   File ""/Users/Greg/anaconda3/lib/python3.6/site-packages/pandas/core/indexes/base.py"", line 2444, in get_loc     return self._engine.get_loc(self._maybe_cast_indexer(key))   File ""pandas/_libs/index.pyx"", line 132, in pandas._libs.index.IndexEngine.get_loc   File ""pandas/_libs/index.pyx"", line 154, in pandas._libs.index.IndexEngine.get_loc   File ""pandas/_libs/hashtable_class_helper.pxi"", line 1210, in pandas._libs.hashtable.PyObjectHashTable.get_item   File ""pandas/_libs/hashtable_class_helper.pxi"", line 1218, in pandas._libs.hashtable.PyObjectHashTable.get_item KeyError: 'XOM_2d'",True
@zes3813,2017-10-11T18:16:54Z,0,"ts not bad/gx, any can be ok. compux doesnx matx",True
@sabotage3d,2017-10-01T12:13:38Z,0,"Hi, for some reason my result is ('Date spread:', Counter({'1': 1714, '-1': 1454, '0': 1109})) using Python 2.7 and the one in the video is ('Date spread:', Counter({'1': 1713, '-1': 1456, '0': 1108})). Any ideas?",True
@peterkoppelman6232,2017-09-19T03:28:08Z,1,"I got the program to run but I can't duplicate his results. My results were 3675 0, 302 -1 and 300 1. Does this mean that about 86% of the time (3,675/4,277) the absolute value of the movement in the stock price from day to day was less than 2%?",True
@tomvkgames,2017-08-17T13:28:37Z,0,"Can someone explain what at the end of the video the numbers 1713, 1456 and 1108 mean?",True
@GKS225,2017-07-25T10:48:51Z,6,"For thos who're having problem with NameError: name 'Counter' is not defined, add this line at the top: from collections import Counter",True
@ps9012lcog,2017-07-15T15:11:09Z,0,"HI Lucas,  encounter map must have at least 2 arguments  pls advise thanks  ------------ def extract_featuresets(ticker):     print(""\n  extract_featuresets"")      ticker, df = process_data_for_labels(ticker)     print(""  =======>1a "")     hm_days=0     df['{}_target'.format(ticker)] = list(map(buy_sell_hold,*[df['{}_{}d'.format(ticker,i)]for i in range(1,hm_days+1)]))  ----- File ""C:\Users\aileen\Python\SourceCode\Fmodule5.py"", line 193, in extract_featuresets     df['{}_target'.format(ticker)] = list(map(buy_sell_hold,*[df['{}_{}d'.format(ticker,i)]for i in range(1,hm_days+1)])) TypeError: map() must have at least two arguments.",True
@lalitmundhra7779,2017-07-10T18:26:12Z,0,"i am getting the following division by zero error: please help me get out of it  runfile('E:/Scikit Programme/Python Programming for Finance/P9-12--short term trading_7 days.py', wdir='E:/Scikit Programme/Python Programming for Finance') E:/Scikit Programme/Python Programming for Finance/P9-12--short term trading_7 days.py:80: DtypeWarning: Columns (124,128) have mixed types. Specify dtype option on import or set low_memory=False.   do_ml('TSLA’) Data spread: Counter({'0': 2336, '1': 1145, '-1': 918}) Traceback (most recent call last):    File ""<ipython-input-2-4bfebddf7778>"", line 1, in <module>     runfile('E:/Scikit Programme/Python Programming for Finance/P9-12--short term trading_7 days.py', wdir='E:/Scikit Programme/Python Programming for Finance')    File ""C:\Users\pc\Anaconda3\lib\site-packages\spyder\utils\site\sitecustomize.py"", line 880, in runfile     execfile(filename, namespace)    File ""C:\Users\pc\Anaconda3\lib\site-packages\spyder\utils\site\sitecustomize.py"", line 102, in execfile     exec(compile(f.read(), filename, 'exec'), namespace)    File ""E:/Scikit Programme/Python Programming for Finance/P9-12--short term trading_7 days.py"", line 80, in <module>     do_ml('TSLA')    File ""E:/Scikit Programme/Python Programming for Finance/P9-12--short term trading_7 days.py"", line 63, in do_ml     X, y, df = extract_featuresets(ticker)    File ""E:/Scikit Programme/Python Programming for Finance/P9-12--short term trading_7 days.py"", line 53, in extract_featuresets     df_vals = df[[ticker for ticker in tickers]].pct_change()    File ""C:\Users\pc\Anaconda3\lib\site-packages\pandas\core\generic.py"", line 6021, in pct_change     **kwargs)) - 1)    File ""C:\Users\pc\Anaconda3\lib\site-packages\pandas\core\ops.py"", line 1234, in f     return self._combine_frame(other, na_op, fill_value, level)    File ""C:\Users\pc\Anaconda3\lib\site-packages\pandas\core\frame.py"", line 3471, in _combine_frame     result = dict([(col, f(col)) for col in this])    File ""C:\Users\pc\Anaconda3\lib\site-packages\pandas\core\frame.py"", line 3471, in <listcomp>     result = dict([(col, f(col)) for col in this])    File ""C:\Users\pc\Anaconda3\lib\site-packages\pandas\core\frame.py"", line 3467, in f     r = _arith_op(this[col].values, other[col].values)    File ""C:\Users\pc\Anaconda3\lib\site-packages\pandas\core\frame.py"", line 3459, in _arith_op     return func(left, right)    File ""C:\Users\pc\Anaconda3\lib\site-packages\pandas\core\ops.py"", line 1176, in na_op     raise_on_error=True, **eval_kwargs)    File ""C:\Users\pc\Anaconda3\lib\site-packages\pandas\core\computation\expressions.py"", line 211, in evaluate     **eval_kwargs)    File ""C:\Users\pc\Anaconda3\lib\site-packages\pandas\core\computation\expressions.py"", line 122, in _evaluate_numexpr     result = _evaluate_standard(op, op_str, a, b, raise_on_error)    File ""C:\Users\pc\Anaconda3\lib\site-packages\pandas\core\computation\expressions.py"", line 64, in _evaluate_standard     return op(a, b)  ZeroDivisionError: division by zero",True
@fatohw,2017-06-23T11:31:48Z,0,"Can any one tell me how i can make my data set labeled? i already prepare my data set, but confused how to make the label(y) and feature(x), it is an OCR data set to my language.",True
@julianurrea,2017-06-09T17:00:53Z,0,"Why not? df['{}_target'.format(ticker)] = df.apply(lambda row: buy_sell_hold(row[c for c in row if c not in ticker])  I haven't tried, but i think is more pandorable",True
@thedscarves,2017-06-08T22:04:14Z,0,I keep getting an unsupported operand type(s) for /: 'str' and 'str' using this exact code how can I fix this?,True
@TadeKrispy4,2017-05-07T23:37:00Z,14,"Hi sentdex, your videos are great so far, thanks so much. A suggestion, in the future it would be really helpful if you included docstrings beneath your functions, providing a brief description of the role of each function.  Cheers, and keep up the good work!",True
@randiaz95,2017-04-18T17:56:55Z,0,isnt the data flipped when you get it? so pct_change() will give a discount not a growth rate,True
@canoq,2017-02-19T04:16:08Z,5,"*[df[""{}_{}d"".format(ticker, i)] for i in range(1, hm_days+1)]",True
@rodrigosilvanader,2017-02-18T00:50:00Z,0,Does anyone know why he uses pct_change() if it only gives us the pct_change related to yesterday's price?,True
@TheGreatPanic,2017-02-05T03:42:56Z,0,What does it mean when you do things like 'ticker for ticker in tickers' and 'c for c in args' ?,True
@hmm-.-,2017-02-01T22:28:00Z,0,does he have selenium tutorial ?,True
@bf2825,2017-01-30T12:43:17Z,0,Does anyone have this problem?  KeyError: 'ZTS_target',True
@dbseraph,2017-01-27T22:49:08Z,1,"I found an alternate solution to your mapping problem. I don't think it is anymore elegant than your solution though.  Pull the 7 columns into a new frame with filter. Then use apply with a lambda to run the buy_sell_hold function over that new frame.  i.e. df['{}_target'.format(ticker)] = df_days.apply(lambda row: bsh(row), axis=1)",True
@letsgo2mc,2017-01-26T09:26:43Z,0,"Hey,  I don't understand    df[""{}_target"".format(ticker)] =list(map...      in the extract_featuresets function. We get a column with 1,-1 or 0 but   the list(map()) function returns a list with 7 entries of 1,-1 or 0.   What do i miss? Thank you",True
@willsheffield2000,2017-01-26T04:01:34Z,2,Amazing you seem to do this off the top of your head. I started in assembly (Z80 - dating myself) and I had to constantly go to the book for off the wall commands.,True
@Kazchul,2017-01-25T16:46:16Z,51,"maybe use a list comprehension: list(map(buy_sell_hold, *[df['{}_{}d'.format(ticker, i)]for i in range(1, hm_days+1)]))",True
