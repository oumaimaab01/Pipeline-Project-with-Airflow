author,updated_at,like_count,text,public
@clementedomeykoprieto7435,2020-09-18T17:34:13Z,6,"Hi, thanks for the tutorial, very good. Question: in this program it could happen that we keep holding every time while the stock falls 1.5% as never falls more than 2% when we look up to 7 days forward. But in a large period of time it could have happened that the price felt for example 10% respect to the price we bought it as we kept holding, because it never changed within one week more than the requirement asked to sell. So, shouldnâ€™t we be comparing each column price with the price we bought the stock instead of the actual price to calculate the percentage change, in order to avoid that problem.",True
@andyso7500,2020-06-22T05:35:19Z,0,This guy is the best,True
@joneasterbrook1379,2020-05-18T09:43:23Z,1,"code 2020-05-18   import numpy as np import pandas as pd import pickle  def process_data_for_labels(ticker):     hm_days = 7 #this number is the number of days it checks fr buy sell hold     df = pd.read_csv('sp500_joined_closes.csv',index_col=0)     tickers = df.columns.values.tolist()     df.fillna(0, inplace=True)      for i in range(1, hm_days+1):         df['{}_{}d'.format(ticker,i)] = (df[ticker].shift(-i) - df[ticker]) / df[ticker]      df.fillna(0, inplace=True)     return tickers, df  def buy_sell_hold(*args):     cols = [c for c in args]     requirement = 0.02 # +/- percent a stock will rise or fall     for col in cols:         if col > requirement:             return 1         if col < -requirement:             return -1     return 0",True
@samsmusichub,2020-03-21T07:58:55Z,0,"What do you mean by ""pass"" and ""map""? Thanks.",True
@tigananguono2823,2020-03-12T13:18:37Z,0,Appreciate your awesome videos man!!,True
@LuccDev,2020-01-12T12:03:14Z,3,It's really crazy that with that boom in ML and bots for finance and cryptocurrencies this video hasn't hit 1 million views yet (which is fortunate for competition I guess !),True
@haneulkim4902,2019-04-14T07:58:01Z,0,"Can someone explain why he wrote cols = [c for c in args]? when user input multiple arguments doesn't it come in as tuples, therefore cols=list(args) wouldn't this work as well?",True
@pranotiramteke3389,2019-01-27T11:53:56Z,0,hello sir can you please help me in implementing NSGA II to telecom data... please... it would be a great help,True
@mr.roboter,2018-12-26T04:50:51Z,0,Hello dear mr.sendex can i ask something to you using email?,True
@douglashoffmann4337,2018-09-25T13:24:31Z,8,for video in all_sentdex_videos:     video['like']+ = 1     print('Thank you for the video. {} is the best of the type on youtube!'.format(video['title'])),True
@EranM,2018-05-27T09:10:39Z,0,"After looking at the logic for quite some time, buy_sell_hold() is too simplistic. Wouldn't you want to see a rising trend? Or average above ""requirement""? That simple ""if"" statement looks very unsatisfying.",True
@kinvert,2018-01-02T03:43:06Z,5,"This at 6:00?  for col in cols:         if col > requirement:             return 1         elif col < -requrement:             return -1         else:             return 0  haven't ran it yet, not sure how your whole code works. But that's what makes sense in my head right now.  Will probably find out I'm wrong in next video.",True
@ari.in_media_res,2017-10-16T02:22:19Z,0,"@sentdex fantastic tutorial! And apologies in advance for my lack of understanding of stock trading. Can you please help me understand how to interpret the data? Let's say I have the following spread: Data Spread: Counter({'0': 1700, '1': 1547, '-1': 1229}) Does that mean that these are the b/s/h calls for the entire time that we have the data for that particular company?   My predictions are coming out as Counter({1: 607, 0: 512}) Is this the number for the b/h calls for the last 7 days.  What action can the user take based on this data?",True
@akshaysingh9185,2017-04-14T20:34:51Z,2,"Thanks for all the good work. Really appreciate it. Keep up the infectious enthusiasm!  ## Here is a possible solution for dynamic handling of hm_days argument, as requested def extract_featuresets(tkr, hm_days=7, pctChangeRequirement=0.02):     tickers, df = process_data_for_labels(tkr, hm_days)     strX = ''     for i in range(1,(hm_days+1)):         strX = strX + 'df[\'{}_{}d\''.format(tkr,i) + ']'         if i < hm_days:             strX = strX + ','     print(strX)     #strX = 'df[\'{}_target'.format(tkr) + '\'] = list( map( buy_sell_hold, ' + strX + '))'     #eval(strX)     strX = 'list( map( buy_sell_hold, ' + strX + '))'     df['{}_target'.format(tkr)] = eval(strX) ## Smart folks may suggest better ways to do so.  ##Alternatively, shall appreciate what caused the commented lines approach to not work?  Best Wishes",True
@sukumarh3646,2017-04-01T04:51:15Z,0,"normally the number of Hold should exceed Buy, Sell calls. Let's say there are 8 Buy, 8 sell and 84 hold actions for 100days. If the code just says Hold for all the days, it becomes 84% accurate. So I want to eliminate all days where prediction is hold and the actual action should be hold from calculation of accuracy. How can I do this?",True
@joshwilson7470,2017-02-22T01:43:29Z,0,"If you're planning on using algorithmic trading to make micro-transactions how would you account for, and overcome, brokerage fees?",True
