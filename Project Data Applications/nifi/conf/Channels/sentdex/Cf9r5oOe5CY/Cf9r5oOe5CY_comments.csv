author,updated_at,like_count,text,public
@Faisal-jo5vk,2022-05-16T11:14:10Z,0,"i dont get why we had to change the name to blob id, and why we even have to loop through the list",True
@sankalpgupta6630,2020-09-02T17:33:31Z,0,What does these lines do ? if __name__== ___main__:     main(),True
@yonatantesfaye7957,2020-06-18T17:50:36Z,0,Hi guys...I'm YouTube beginner that try to improve my channel... I had subscribe your channel and like your video...Helping me means you help yourself to become a successful YouTuber ...Gods always bless people that help each other... Link below https://www.youtube.com/channel/UC3QMMw9Xo_nEA5wv2nUy6Xw,True
@anirudh6642,2020-06-01T14:06:02Z,0,that moment @7:00 when he just goes blah blah blah blah blah,True
@dunder9444,2020-01-14T13:55:03Z,0,Light mode is hurting my eyes ğŸ¤ªğŸ¤ªğŸ¤ª,True
@kingy.t2877,2018-03-22T11:28:53Z,3,a lot of blobs gets my head spinning,True
@barbarairena6714,2018-03-10T23:36:05Z,1,"how can I destroy/delete blobs using the destructor (__del__) if the blobs reach a certain area in the display (eg self.x>400 and self.y<300)?? I have no idea how to define the destructor inside the class. I guess it starts with def __del__(self): , but what do I write then?? And  afterward I want to use this destructor in an class function( def deathzone(self): if self.x > 400 and self.y<300: what do i write now? del(self)???",True
@rajatbhatia3655,2017-12-08T07:32:17Z,0,"set self.color =  (random.randint(0,255),random.randint(0,255),random.randint(0,255)) . . .and see multiple colors",True
@rodrigonascimento4868,2016-11-23T21:22:32Z,3,"Let's say I want to create a list of Blobs that move individually just like you did, but instead I want to do that from within the Blob class.  Is that possible?",True
@dionleijnse191,2016-11-23T20:48:35Z,4,"If the blobs are stored in a list, why can't you just use the list index of the blob as it's id?",True
@acelere,2016-11-23T17:27:00Z,2,"Hi Harrison, I think that the place to store the ID would be within the object. After all, the ID is part of the blob, isn't it? In your code, eEach dictionary has its own enumerate (the blue and red dicts), so the identifiers are not unique (amongst dictionaries). I don't see a problem with this. And assuming there is not really a problem, I would place the IDs in the object, like so:  def __init__(self, color, blobid):   self.x = random.randrange(0, WIDTH)   self.y = random.randrange(0, HEIGHT)   self.size = random.randrange(4,8)     self.color = color   self.id = blobid ... for blobs in blob_list:   for blob in blobs:    pygame.draw.circle(game_display, blob.color, [blob.x, blob.y], blob.size) ...  blue_blobs = [Blob(BLUE, i) for i in range(STARTING_BLUE_BLOBS)]  red_blobs = [Blob(RED, i) for i in range(STARTING_RED_BLOBS)]  Agree?",True
@DivusMeta,2016-11-23T07:56:28Z,0,"You can shorten the long dict lines by applying enumerate straight to the range and by using dict comprehension. E.g. {key: val for key, val in enumerate(range(limit))}",True
@blaksand1,2016-11-22T01:22:59Z,0,up with you bro,True
@riseoftech4k332,2016-11-21T22:11:07Z,1,Please make another raspberry pi robotic tutorial playlist.. thank you,True
@adrianstobbe9748,2016-11-21T20:00:04Z,2,One very simple question: How do you indent multiple lines? Ctrl+] doesn't work for me. I am using a german keyboard layout.,True
@m41kdevelops41,2016-11-21T18:02:57Z,1,"in the class Blob, we can assign a unique id there using time.time() as the id right ?  class Blob:     def __init__():         self.id = time.time()  that's what I mean.",True
,2016-11-21T17:41:49Z,0,wish you would show result of the code i wont use anything i cant see working!,True
@omardelvillar6344,2016-11-21T16:31:45Z,5,"Hello Harrison, great tutorial as usual. I have two suggestions; one for the IDs, you might as well create a class attribute as a counter and in the object's __init__ method take that number and then increase the value of the class attribute for example:  class Blob():  IDs = 1           def __init__(self...):   self.id = Blob.IDs   Blob.IDs += 1                 ...  Another thing is that in your method move() you are using object's wide variables (self.move_x and self.move_y) instead you should use methods variables (move_x and move_y) because you are probably not going to use it again outside of the scope of that method thus is a waste of memory.   Just a suggestion, I'm not an expert :)",True
@harutakakawamura9240,2016-11-21T15:12:48Z,0,Can't wait for next tutorial!,True
